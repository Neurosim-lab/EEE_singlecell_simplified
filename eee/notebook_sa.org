* 03-27-17 morphological recontruction
Morphological search for PFC L5
https://goo.gl/c2m36d

already on modeldb:
https://senselab.med.yale.edu/modeldb/ShowModel.cshtml?model=144089

discussion about axon:
sergio [11:33 AM]
I remember this search, most of them don’t have axon

billl [11:33 AM]
that's ok -- can just add an axon;  that's easier to add generically than to add dends

[11:33]
axon is always only partial anyway

[11:34]
whcih is just as well since don't want to handle the whole thing anyway

sergio [11:34 AM]
ok

ramcdougal [11:35 AM]
typically for a network simulation, you're better off with a short axon because that gives you more "delay" between firing and synaptic events, which means less need for MPI communication synchronization, which means faster sims

billl [11:37 AM]
also if try to run a big branched axon that will suck up a lot of CPU

i was thinking a single fig with all 4 cells next to each other

[2:57]
here's one i did for CA3

billl [2:58 PM]
uploaded this image: 03jul19CA3cells.png
Add Comment

sergio [2:58 PM]
ic

billl [2:58 PM]
also from neuromorph

sergio [2:58 PM]
ok I’ll do it like that

billl [2:59 PM]
maybe also show some of the nicotine ones -- i'm curious if they really look different

sergio [2:59 PM]
ok

sergio [5:52 PM]
uploaded this image: h_2a.png
Add Comment

sergio [5:52 PM]
uploaded this image: 45_3a.png
Add Comment

sergio [5:52 PM]
uploaded this image: 39_4a.png
Add Comment

sergio [5:53 PM]
uploaded this image: 36_4.png
Add Comment

sergio [5:53 PM]
those are the proposed for the sims

sergio [5:54 PM]
uploaded this image: 32_3.png
Add Comment

sergio [5:54 PM]
uploaded this image: 31_3a.png
Add Comment

sergio [5:55 PM]
the last 2 were treated with nicotine

billl [7:19 PM]
they are all a bit sparse -- send to srdjan and ask him to pick the most beutiful ones -- which ones are smokers?

sergio [7:40 PM]
32_3 and 31_3a are the smokers

billl [7:48 PM]
so not really more dends just a little longer i guess

sergio [7:50 PM]
yeah, that is the difference. I’m going to send a document to srdjan to see what he thinks

billl [7:50 PM]
36_4 looks upside down? -- maybe flip those

sergio [7:51 PM]
yep, i’m going flip that one and the h_2a

billl [7:52 PM]
i had a bunch of rotate routines in hoc but you prob want to rewrite those in py

sergio [7:53 PM]
yep, I don’t know how to do that. I was just thinking about the images

billl [7:56 PM]
my routines are in /usr/site/nrniv/local/hoc/shape.hoc

[7:56]
good exercise to translate some (that you need) into python

[7:56]
section on //* move cells around, crm(), translate(), zrotate()

billl [7:57 PM]
added this Perl snippet
    theta= -$1/360*2*PI  // don't know why it is negative here
    for ii=0,n3d()-1 pt3dchange(ii,x3d(ii)*cos(theta) -  y3d(ii)*sin(theta),\
                                y3d(ii)*cos(theta) +  x3d(ii)*sin(theta),\
                                z3d(ii), diam3d(ii))
Add Comment

sergio [7:59 PM]
ok, I’m going to work with that routine


sent email to srdjan:


Dear Srdjan,

I will start to implement the simulations from the EEE project on a detail reconstructed neuron. I would like to have your opinion over some neurons, which are on the neuromorph.org database. The main concern is about the dendrite three, most of these neurons look like thin-tufted type. Do you have a preference for the morphology that we should use?

In the pdf, you can see some examples of the neurons on neuromorph. All of these neuron are from PFC L5 in rats

Best,

Sergio

[[file:/Users/sergioangulo/Dropbox/morpho/morphology_examples.png]]


*notebook*03-28-17

reply from Srdjan

Dear Sergio,

Thank you for asking my input on neuron morphology.
In the PDF document I found 4 neurons.
I will gladly discuss these 4 morphologies today at the 15:15 meeting and select the best one with your help. Would that work for you?

Srdjan


Goals:
1. read about notebook at neurosim
2. read about sync data
3. rotate reconstructed neurons


mercurial tutorial: http://hginit.com/01.html

hg init: creates a repository
hg add: schedules files to be added to the repository. They won’t actually be added until you commit
hg commit: saves the current state of all files to the repository
hg log: shows the history of changes committed to the repository
hg revert: revert changed files back to committed version
            --all: all files
hg status: shows a list of changed files
hg diff: shows what changed in a file
hg remove: schedules files to be removed from the repository. They won’t actually be removed until you commit.
        e.g. hg remove filename.txt
hg update: update the working directory to a particular revision
hg serve: runs a web server to make the current repository accessible over the Internet
hg clone: make a complete copy of an entire repository

on neurosim in your dir: rm -rf .hg;
cd sim;
hg init;
hg add *.py;
hg com -m ' add py files'

[12:34]
then clone to your laptop if you want to work on their -- generally better if you work on neurosim since needs to all be able to run on neurosim


problem: can't push from local directory to central repository

reading about notebooks on emacs
https://docs.google.com/document/d/1kdKEW8McsUI1nxuFftPI1F7LesGzkeflmt-lya3NpAU/edit

tutorial
https://www.youtube.com/playlist?list=PL-mFLc7R_MJd5FoIrbNAcndPT50_hbVST
https://github.com/byuksel/Emacs-Tutorial-for-Beginners/blob/master/emacs_tutorial_reference.txt

meeting with srdjan:
use 39_4a basal dendrite tree and 45_3a for apical dendrite

* 03-29-17

1   work on reconstructed neuron

Problems:   1. NEURON is not working on my no.neurosim
            2. hg is not working
            3. soma and apical dendrite are not connected
not finished.
class with salva on NEURON and homework after.

* 03-30-17

goals: continue working recontructed neuron

problems: no able to use routine by bill

found:

blue brain project tool:

https://github.com/BlueBrain/NeuroM
    Perform checks on neuron morphology files
    Visualize a neuronal morphologyexit()

Robert routine for morphology:
https://github.com/ahwillia/PyNeuron-Toolbox/blob/master/PyNeuronToolbox/morphology.py

use visualizaion on blender
https://github.com/mcellteam/neuron_launcher

use visualization on cinema4d
https://github.com/NWoolridge/NeuronBuild


better solution on NeuroM:
https://github.com/BlueBrain/NeuroM/blob/master/neurom/geom/tests/test_transform.py
\
* 03-31-17
translation, rotation and export file was accomplished with:
http://neuronland.org/NLMorphologyConverter/NLMorphologyConverter.html

morphology plotting with NeuroM

routines on python:

class PTcell (Cell3D):
    def __init__ (self,fmorph):
        Cell3D.__init__(self,fmorph)


    def init_once (self):
        #self.apic()
        #self.dend()
        #self.soma()
        #self.recalculate_x_dist()

    #def recalculate_x_dist (self):
        # set the center of the soma as origin
        #h.distance(0,0.5,sec=self.soma[0])
        """
        for sec in self.all:
            for seg in sec.allseg():
                seg.x_savedist = h.distance(seg.x,sec=sec)
        # stays nested to compare soma to apicals
        # list of apicals that are Upper Trunk
        self.nexusdist = nexusdist = 1e9 # calculate distance to tuft here

        apicUpperTrunk =  [23, 24, 25, 32, 33, 46, 51, 52, 53, 78]
        for apicIndx in apicUpperTrunk:
            # excludes any apicals not in the list
            for seg in self.apic[apicIndx].allseg():
                nd = h.distance(seg.x,sec=self.apic[apicIndx])
                if (nd < self.nexusdist):
                    self.nexusdist = nd
        """

    #
    def move(self, shiftx, shifty, shiftz):
        """
        Set the base location in 3D and move all other
        parts of the cell relative to that location.
        """
        self.shiftx = shiftx
        self.shifty = shifty
        self.shiftz = shiftz
        for sec in self.all:
            # note: iterating like this changes the context for all NEURON
            # functions that depend on a section, so no need to specify sec=
            for i in range(int(h.n3d(sec=sec))):
                x = h.x3d(i, sec=sec)
                y = h.y3d(i, sec=sec)
                z = h.z3d(i, sec=sec)
                h.pt3dchange(i,
                        self.shiftx + x,
                        self.shifty + y,
                        self.shiftz + z,
                        h.diam3d(i, sec=sec), sec=sec)

    #
    def rotateZ(self, deg_360):
        """Rotate the cell about the Z axis in deg counter clokwise"""
        theta = (deg_360 * 2 * pi)/360 #deg to radians
        for sec in self.all:
            for i in range(int(h.n3d(sec=sec))):
                x = h.x3d(i, sec=sec)
                y = h.y3d(i, sec=sec)
                c = cos(theta)
                s = sin(theta)
                xprime = (x * c - y * s)
                yprime = (x * s + y * c)
                h.pt3dchange(i, xprime, yprime, h.z3d(i, sec=sec), h.diam3d(i, sec=sec), sec=sec)

    def rotateY(self, deg_360):
        """Rotate the cell about the y axis."""
        theta = (deg_360 * 2 * pi)/360 #deg to radians
        for sec in self.all:
            for i in range(int(h.n3d(sec=sec))):
                x = h.x3d(i, sec=sec)
                z = h.z3d(i, sec=sec)
                c = cos(theta)
                s = sin(theta)
                xprime = (x * c - z * s)
                zprime = (x * s + z * c)
                h.pt3dchange(i, xprime, zprime, h.y3d(i, sec=sec), h.diam3d(i, sec=sec), sec=sec)

    def rotateX(self, deg_360):
        """Rotate the cell about the y axis."""
        theta = (deg_360 * 2 * pi)/360 #deg to radians
        for sec in self.all:
            for i in range(int(h.n3d(sec=sec))):
                y = h.y3d(i, sec=sec)
                z = h.z3d(i, sec=sec)
                c = cos(theta)
                s = sin(theta)
                yprime = (y * c - z * s)
                zprime = (y * s + z * c)
                h.pt3dchange(i, yprime, zprime, h.x3d(i, sec=sec), h.diam3d(i, sec=sec), sec=sec)

    def diameter_apic(self, shift_diam)
        self.shift_diam = shift_diam
        for sec in self.all:
            # note: iterating like this changes the context for all NEURON
            # functions that depend on a section, so no need to specify sec=
            for i in range(int(h.n3d(sec=sec))):
                x = h.x3d(i, sec=sec)
                y = h.y3d(i, sec=sec)
                z = h.z3d(i, sec=sec)
                d = h.diam3d(i,sec=sec)
                h.pt3dchange(i, x, y, z,
                        self.shift_diam + d, sec=sec)
cell1 = PTcell(fmorph='/Users/sergioangulo/projects/eee/sim/cells/PFC_hyb.ASC')


* 04-3-2017
Changed diameter of axon to 1um

* 04-4-2017
meeting with Srdjan
suggested to change diameter of apical dendite

* 04-5-2017
sent email to srdjan with new morphology:


Dear Srdjan,

I modified the diameters of the neuron according to our meeting yesterday. The soma diameter was increased to 4.88 µm, the apical dendrite root diameter was decreased to 3.24 µm, and the axon root diameter was increased to 2.61µm. You can check the morphology in the attached files. Please let me know if you consider that we need to modify some parameters.

Best,

Sergio
PFC_hyb.png
PFC_hyb_dend.png

* 04-6-2017
srdjan replied back:

Dear Sergio,
Soma diameter is 15 to 20 um in real neurons.
Bill was right at the last meeting:
"We are arbitrarily changing morphology."
"This has strong potential to create strong opposition with reviewers."
At this point, I suggest we use my reconstructed PFC L5 cell.
I am using this cell in my current project on apical tuft dendrites.
My paper is based on optical recordings from the apical tuft branches and minimal modeling in one figure, where I change A-type conductance and monitor AP backpropagation into the apical tuft branch (see figure attached).
I think we should use this particular cell (see figure attached) to model plateau potentials in basal dendrites. If we use a reconstructed cell, we no longer have discussions on cable diameters used in our model.
*
Alternatively, you may wish to use a high resolution of the perisomatic region of the enclosed PFC cell to adjust your cables accordingly. I can provide that as well.
*
Sergio, I am happy to inform you that Peng Gao received an official job offer last night from our university officials? We want to bring her to UConn Health to do postdoc with us and work on plateau potentials, glutamate processing, synaptic integration and EEE.
Best,
Srdjan


#####
next: look for file for morphology from Srdjan

hoc file locateed at:
https://senselab.med.yale.edu/modeldb/ShowModel.cshtml?model=117207&file=/acker_antic/Model/CA%20229.hoc#tabs-2

salva solution to import and plot cell.hoc in netpyne:
from netpyne import specs, sim

# Network parameters and simulation configuration
netParams = specs.NetParams()  # object of class NetParams to store the network parameters
simConfig = specs.SimConfig()  # object of class SimConfig to store simulation configuration

## Population parameters
netParams.popParams['PFC'] = {'cellType': 'PFC', 'cellModel': 'HH', 'numCells': 1}

## Import PFC cell
netParams.importCellParams(label='PFC_rule', conds={'cellType': 'PFC'}, fileName='CA_229.hoc', cellName='', cellInstance=True)

# Create network
sim.create(netParams=netParams, simConfig=simConfig)

# plot cell shape
fig=sim.analysis.plotShape(iv=True, ivprops=None, includePost='PFC', saveFig=True)

####

morphology editor
http://neuron.duke.edu/cells/cellArchive.html

export asc to python file:
https://github.com/notashutosh/Morphology-parser-for-NEURON

printing all position
https://www.neuron.yale.edu/phpBB/viewtopic.php?f=15&t=2902
morphology commands on neuron
https://www.neuron.yale.edu/neuron/static/docs/help/neuron/neuron/geometry.html#diam3d

* 4-7-17
conversation with  Bill, he suggested to start working on the network part of the project with netpyne.

http://neurosimlab.org/netpyne/

follow tutorial:
http://www.neurosimlab.org/netpyne/tutorial.html#

package reference:
http://www.neurosimlab.org/netpyne/reference.html?highlight=axon

advance lib:
http://www.neurosimlab.org/netpyne/advanced.html#importing-cells

* 4-10-17

Goal:   to work with a network model
        use the file from bill: /u/billl/nrniv/AP/netw.py

Changes:    Create a second column with smilar organization
            Changed the connectivity rules:
                ##column a
                netParams.connParams['aE->aI']
                netParams.connParams['aE->aE'] ##to Adend dends
                netParams.connParams['aI2->aE2']
                netParams.connParams['aI4->aE4']
                netParams.connParams['aI5->aE5']

                ##b-column
                netParams.connParams['bE->bI']
                netParams.connParams['bE->bE'] ##to Adend dends
                netParams.connParams['bI2->bE2']
                netParams.connParams['bI4->bE4']
                netParams.connParams['bI5->bE5']

                ##column a to b
                ##to basal dends
                netParams.connParams['aE->bE']
                netParams.connParams['aE->bI']
            Changed morphology of Excitatory neuron
                soma, apic dend, and 2 basal dend.

            Problems:
                no able to integrate SPI7 to model.


* 4-11-17

Goal: Integrate SPI7 to network


Conversacion with bill:
confused by your repo sergio? -- you have a bunhc of .py files in eee and a bunhc in eee/sim  -- better to keep all in same place unless 2 different sims?  but then maybe better to have as sep repos

sergio [2:40 PM]
ok I’ll organize those files

billl [2:41 PM]
ok, if i want to start running now -- which set are you going to remove?

[2:41]
you know how to remove btw?

[2:41]
hg rm

sergio [2:42 PM]
Do I have to hg add the files that I need to remove?

billl [2:43 PM]
no but you have a pile of them already added

[2:44]
oh sorry my mistake

[2:44]
i think

[2:44]
both

[2:44]
i'm confused

[2:44]
so where do you want to work in eee or eee/sim ?? -- does look like redundant

[2:46]
i'm lost -- sorry -- did you mirror joe's sim?

sergio [2:46 PM]
some of the files to compile the SPI7 cell

billl [2:47 PM]
SPI7 is not py?  py is not compiled

[2:47]
maybe start again?  unless you know what's going on here?  do you have an nb here somewhere that explains?

sergio [2:48 PM]
I’m starting to do a notebook, but I haven’t explained all the changes for the folder

billl [2:49 PM]
so far i can't even find the folder -- also not sure why you changed its name

[2:49]
ok so what's the plan?

[2:49]
oh you didn't clone -- you started a new one i guess

[2:49]
ok so where do you want to do this ?

sergio [2:50 PM]
I was planning to use eee_sergio/sim for the main repo

billl [2:51 PM]
ok so how about just calling it eee - easier to remember

[2:51]
so eee will have your nb?  and eee/sim will have the sim?

[2:51]
so let's set up a repo in eee/sim ?

[2:51]
that will be similar to what joe has i think

[2:52]
or you want the nb in same repo? -- that's ok too though then can't get fully parallel annotations

joe [2:52 PM]
What do you mean by parallel annotations?

billl [2:52 PM]
in nb good to have version numbers for sims and other related stuff

[2:53]
so if the nb itself is being committed in same sim that commit has a sep number than the commit of the current sim of itself

[2:53]
just a little more confusing but once you realize that it's not terrible

[2:54]
i usualy keep nb in sep repo for that reason so can have a clean sequence in the sim repo

sergio [2:54 PM]
ok ic

billl [2:54 PM]
so eg consecutive versions have to do with some change in the sim

joe [2:54 PM]
Yeah, that makes sense. My nb is in eee all in one repo…

billl [2:55 PM]
whatever seems easier to you

[2:55]
can be easier just to keep everyting together

[2:55]
in my case i have 30+ nbs so keeping them all in 1 place ended up being easier for me

[2:55]
28 nbs

[2:55]
for sims

[2:56]
then other nbs for other stuff

[2:56]
few decades

sergio [2:57 PM]
I have cloned joe’s folder as eee in my projects folder. I was thinking to use a different name to avoid confusions

billl [2:57 PM]
more confusing if use a different name

[2:57]
since then the relation not as obvious but if you prefer nbd -- but either way should document this in nb

[2:58]
so time to start an nb :)

sergio [2:59 PM]
ok


* 4-12-17
SPI7 was integrated into netpyne
Goals: Create a hg repo with the network project.
        1.  to start a project: hg init
        2.  to add files: hg add filename.txt
        3.  to commit files to repo: hg cm -m 'message of update'
        4.  to delete files: hg rm filename.txt
hg was created under hg clone ssh://no.neurosim.downstate.edu://u/sergioangulo/projects/eee/sim
File with netpyne was netw_3.py
Bill suggested to chege the filename to netw.py

Problem:
I included multiples in the repo. Specially files were copied in the mod dir.
Mod files are central at neurosim and can be linked to the local directory.
Solution:
1. Compile with mkmod and multiparameters files
2. Use a wrapper, a python file that execute the compiler.
Bill's preference is to use mkmod

* 4-13-17
Goals: Check repo.
Problems: I didn't add the mod dir with the files neeeded to compile.
Solution:   1st. Tried to add the individual mod files to the repo, but it created a large repo.
            2nd. Started again to make the repo.
            3rd. Just added the parameters.multi file to the mod dir. Took one from Joe dir.
                    on terminal:
                    hg add mod/parameters.multi
            4th. To run the model should just mkmod in the mod dir. It creates symlinks and x86_64 dir that can make SPI7 to run.

Joe's aliases for hg:
    alias hgpush  'hg push ssh://no.neurosim.downstate.edu://u/graham/projects/eee/; sshno "cd projects/eee; hg update"'
    alias hgpull  'hg pull ssh://no.neurosim.downstate.edu://u/graham/projects/eee'

bill's list of aliases for hg:
https://neurosim.slack.com/files/billl/F4Y870VKK/list_of_my__too_many__hg_aliases.pl

Salva's list of aliases for hg:
    alias hc 'hg commit -m \!:1'
    alias hcp 'hg commit -m \!:1 ; hg push'
    alias huc 'hg up -C'
    alias gc 'git commit -m \!:1'
    alias gcp 'git add -u :/ ; git commit -m \!:1 ; git push'

Problem: in laptop the compliling from the repo needs a copy of misc.h
Solution: add the file locally.

Problem: Running netpyne a message error:
            Notice: <netpyne.cell.CompartCell object at 0x7fbef659eed0>.axon(0) had previously been connected to parent <netpyne.cell.CompartCell object at 0x7fbef659eed0>.soma(0)
Solution: Salva checked the file and noticed a line that define cellRule twice after importing the SPI7.
            simply got rid of that line: netParams.cellParams['Erule'] = cellRule

Problem: Salva suggested to make the repo from the eee dir instead of the subdir eee/sim
         nb should be in the eee dir.
         other dir can be added to eee and included in the repo.

Next step: reorganize the netw.py file in different files:
                divided by specs, sim, and init.

* 04-14-17
Goals: split the model
Solution:   1st. Check organization from the M1 model from salva or EEE from joe.
            2nd. Easier to follow was Salva's:
                    /u/salavadord/Models/M1
            3rd. Created cells subdir on sim dir
            4th. move SPI7.py to cells dir.
            5th. copied runsim, init.py from salva's
            6th. On runsim, run model using mpi
                    for this needs to specify the number of nodes as:
                    ./runsim 4
                    runsim will launch init.py as:
                    mpiexec -np $numprocesses nrniv -python -mpi init.py
            7th. init.py reads a cfg.py and netParams.py in the same dir and run model.
            8th. cfg.py imports specs.SimConfig and do recording, analysis, and plotting of the model
            9th. netParams.py constains network parameters, cell parameters, and connectivity rule.
                    Salva has different files for the connectivity rules. Usefull for later implementation.

Problems:   Succefully importing SPI7, but could no read an interneuron created on netpyne.
Solution:   Created a separated py file on cells subdir (sIN.py) with basic morphology (soma, 3 dendrites and axon)
            check firing with iclamp.
            added to netParams as an HH model.
            Succefully readed by netpyne.
            sIN as simplified InterNeuron

Problems:   sIN seems to be slow, AP width is too broad.

Folder was reorganized and repo was created on hg clone ssh://no.neurosim.downstate.edu://u/sergioangulo/projects/eee
files added to repo: runsim, init.py, cfg.py, netParams.py, cells/SPI7.py, cells/sIN.py, mod/parameters.multi
checked in laptop if repo works.
Only need to add misc.h to compile succesfully.
On laptop use "ipython -i init.py" to run the model.
mpi was not working properly in laptop, cannot do runsim.
on neuronsim, the model run without problems using mpi.

* 04-17-17
goals: improve sIN
Problems:   incresed conductances for sodium and k.
            It produces depolarizations but not as spikes
            reduced conductances don't produce depolarizations at all
            Tried different cells:
                Sam's model Basket cells: https://senselab.med.yale.edu/modeldb/ShowModel.cshtml?model=185858&file=/CaHDemo/
                    it has 'Nafbwb' and 'Kdrbwb' for sodium and Potassium and only soma compartment.
                    created file sIN_2.py
                    Compiled in laptop with mod files from modeldb (mkmod)
                    it worked when inserted an iclamp in laptop.
                    it doesn't work  integrated to netpyne. netParams can not be loaded.
                Salva's M1 interneuron:
                    LTS3.hoc
                    FS3.hoc
                    Both can not be integrated to netpyne.
                    Tried to compile using Salva's compiler for M1, it did not work.
            PlotConn doesn't work. Ask salva
Next step: ask for advice to Salva and bill.

* 04-18-17
goals:  update nb
        improve interneuron
        prepare for meeting at 3:15pm

at meeting:
        improve sampling rate of voltage traces (ask salva)
        Srdjan discussed about columnar organization
                -need to aproach to already stablished models
                -Salva pointed out a 300um diameter column
                -need to improve visualualization of connectivity. Use PlotConn.
        Also Srdjan discussed about the presence of dendritic plateau:
                -these should be observed by >300ms of duration
        Srdjan and bill discussed about the connectivity convergence needed for the dendritic plateau.
        Salva shared a reference that can help for the connectivity in the PFC:
            http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004930
        Next steps should be to model connectivity in the PFC (short range), and then add long range connections.

* 04-19-17 annual research day

* 04-20-17

Goal:   To read connectivity on PFC (http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004930)
        Main points:
            - Only Layer 2/3 and Layer 5
            - pyramidal neuron on both
            - fast spiking (local inteneuron), martinotti (far reaching), large basket cell(cross-column) and bitufted interneuron (cross-layer) (https://www.nature.com/nrn/journal/v14/n3/full/nrn3444.html, https://www.nature.com/nrn/journal/v5/n10/full/nrn1519.html)
            - L2/3= 47% exc, L2/3 inh 10.4%,L5 exc 38%, L5 inh 4.6% (http://www.sciencedirect.com/science/article/pii/000689939390884P)
            -
            - Column diameter = 300um (http://www.sciencedirect.com/science/article/pii/S0301008210001103)
            - longer NMDA tau
            - Use spi7 to produce a new L2/3 PC?
            - Modeldb link: https://senselab.med.yale.edu/ModelDB/showModel.cshtml?model=189160
            - cortical thickness (1.8 mm  in rats at P80) (http://onlinelibrary.wiley.com/store/10.1111/adb.12364/asset/adb12364.pdf?v=1&t=j1qyeq96&s=7fbeae6fe2b3e468d8679c5c2ca1079072fa588b)

* 04-21-17

Goal: Simulate connectivity according to PFC and Hass' paper.

Solutions
    -Created 2 main layers: Layer 2/3 and Layer 5/6
    -Simulated connectivitiy with only local interneurons using FS interneuron from M1 model.
    -Changed synaptic rules: Integrated AMPA and GABA based on Salva's M1

Problems: combine AMPA and NMDA in the same synapses, it produce the sim to crash.
Solution: It seems that inducing to many combine AMPA and NMDA synases, it is not tolerated by the sim.
            I just added one combine NMDA AMPA sim to the long range connectivity.

    -Added netsim to all the the pops except bL5 with AMPA
    -netsim weight min is 0.03
    -long range connectivity reduce to 0.002, no long depol
    -reduced connectivity -covergence (0,4)
    -final weight for plateau 0.0025


* 04-24-17

Goal:   Change sampling, produce plot2net.
        Produce connectivity matrix plot from Hass 2016 model in PFC.

We dowloaded the model from modelDB: https://senselab.med.yale.edu/ModelDB/showmodel.cshtml?model=189160
model has to be run in Matlab using RunIDNet.m

On neurosim, you run matlab using matlab13 on terminal.

We were looking for the file that contained the pcon parameters. First, we tried all the .mat files. Big .mat file after running the model, produces a lot information. SPMtx was the parameter that we were looking for.

We tried to import .mat to python

* 04-25-17
Goals to integrate SOM cell

Accident: subl crashed and delete all the lines on netParams.
            Recover a previous version but lost last part of work
After recovering file, I added the LTS cell file on netParams:
cellRule = netParams.importCellParams(label='SOM_simple', conds={'cellType':'SOM', 'cellModel':'HH_simple'},
    fileName='cells/LTS3.hoc', cellName='LTScell1', cellInstance = True)
Follow connectivity rules from hass2016 for far reaching interneurons.


*04-26-17
goals: do matrix pij of hass 2016
first: understand  matrix array in python.
        https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html
        np.zeros(shape, dtype=float, order='C') creates an array of zeros
        shape= matrix dimension
        dtype= data type (float, integer, custom)
        order= 'C' in row
        can be done just with shape.
        eg. pCon = np.zeros((16,16))
second: indexing into the matrix
        set position as a list and give a value:
            pCon[1] [1] = 0.1393
        can also index a list:
            wt[3] [0:14] = [1,2,3,4,5,6,7,8,9,10,11,12,13,14]
            at row 3 will index from 0 to 14 the values on the list.
 third: after creating matrix, do ploting
        use imshow()
        example:
            ax.imshow(pCon, interpolation='nearest', cmap='plasma')
        colormap is called on cmap
        cmap options are here:
            https://matplotlib.org/examples/color/colormaps_reference.html
        Also do a referecence color bar
        create subplots:
            fig, ax = plt.subplots()
            cax = ax.imshow(pCon, interpolation='nearest', cmap='plasma')
        define color bar with thicks:
            cbar = fig.colorbar(cax, ticks=[0,0.3,0.6,0.9])
            cbar.ax.set_yticklabels(['0','0.3','0.6','0.9'])
        then plot:
            plt.show()

problems: model use p(4) on function to define connectivity
how to run the model:
    runIDNet.m on matlab
connectivity info on ConfigIDNet.m
lines to understand:
    pCon(2:7, 2:7)      = p(4)*0.2500;                                      % I   ->I
    pCon(9:14, 9:14)    = p(4)*0.6000;
p function is defenied on SetCon_CommonNeighbour_Recur.m
p  depends on connectivity by distance
    function p = p_calc(X, pair_id, N_neigh, pCon, slope)

    % Take out self-connections
    ind_diag = ((1:Nout)-1)*Nout + (1:Nout);
    X(ind_diag) = zeros(1,Nout);
    p(:,1) = unique(N_neigh(N_neigh>=0));    % do not use self-connections(autapses)
    pair_id_selected = find(X>0);
    N_neigh_selected = N_neigh(ismember(pair_id, pair_id_selected));
    for i=1:length(p(:,1))
        pair_act = pair_id(N_neigh == p(i,1));
        p(i,2) = length(pair_act);
        p(i,3) = sum(N_neigh_selected==p(i,1));
        p(i,4) = sum(N_neigh_selected==p(i,1)) / length(pair_act);
    end;
on model apperently all the connections are set to 1.

Problem: Salva and Bil discussed that this PFC model contains few to nothing in diagonal connectivity (self connectivity) in Hass model and that this is not normal for a cortical model.

Hass model has 2 references for local clusters:

https://www.nature.com/nature/journal/v433/n7028/full/nature03252.html
http://www.pnas.org/content/108/13/5419.long

Salva: Ed Callaway Nature paper and Markram PNAS paper … think can just discard those
Slava: rat S1 (papers) (of course… hbp)
bill: yeah so might be realated to barrels which are very concentrated connectivity

callaway: rat visual cortex
markram: barrel cortex

* 04-27-17
Goal: check for connectivity in PFC:
reading this paper:
    /u/sergioangulo/papers/DeNardo_2015.pdf
points: increased long range inputs and decresed local connectivity in compare to barrel cortex.
looking on some recent publications, most of the interneurons in PFC are PV, SOM, and VIP
according to this paper:
    /u/sergioangulo/papers/pinto2015.pdf
another paper mentioned that the interneurons in the PFC comprised the 16.4% of the total population of neurons.
    /u/sergioangulo/papers/gabbott_1997.pdf
and divided them by PV, CR, and CB+.
I was thinking I can work including the neurons from salva’s M1 model of L2/3, 5A and 6
and include a VIP interneuron in the model

* 04-28-17
Goals: work on the grant report:
https://docs.google.com/document/d/1KEUVMrgh_9-5PviW_PkZmZxISKQMmgrWtaCs15Saor4/

Include data from poster and last figs from Joe and me.

* 05-01-17
Goals:  Abstract for SfN
        Integrated neuron L2 and L6 to model

* 05-09-17
Problems: on 05-08-17 lost information of notebook for 1 week. Tried to improve repo, and apparently restored repo from previous version.

Previously:

    Created a network with characteristics:

    Columns are 300um diameter. 1600um height (Gabbott 1997)
    L2: 200-623um
    L5: 623-1068um
    L6: 1068-1537um

    Number of cells were calculated according to densities in the PFC in rats (Gabbott 1997)
    L2: 118193/mm3
    L5: 41283/mm3
    L6: 116193/mm3

    GABAergic cells proportion was calculated by layer (Gabbott 1997):
    L2: 20.6%
    L5: 34.4%
    L6: 9.75

    Three different interneurons in the PFC: PV, SOM, and VIP interneurons (0.41 : 0.28 : 0.31) (Gabbott 1997)

    Created a network with characteristics:

    Columns are 300um diameter. 1600um height (Gabbott 1997)
    L2: 200-623um
    L5: 623-1068um
    L6: 1068-1537um

    Number of cells were calculated according to densities in the PFC in rats (Gabbott 1997)
    L2: 118193/mm3
    L5: 41283/mm3
    L6: 116193/mm3

    GABAergic cells proportion was calculated by layer (Gabbott 1997):
    L2: 20.6%
    L5: 34.4%
    L6: 9.75

    Three different interneurons in the PFC: PV, SOM, and VIP interneurons (0.41 : 0.28 : 0.31) (Gabbott 1997)

    Created a second network with only IT5 neurons to drive activity in main column.

    tried to do connectivity according to hass 2016. Model doesn't run with too many cells and connectivity rules.

    Only connectivity on mPFC is on DeNardo 2015. It only describes connectivity to L5 neurons.

    Connectivity: For the time beign, I'm going to use old connectivity.
    problems:   no VIP in previous connectivity
                2 pyr L5 cells on new model
                too many cells.

lab meeting:
    Salva suggested to use a second neuron on L6, a CT also described in the M1 model.
    Bill suggested to take the second column of only L5 neurons, and drive the column with a NetStim or i-clamp.
    Salva and Bill suggested to graph strenght from Hass 2016, and create a new one with values from the dystonia model on cells that are on Hass 2016.


* 05-10-17
goals: include CT6

Based on model M1 cells were created with CSTR6. Population was set to 50% of the total excitatory neuron on L6.

Then worked to do matrices with pconn, weight, and strength.

Removed L5 neurons of the second column.

problem: original pcon values on matlab included a interneuron to interneuron connectivity between all of them that I didn't include originally.
original hass model code:
    pCon(2:7, 2:7)      = 0.2500;                                      % I   ->I
    pCon(9:14, 9:14)    = 0.6000;                                      % I   ->I
Change that and plotted again
For the plots, i used colormap 'jet'

For the new matrix, organization of cells were:
# (1) L23-IT  (2) L23-I-PV  (3) L23-I-VIP   (4) L23-I-SOM
# (5) L5-IT   (6) L5-PT    (7) L5-I-PV  (8) L5-I-VIP   (9) L5-I-SOM
# (10) L6-IT   (11) L6-CT    (12) L6-I-PV  (13) L6-I-VIP   (14) L6-I-SOM


* 05-11-17
Goal modify matrix figs:

thick labels were created as:
    ax.set_xticklabels(cells,rotation='vertical')
    ax.set_yticklabels(cells,rotation='horizontal')

cells contains a list of the cells.

line to include all the graph:
    plt.tight_layout()

Ticks and grid were set as:
    ax.set_yticks(np.arange(1, 15, 1), minor=False)
    ax.set_yticks(np.arange(0.5,15,1), minor=True)
    ax.yaxis.grid(True, which='minor')

    ax.set_xticks(np.arange(1, 15, 1), minor=False)
    ax.set_xticks(np.arange(0.5,15,1), minor=True)
    ax.grid(which='minor', color='w', linestyle='-', linewidth=0.3)

Colorbar scale was modify:
    cbar.set_clim(0,1.3)

shift array on x and y axis to the left and upwards:

serg2 = np.roll(serg, -1, axis=0)
serg3 = np.roll(serg2, -1, axis=1)


* 05-30-17
Goals: finish connectivity and run model

Problem: include headers to column and rows in an array
Solution: use pandas function dataframe
            e.g. on array 3x3
            names = ['a', 'b', 'c']
            df = pd.DataFrame(serg3,  columns=names, index=names)

problem: read headers from pickle file
Solution: use format : pmat[ipost][ipre]

    for ipre in inhPrePops:
        for ipost in postPops:
            ruleLabel = ipre+'->'+ipost
            netParams.connParams[ruleLabel] = {
                'preConds': {'popLabel': ipre},
                'postConds': {'popLabel': ipost},
                'synMech': 'GABAA',
                'probability': pmat[ipost][ipre],
                'weight': wmat[ipost][ipre],
                'delay': 'defaultDelay+dist_3D/propVelocity',
                'sec': 'soma'}

Problem: cannot recognize the section list of the cells, therefore cannot record them  or do stimulation
Asked salva for solutions
His suggestion was to create the cells individually and avoid to use the for loop.
I did create the cells out of the loop, but still the problem persist.
Next, I'm to run the model from neurosim


Problem: accidentaly erase folder repo
Updating again repo
Solution: copy directory from working directory from my laptop. It created a new head.

* 05-31-17
goals to run model.

Problem: recording traces produce error:
            >>> Traceback (most recent call last):
                  File "init.py", line 26, in <module>
                    sim.setupRecording()                        # setup variables to record for each cell (spikes, V traces, etc)
                  File "/usr/site/nrniv/local/python/netpyne/netpyne/simFuncs.py", line 686, in setupRecording
                    sim.simData['t'].record(h._ref_t)
                RuntimeError: hoc error

        add stim cannot recognize secs:
            Warning: no valid sec specified for stim on cell gid=123 so using soma or 1st available. Existing secs: []; params: {'loc': 1, 'noise': 0.3, 'weight': 0.03, 'label': 'bkg->all', 'delay': 6.17427287383859, 'source': 'bkg', 'rate': 20, 'synsPerConn': 1, 'sec': None, 'synMech': 'AMPA', 'type': 'NetStim'}
            Error: no Section available on cell gid=123 to add stim

Solution: cellModel did not match between cells and popParams. When the cells were imported the cell Model was HHsimple, but the popParams was HHreduced. Left all of them in HHreduced. Thanks Salva!

Problem: Interneurons were not loading into the model.
            orginal code:
                if 'PV_simple' not in loadCellParams:
                    cellRule = netParams.importCellParams(label='PV_simple', conds={'cellType':'PV', 'cellModel':'HH_simple'},
                    fileName='cells/FS3.hoc', cellName='FScell1')
Solution: get rid of the conditional

Problem: Interneuron still not loaded into the model.
Solution:   Change cellRule to:
                cellRule = netParams.importCellParams(label='PV_simple', conds={'cellType':'PV', 'cellModel':'HH_reduced'},
                fileName='cells/FS3.hoc', cellName='FScell1', cellInstance = True)
            cellInstance seems to be important.

Model is running.

Problem: Interneuron are completely depolarized. Need to ask to bill and Salva tomorrow

Problem: Loading the pickle cause problem in the model. It cannot run. I will ask salva.

* 06-01-17
goals: fix connectivity and depolarization interneurons

Problem: substain depolarisation interneurons
Solution: salva found the error. It was a bug on NetPyne.
            salva:
            "ah found error, was reading concentrations in opposite order — ‘ik’ (which is current!) instead of ‘ki’"
            sergio:
            "so the error is on the original file?"
            salva:
            "no, in netpynes import — fixed and updated neurosim, so should work now"
Problem: loading pickle, neurosim can't recognize matrix formated using pandas.
            error msg:
            In [6]: import pandas
            -----------------------------------------------------------------------
            ImportError                               Traceback (most recent call last)
            <ipython-input-6-d6ac987968b6> in <module>()
            ----> 1 import pandas

            ImportError: No module named pandas

* 06-02-17
Goal fix unpickling
solution: work with dictionaries to assign key to values in the array. Every key is going to be a population and the value a position in the array. Then iterate the items as "for k,v in mylist.iteritems():"

excPrePops = {'IT2':0,'IT5':4,'PT5':5,'IT6':9,'CT6':10}
excPostPops = {'IT2':0,'IT5':4,'PT5':5,'IT6':9,'CT6':10}

for prePop,ipre in excPrePops.iteritems():
    for postPop,ipost in excPostPops.iteritems():
        ruleLabel = prePop+'->'+postPop
        netParams.connParams[ruleLabel] = {
            'preConds': {'popLabel': prePop},
            'postConds': {'popLabel': postPop},
            'synMech': 'AMPA',
            'probability': pmat[ipre][ipost],
            'weight': wmat[ipre][ipost],
            'delay': 'defaultDelay+dist_3D/propVelocity',
            'sec': 'soma'}


* 06-06-17
goal produce plateaus.
Problem: NetStim cannot have 2 different mechanisms on a list (AMPA,NMDA). Ask Salva.
Problem: CT6 and IT6 remain depolarized.
solution: Found that I didn't include probability or weight in the connectivity from interneurons to principal neurons. There were not punctual information about probabilies in Dystonia model, and referred as function of distance. I include this probaiities and weights similar to the ones in L5.
Problem: Plateaus were not generated

* 06-12-17
goals produce plateaus
Problem: Model didn't run and have error message:
        Adding stims...
Traceback (most recent call last):
  File "init.py", line 25, in <module>
Traceback (most recent call last):
  File "init.py", line 25, in <module>
Traceback (most recent call last):
  File "init.py", line 25, in <module>
Traceback (most recent call last):
  File "init.py", line 25, in <module>
Traceback (most recent call last):
  File "init.py", line 25, in <module>
Traceback (most recent call last):
  File "init.py", line 25, in <module>
Traceback (most recent call last):
  File "init.py", line 25, in <module>
Traceback (most recent call last):
  File "init.py", line 25, in <module>
    sim.net.addStims()                          # add network stimulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
    sim.net.addStims()                          # add network stimulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
    sim.net.addStims()                          # add network stimulation
    sim.net.addStims()                          # add network stimulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
    sim.net.addStims()                          # add network stimulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
    sim.net.addStims()                          # add network stimulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
    sim.net.addStims()                          # add network stimulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
    sim.net.addStims()                          # add network stimulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 128, in addStims
    strParams = self._stimStrToFunc(postCellsTags, source, target)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
    strParams = self._stimStrToFunc(postCellsTags, source, target)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
    strParams = self._stimStrToFunc(postCellsTags, source, target)
    strParams = self._stimStrToFunc(postCellsTags, source, target)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
    strParams = self._stimStrToFunc(postCellsTags, source, target)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
    strParams = self._stimStrToFunc(postCellsTags, source, target)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
    strParams = self._stimStrToFunc(postCellsTags, source, target)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
    strParams = self._stimStrToFunc(postCellsTags, source, target)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in _stimStrToFunc
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
    for postGid,postCellTags in postCellsTags.iteritems()}
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 204, in <dictcomp>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "<string>", line 1, in <lambda>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "<string>", line 1, in <lambda>
    for postGid,postCellTags in postCellsTags.iteritems()}
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "<string>", line 1, in <lambda>
  File "<string>", line 1, in <lambda>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "<string>", line 1, in <lambda>
    for postGid,postCellTags in postCellsTags.iteritems()}
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "<string>", line 1, in <lambda>
  File "<string>", line 1, in <lambda>
    for postGid,postCellTags in postCellsTags.iteritems()}
  File "<string>", line 1, in <lambda>
NameError: global name 'gauss' is not defined
>>> NameError: global name 'gauss' is not defined
>>>
NameError: global name 'gauss' is not defined
>>>
NameError: global name 'gauss' is not defined
>>>
NameError: global name 'gauss' is not defined
>>>
NameError: global name 'gauss' is not defined
>>>
NameError: global name 'gauss' is not defined
>>>
NameError: global name 'gauss' is not defined


Solution: Salva:
            y sorry, in new version ‘gauss’ is replaced with ‘normal’ (using different random module)
        Just replaced gauss with normal on NetStim

Problem: Working on neurosim traces were generated time vs time
Solution: Salva found an error on last update from Neuron:
            another weird error when recording _ref_v with and interval — now instead of recording V, records t !! — only happens in neurosim (vs my mac) so presume to do with later NEURON version

            from neuron import h
            h.load_file('stdrun.hoc')
            pc = h.ParallelContext()
            pc.set_maxstep(10)
            h.dt = 0.1
            tstop = 1.0
            s = h.Section()
            v = h.Vector()
            v.record(s(0.5)._ref_v, 0.1)
            h.stdinit()
            pc.psolve(tstop)
            print list(v)

            output on neurosim: [0.0, 0.1, 0.2, 0.30000000000000004, 0.4, 0.5, 0.6, 0.7, 0.7999999999999999, 0.8999999999999999]

            mh: “A complete misunderstanding on my part. I thought that class was specific to recording t when in fact its purpose was generic for any variable. Anyway, a new fix has been pushed to GitHub.”

Problem: L1 IT neurons have 1 spike, checked connectivity and didnt find a problem. Unresolved.


* 06-13-17

Goals: to induce dendritic plateaus

Neuron was updated in Neurosim, and traces voltage vs time were generated.

Traces from principal neurons and interneurons were generated. Recordings were seet at the soma. Stim was AMPA (0.03) to apical dendrites and NMDA (0.03) to basal dendrites.

dendritic recordings in the L5 PT cells were generated. Dendritic plateaus were recorded after stim with NMDA.

Metting:
    Check individual neurons AP shape, specially IT, PV interneurons
    Check Vrest of IT2 neurons.

* 06-14-17:
Goals: Check IT2 and PV cells electrophysiology parameters.

    Parameter from Layer 2/3 pyramidal neurons:
        http://neuroelectro.org/neuron/110/
    Changed Vrest and Vinit in L2/3 to -72.36 mV

    http://neuroelectro.org/neuron/111/
    L5 and L6 to -68.25 mV

    The factor that drives neuron to -80 mV is  the reversal potential for GABAA

    Solution: reduced the gain for connectivity from interneurons to exc neurons to 0.6. Only on L2.

    Then modify gains for the connectivity as:
    EEgain = 1.0
    IEgainL2 = 0.8
    IEgainL5 = 1.4
    IEgainL6 = 1.5
    IIgain = 2

    This make cells firing with better APs but still no close to reality. Next will be check cell by cell.

* 06-15-17 Interneuron firing sims

    Goals: check inteneurons firing

    First: checked interneuron PV plot created for 150ms, Netstim (AMPA:0.03) all the pops. Output showed PV firing a wide AP.
    #+CAPTION: PV2 cell with sodium and netstim (wt:0.03)
    #+NAME: fig.PV2_sodium1
    [[./gif/traces_PV2_allpops_netstim_na.png]]

    Bill commented on the use of exp2syn. It suggested to use DMS. Joe is going to implemented first on hi sims and then I am going to copy it from there.

    Second: I removed the sodium current (gnafbar=0 in the soma)from the FS cell in the hoc file. It didn't alter drastically the peak amplitude, with just slight reduction on the peak.
    #+CAPTION: PV2 cell no sodium and netstim (wt:0.03)
    #+NAME: fig.PV2_sodium2
    [[./gif/traces_PV2_allpops_netstim_noNa.png]]


    Third: Removed completely sodium from soma and dend. I did an stimulation of the cell with IClamp (amp=1 nA, del=5, dur=10). It produced a depolarization without the generation of an spike.
    #+CAPTION: PV2 cell no sodium and iclamp=1
    #+NAME: fig.PV2_sodium3
    [[./gif/traces_PV2_iclamp_noNa.png]]

    Fourth: No sodium currents and then NetStim stim to just PV2 pop. It produced nice EPSP.
    #+CAPTION: PV2 cell netstim to just PV2, no sodium
    #+NAME: fig.PV2_sodium4
    [[./gif/traces_PV2_netstimtoPV2_noNa.png]]

    Fifth: Restablished sodium currents and then NetStim stim to just PV2 pop. It produced EPSP and no spikes.
    #+CAPTION: PV2 cell netstim to just PV2, sodium
    #+NAME: fig.PV2_sodium5
    [[./gif/traces_PV2_netstimtoPV2_Na.png]]

    Sixth: Sodium and NetStim (0.0132) to allpops. It produces an spike.
    #+CAPTION: PV2 cell netstim (0.0132) to allpops, sodium
    #+NAME: fig.PV2_sodium6
    [[./gif/traces_PV2_allpops_Na.png]]

    Seventh: No Sodium and same NetStim. Similar spike.
    #+CAPTION: PV2 cell netstim (0.0132) to allpops, no sodium
    #+NAME: fig.PV2_sodium7
    [[./gif/traces_PV2_allpops_noNa.png]]

    Eigth: Check if sodium current can produce spike on iclamp. I used an ampl=1 and produced an spike.
    #+CAPTION: PV2 cell iclamp, no sodium
    #+NAME: fig.PV2_sodium8
    [[./gif/traces_PV2_iclamp_na.png]]

    Conclusion: synaptic connectivity is driving the cells to produce artefacts that look like spikes.

    Also: reorganized repo. I delete one branch (laptopsergio) and keep "workingdir" as the main branch.

    Also: Bill reorganized the nb with outlines for emacs. Need to improve nb. Add figure, comments, conclusions.

* 06-16-17 figs on emacs and plotting interneurons

Goals: Improve nb, keep working on interneurons.

nb: documentation for nb and emacs:
    From wiki on neurosim about nb:
    https://docs.google.com/document/d/1kdKEW8McsUI1nxuFftPI1F7LesGzkeflmt-lya3NpAU/edit#
    From wiki on neurosim about nb:
    https://docs.google.com/document/d/1TgeDd3Su_bmDXq89OTjzx5RDAHT8hfbj67C4gmudv0o/edit#heading=h.6on46bshbn26
    outline on emacs:
    https://www.emacswiki.org/emacs/OutlineMode
    open all outlines: C-c C-o C-a
    open one outline located at cursor: C-c C-o C-s
    hide all content from out lines: C-c C-o C-t

    Include figures on emacs:
    http://pragmaticemacs.com/emacs/org-mode-basics-iii-add-links-and-images-to-you-notes/
    http://orgmode.org/manual/Images-and-tables.html
    example:
    #+CAPTION: Figure caption example
    #+NAME: fig.example
    [[./sim/raster.png]]

    show figures on emacs:
    http://orgmode.org/manual/Handling-links.html#Handling-links


interneurons:
    - sim of netstim (0.0132) for 1 second to all pops, with sodium on PV2.
    [[./gif/traces_PV2_allpops_sodium.png]]

    - sim of nestim (0.0132) for 1 second to all pops, no sodium on PV2. Similar spikes.
    [[./gif/traces_PV2_allpops_nosodium.png]]

    -sim of netstim (0.0132) to PV2, no sodium
    [[./gif/traces_PV2_netstimtoPV2_nosodium.png]]

    -sim of netstim (0.0132) to PV2, sodium
    [[./gif/traces_PV2_netstimtoPV2_sodium.png]]

    -sim of netstim (0.03) to PV2, sodium, and generation of spikes
    [[./gif/traces_PV2_netstimtoPV2_high_sodium.png]]

    -sim of netstim (0.03) to PV2, no sodium, no genertion of spikes
    [[./gif/traces_PV2_netstimPV2_high_nosodium.png]]

    -sim of netstim (0.03) to all pops, no sodium
    [[./gif/traces_PV2_allpops_high_nosodium.png]]

    -sim of netstim (0.03) to all pops, sodium
    [[./gif/traces_PV2_allpops_high_sodium.png]]

* 06-19-17 check interneuron and DMS

goals: DMS and change interneuron.
kubota model: BE59D martinotti cell; BE77C Basket cell; LV38E large basket cell.

Experiment with kubota interneuron. Netstim to just PV2 (0.03). Traces have artifacts. It didnot produce spikes, but only fast EPSP. [[./gif/traces_PV2_kubotacell.png]]

Same parameters as before but with the FS3 cell. Trere is not artefacts but the spikes are too wide. [[./gif/traces_PV2_FS3.png]]

BE77C does not fire on iclamp(amp=1 nA) [[./gif/traces_PV2_kubutacell_nofiring.png]], but FS3 cell fires APs [[./gif/traces_PV2_FS3_firing.png]]. I will continue using the FS3 cell.

Next: check the DMS synaptic connectivity.

For DMS:
    /u/billl/articles/pnas92:9515.pdf  pnas92:9515.pdf  Destexhe, A. and Sejnowski, T.J. G-protein activation kinetics and spillover of [gamma]-aminobutyric acid may account for differences between inhibitory responses in the hippocampus and thalamus. Proceedings of the National Academy of Sciences 92:9515-9519, 1995.

    https://senselab.med.yale.edu/modeldb/showmodel.cshtml?model=18500&file=/Channels_NEW/nmda.mod#tabs-2

    to include those mechanisms just need to include these lines at parameters.multi:

    :* SYNAPSES
        :** AMPA
        NEURON {POINT_PROCESS AMPA}

        PARAMETER {
          Cdur  = 0.3   (ms)        : transmitter duration (rising phase)
          Alpha = 0.47  (/ms mM)    : forward (binding) rate
          Beta  = 0.18  (/ms)       : backward (unbinding) rate
          Erev  = 0 (mV)        : reversal potential
        }
        INCLUDE "netcon.inc"
        :** NMDA
        NEURON{ POINT_PROCESS NMDA
          RANGE B
          GLOBAL mg
        }

        PARAMETER {
          mg        = 1.    (mM)       : external magnesium concentration
          Cdur  = 1.    (ms)       : transmitter duration (rising phase)
          Alpha = 4.    (/ms mM)   : forward (binding) rate
          Beta  = 0.0067 (/ms)     : backward (unbinding) rate 1/150
          Erev  = 0.    (mV)       : reversal potential
        }

        ASSIGNED { B }

        INCLUDE "netcon.inc"
        : EXTRA BREAKPOINT MUST BE BELOW THE INCLUDE
        BREAKPOINT {
          rates(v)
          g = g * B : hence g = gmax * R * B
          i = i * B : hence i = g*(v - Erev)
        }

        PROCEDURE rates(v(mV)) {
          TABLE B
          DEPEND mg
          FROM -100 TO 80 WITH 180
          B = 1 / (1 + exp(0.062 (/mV) * -v) * (mg / 3.57 (mM)))
        }
        :** GABAA
        NEURON {  POINT_PROCESS GABAA }
        PARAMETER {
          Cdur  = 0.3   (ms)        : transmitter duration (rising phase)
          Alpha = 10    (/ms mM)    : forward (binding) rate
          Beta  = 0.16  (/ms)       : backward (unbinding) rate
          Erev  = -80   (mV)        : reversal potential
        }
        INCLUDE "netcon.inc"
        :** GABAB
        NEURON {POINT_PROCESS GABAB}
        PARAMETER {
          Cdur    = 150   (ms)            : transmitter duration (rising phase)
          Alpha   = 0.01  (/ms mM)        : forward (binding) rate
          Beta    = 0.005 (/ms)           : backward (unbinding) rate
          Erev    = -95   (mV)            : reversal potential (potassium)
        }
        INCLUDE "netcon.inc"

    After compiling with mkmod, parameters.multi created the mod files for AMPA, NMDA, GABAA, and GABAB.

    Then include modfiles on netpyne:

    netParams.synMechParams['NMDA'] = {'mod': 'NMDA', 'tau1NMDA': 15, 'tau2NMDA': 150, 'e': 0}
    netParams.synMechParams['AMPA'] = {'mod':'AMPA'}#, 'tau1': 0.05, 'tau2': 5.3, 'e': 0}
    netParams.synMechParams['GABAA'] = {'mod':'GABAA'}#, 'tau1': 0.07, 'tau2': 18.2, 'e': -80}

    Taus setting for AMPA and GABAA did not work for these mod files.

    Running sims.

    First- NetStim with 0.03 did not produce spikes. [[./gif/traces_exc_DMS_low.png]] [[./gif/raster_DMS_low.png]]

    Second- NetStim lowest weight to induce spikes were 0.077. [[./gif/traces_exc_DMS.png]]

    Third: Try different setting for the gains of the network. Last setting were:

        EEgain = 1.0
        IEgainL2 = 0.4
        IEgainL5 = 1.0
        IEgainL6 = 1.0
        IIgain = 2.0

        Raster plot shows that VIP neurons drive the firing of the principal neurons. [[./gif/raster_DMS.png]]

        Morphology of the spikes still shows artifacts. [[./gif/traces_inh_DMS.png]]

    Fourth: Salva include argument to modify 'y' axis on Netpyne. It should be included as "ylim". e.g:

    cfg.analysis['plotTraces'] = {'include':[('IT2',20),('IT5',0),('PT5',0),('CT6',10),('IT6',0)],'oneFigPer':'trace','ylim':[-90,50],
                              'figSize': (12,8),'saveFig':'../data/figs/traces_exc','showFig': True}


* 06-20-17 meeting, PV firing discussion, repo update

Goals: Try last tunning for metting and try individual iclamp to compare with real recordings.

First: change location of connectivity EE to 1 on Adend3. Then Convergence values to 1. Then decreased values of rate for netStim to 0.1 Hz. There were no generation of spikes [[./gif/traces_exc_netstim_rate_low.png]] [[./gif/raster_netstim_rate_low.png]]

Second: increased the rate to low threshold (0.12 Hz). Spike generation with artifacts on L6 [[./gif/traces_exc_netstim_rate_tresh.png]] [[./gif/raster_netstim_rate_tresh.png]]

Third: decreased weight in EEgain to L6 by 0.25 factor removed the artifacts. [[./gif/traces_exc_L6_reducedwt.png]] [[./gif/raster_L6_reducedwt.png]]

Fourth: changes pcon inh L2 neuron from 0.25 to 0.6. Final gains:
            EEgainL2 = 0.7
            EEgainL5 = 1.6
            EEgainL6 = 0.6
            IEgainL2 = 0.3
            IEgainL5 = 1.0
            IEgainL6 = 1.0
            IIgain = 2
        nestim params: wt: 0.083
        Figs: [[./gif/traces_exc_062017.png]] [[./gif/raster_062017.png]] [[./gif/traces_inh_062017.png]]

Meeting: Presented fig iclamp [[./gif/traces_PV2_FS3_firing.png]]. Big mistake. iclamp was set with a 1 nA and produced spikes too wide with a low frequency. Srdjan suggestion to present again. Compare with real data:
    -current injection
    -half witdh
    -frequency
On Slack: Salva showed figure of F-I curve for the PV cell [[./gif/FIcurve_PV2.png]], and later ran model and include i-clamp with stim of 0.3 nA with nice spikes: [[./gif/PV2_iclamp_salva.png]]

Additionally, Salva updated the model and include lines to control number of cells, connectivity, stims, and iclamp on cfg.py:

            #----------------------------------------------------------------------
            # Cells
            #----------------------------------------------------------------------
            cfg.singleCellPops = True

            #----------------------------------------------------------------------
            # Connections
            #----------------------------------------------------------------------
            cfg.addStims = False


            #----------------------------------------------------------------------
            # Connections
            #----------------------------------------------------------------------
            cfg.addConns = False


            #----------------------------------------------------------------------
            # Current inputs (IClamp)
            #----------------------------------------------------------------------
            cfg.addIClamp = True

                          ## pop,   sec,   loc, start,dur, amp (nA)
            cfg.IClamp1 = ['PV2', 'soma', 0.5, 0, 1000, 0.3]

Repo: merged workingdir into default. Only active branch is 'default'
Next: Produce F-I curves.

* 06-21-17 batch analysis and F-I curves
goal: produce F-I  curve
Salva pointed to example on netpyne:
https://github.com/Neurosim-lab/netpyne/tree/master/examples/batchCell

Salva also updated the repo and included files to do batch analysis with F-I curve. Batch ran without problems, but batchAnalysis file does not run on neurosim.
Bill pointed that the problem was with pandas.
Pandas is on neurosim, but it is outdated. Bill was working trying to updated to last version of pandas.


* 06-22-17 Batch and analysis on laptop
Goal:
laptop:
Search path for mod files is /usr/site/nrniv/local/mod
grep: kdrin.mod: No such file or directory
kdrin.mod NOT FOUND; check env variable MODL_INCLUDE.
I just copied those files into the mod dir.

running batch:
ImportError: dlopen(/usr/arch/nrn/share/python/lib/python/neuron/hoc.so, 2): Library not loaded: libreadline.6.2.dylib
  Referenced from: /usr/arch/nrn/share/python/lib/python/neuron/hoc.so
  Reason: unsafe use of relative rpath libreadline.6.2.dylib in /usr/arch/nrn/share/python/lib/python/neuron/hoc.so with restricted binary

solution: copy libreadline.6.2.dylib into the /usr/lib dir. For this the laptop neeeded to dissable root (dsenableroot -d) and dissable the SIP (https://www.howtogeek.com/230424/how-to-disable-system-integrity-protection-on-a-mac-and-why-you-shouldnt/). Lib is on $HOME/anaconda/lib
use command: sudo cp libreadline.6.2.dylib /usr/lib

batch ran on laptop [[./gif/fi_PV2_SOM2.png]]

created batch including VIP2 [[./gif/fi_PV2_SOM2.png]]

created batch of exc cells [[./gif/fi_exc.png]]

* 06-23-17
goals: create traces from iclamp cells.
Salva: no, change in cfg.py: `'saveFig':'../data/figs/traces_PV2'` -> `'saveFig': True`
I did it, but the batch didn't create the figures.
Checked Joe's repo. Nice example of how to create multiple batches. Different approach to indexing on arrays. Joe didn't use pandas as Salva did.
I was able to create bach with joe's approach.
then: problem with batch_analysis:
        In [1]: execfile('batch_analysis.py')
        NEURON -- VERSION 7.5 (1515:79f6026b82d7) 2017-02-09
        Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016
        See http://neuron.yale.edu/neuron/credits
        loading membrane mechanisms from x86_64/.libs/libnrnmech.so
        Additional mechanisms from files
        misc.mod stats.mod infot.mod vecst.mod nstim.mod samnutils.mod MyExp2SynNMDABB.mod kap_BS.mod kdmc_BS.mod kdr_BS.mod nax_BS.mod cadad.mod can_mig.mod cal_mig.mod savedist.mod h_kole.mod kBK.mod AMPA.mod
        ---------------------------------------------------------------------------
        NameError                                 Traceback (most recent call last)
        <ipython-input-1-31809b21f1b0> in <module>()
        ----> 1 execfile('batch_analysis.py')
        /Users/sergioangulo/projects/eeejoe/sim/batches/batch_analysis.py in <module>()
        610     start = time.time()
        611
        --> 612     plot_all()
        613
        614     import matplotlib.backends.backend_pdf
        /Users/sergioangulo/projects/eeejoe/sim/batches/batch_analysis.py in plot_all(redoall)
        546         in the directory "batch_data"  If redoall is False, only plots new batches.
        547
        --> 548     for batch in list_batches():
        549
        550         print batch
        NameError: global name 'list_batches' is not defined

* 06-26-17
goals plot traces from batch

list_baches was resolved after using: batch_utils.list_baches
then it was able tor run batch_analysis but it didn't produce trace figures.

Joe was working on my repo. First problem: it wasn't able to compile, message error:
        In file included from stats.c:249:
        //usr/site/nrniv/local/mod/misc.h:8:10: fatal error: 'values.h' file not found
        #include <values.h>
             ^
        1 error generated.
        make: *** [stats.lo] Error 1
solution: I commented out the line `//#include <values.h>` in /usr/site/nrniv/local/mod/misc.h
then he was able to compile.

On my repo: trying to produce figs after batch. It creates blank figures.
previously salva suggested to change to:
cfg.py: `'saveFig':'../data/figs/traces_PV2'` -> `'saveFig': True`
traces were fine if one sims is executed.

Note: Salva solution for values.h
        sudo ln -s /usr/include/i386/limits.h /usr/include/i386/values.h
        sudo ln -s /usr/include/limits.h /usr/include/values.h
     It creates a simlink to limits.h

Solution to traces: on cfg.py:
                    cfg.analysis['plotTraces'] = {'include':[],'oneFigPer':'trace', 'ylim':[-90,50],
                    'figSize': (12,8),'saveFig':True,'showFig':False}
                    leave empty list on 'include'

                    on netParams:
                    cfg.analysis['plotTraces']['include'].append((params['pop'],0))  # record that pop
                    previously was just ...append((pop,0)) and did not make reference to the cell recorded.

next to measure halfwidth:

but before with Joe, we check if we can run sims on local machines. Problem we couldn't plot traces.

starting from scratch:
mkdir serg_temp ; cd serg_temp ; hg clone ssh://no.neurosim.downstate.edu://u/sergioangulo/projects/eee ; cd eee/sim/mod ; mkmod ; cd .. ; ./runbatch


failure to compile:
Sergios-MacBook-2% mkmod
Search path for mod files is /usr/site/nrniv/local/mod
grep: nafx.mod: No such file or directory
nafx.mod NOT FOUND; check env variable MODL_INCLUDE.

if: cd /usr/site/nrniv/local; hg status; hg incoming

Sergios-MacBook-2% cd /usr/site/nrniv/local; hg status; hg incoming
M mod/misc.h
comparing with ssh://sergioangulo@ag.neurosim.downstate.edu//u/sergioangulo/site/nrniv/local
searching for changes
no changes found

but Joe's output:

graham-mac% cd /usr/site/nrniv/local; hg status; hg incoming
comparing with ssh://no.neurosim.downstate.edu//usr/site/nrniv/local
searching for changes
no changes found

Difference is in path to neuron repo. It should be similar to Joe.
Joe: That shouldnât matterâ¦  But I thought you would be linked to `/usr/site/nrniv/local` instead of `//u/sergioangulo/site/nrniv/local`

Solution: clone repos again:

cd /usr/site/nrniv; rm -r local; hg clone ssh://no.neurosim.downstate.edu//usr/site/nrniv/local

cd /usr/site/nrniv; rm -r simctrl; hg clone ssh://no.neurosim.downstate.edu//usr/site/nrniv/simctrl

cd /usr/site/; rm -r scripts; hg clone ssh://no.neurosim.downstate.edu//usr/site/scripts

cd /usr/site/; rm -r config; hg clone ssh://no.neurosim.downstate.edu//usr/site/config

cd /usr/site/; rm -r site-lisp; hg clone ssh://no.neurosim.downstate.edu//usr/site/site-lisp

cd /usr/site/; rm -r scripts; hg clone ssh://no.neurosim.downstate.edu//usr/site/scripts

check netpyne from dev repository:

cd /usr/site/nrniv/local/python/netpyne; git fetch; git status

but on my machine, it was installed with pip install.

solution:

pip uninstall netpyne

cd /usr/site/nrniv/local/python/; git clone https://github.com/Neurosim-lab/netpyne.git; cd netpyne; git checkout development; git branch

also Joe developed a python script to check status of repos:
copied these lines in tcshrc:
alias nsimstatus 'python /usr/site/nrniv/local/python/nsimrepos.py'
alias nsimupdate 'python /usr/site/nrniv/local/python/nsimrepos.py update'

Then nsimstatus will check if repos are uptodate and nsimupdate will update repos.

Last, update netpyne path on tcshrc:

setenv PYTHONPATH /usr/site/nrniv/local/python/netpyne:$PYTHONPATH

Now, figs are created after running batch.

* 06-27-17 meeting
Goals create figs for meeting and work on half-width for the APs.
Created 2 batches. One for excitatory [[./gif/fi_exc2.png]], and one for inhibitory [[./gif/fi_inh_L2.png]]
Excitatory neuron look fine and comparable with RS pyramidal neuron in the PFC [[./gif/interneuron_cortex.png]].
VIP cells F-I curve seems odd. On traces, VIP cells keep firing after stimulus [[./gif/batch_inh_2_10_traces.png]] in compare to PV cells [[./gif/batch_inh_0_10_traces.png]].
VIP cell normally don't fire like that [[./gif/VIP_L2_barrel.png]].
Also firing differs from other interneurons [[./gif/VIP_L2_barrel.png]]

On meeting: Salava suggested to check cell and use PV cell as a template

* 06-28-17
Goals: check VIP cell
VIP model was used from kubota https://senselab.med.yale.edu/ModelDB/ShowModel.cshtml?model=140299
Ran model and cell did not fire. The model is a passive model.
Salva: so how come it generated spikes in the network model?
bill: so where did you get the channel model?

Salva sugested to check: for sname,sec in netParams.cellParams['VIP_simple']['secs'].iteritems(): print sname,sec['mechs'].keys()
output:
dend_16 ['pas']
dend_17 ['pas']
dend_14 ['pas']
dend_15 ['pas']
dend_12 ['pas']
dend_13 ['pas']
dend_10 ['pas']
dend_11 ['pas']
soma ['pas']
dend_53 ['pas']
dend_50 ['pas']
dend_51 ['pas']
dend_56 ['pas']
dend_18 ['pas']
dend_19 ['pas']
axon ['Nafx', 'pas', 'kdrin']
dend_38 ['pas']
dend_39 ['pas']
dend_34 ['pas']
dend_35 ['pas']
dend_36 ['pas']
dend_37 ['pas']
dend_30 ['pas']
dend_31 ['pas']
dend_32 ['pas']
dend_33 ['pas']
dend_52 ['pas']
dend_49 ['pas']
dend_48 ['pas']
dend_45 ['pas']
dend_44 ['pas']
dend_47 ['pas']
dend_46 ['pas']
dend_41 ['pas']
dend_40 ['pas']
dend_43 ['pas']
dend_42 ['pas']
dend_3 ['pas']
dend_54 ['pas']
dend_29 ['pas']
dend_28 ['pas']
dend_27 ['pas']
dend_26 ['pas']
dend_25 ['pas']
dend_24 ['pas']
dend_23 ['pas']
dend_22 ['pas']
dend_21 ['pas']
dend_20 ['pas']
dend_55 ['pas']
dend_8 ['pas']
dend_9 ['pas']
dend_4 ['pas']
dend_5 ['pas']
dend_6 ['pas']
dend_7 ['pas']
dend_0 ['pas']
dend_1 ['pas']
dend_2 ['pas']
dend ['Nafx', 'pas', 'kapcb', 'kdrin']

salva: hmm seems like bug -- for some reason its picking up the axon and dend from the previously imported FS model
bill: yeah please no more than 3 secs for an inhib cell at this pont

[12:22]
1 better

[12:23]
that paper is about morpho so not very useful at this point

[12:23]
need to find a spiking model

Salva:
fixed bug importing consecutive cells from hoc — sections weren’t removed from memory properly, had to use `for sec in h.allsec(): h.delete_section(sec=sec)`
updated netpyne on neurosim

First: copied FS3.hoc to new VIP.hoc file. Change names of FS to VIP.
Second:changed soma_Kslowin to 0.000725*1 (original 0.000725*0.1). It moved the curve to the left [[./gif/VIP_L2_barrel.png]]
Simulation were running on laptop ans seem to be different. I started runnin sim on neurosim:
Third: Simulation similar characteristic between VIP and PV [[./gif/fi_PV_VIP_similar.png]]
Fourth: Change Ra on VIP to 250 in just axon (mistake). Reduce the freq and shift curve to the right [[./gif/fi_PV_VIP_ra.png]]
Fith: Change Ra in all the compartments [[./gif/fi_PV_VIP_ra_all.png]]. Not a big change.
Rudy (http://www.sciencedirect.com/science/article/pii/S0896627316303117) commented that VIP interneuron have a very high input resistance. Cite paper (http://www.jneurosci.org/content/30/50/16796) on table 1, have number on the range from 285 to 631 MegaOhms.
Another paper (https://www.ncbi.nlm.nih.gov/pubmed/9133407/) found VIPs to have an input resistance of 430 Mega Ohms
Sixth: Ra of 400 MegaOhms [[./gif/fi_PV_VIP_ra_400.png]]. Produces desired curve but traces seems too odd. [[./gif/batch_VIP_1_14_traces1.png]]
Seventh: increase potassium current 0.000725*1 [[./gif/fi_PV_VIP_highpotassium.png]] [[./gif/batch_VIP_1_14_traces2.png]]
Eighth: no slow potassium (Kslowin) [[./gif/fi_PV_VIP_highpotassium.png]]  [[./gif/batch_VIP_1_14_traces3.png]] . bad idea.
Nineth. check other currents:
SOM mechs:
In [5]: for sname,sec in netParams.cellParams['SOM_simple']['secs'].iteritems(): print sname,sec['mechs'].keys()
soma ['pas', 'Nafx', 'cadyn', 'kdrin', 'catcb', 'kapcb', 'hin']
axon ['Nafx', 'pas', 'kdrin']
dend ['Nafx', 'pas', 'kapcb', 'kdrin']

VIP mechs:
In [4]: for sname,sec in netParams.cellParams['VIP_simple']['secs'].iteritems(): print sname,sec['mechs'].keys()
soma ['kapin', 'pas', 'Nafx', 'canin', 'IKsin', 'cadyn', 'kdrin', 'kctin', 'hin']
axon ['Nafx', 'pas', 'kdrin']
dend ['kapin', 'Nafx', 'pas', 'kdrin']

10th. No kapin, no kctin [[./gif/fi_PV_VIP_nopotassium_kctin_kapin.png]]  [[./gif/batch_VIP_1_14_traces4.png]]

11th. no kctin  [[./gif/fi_PV_VIP_nopotassium_kctin.png]]  [[./gif/batch_VIP_1_14_traces5.png]]

12th. reduced kapin [[./gif/fi_PV_VIP_reducepotassium_kapin.png]]  [[./gif/batch_VIP_1_14_traces6.png]]

13th. no canin [[./gif/fi_PV_VIP_no_canin.png]]  [[./gif/batch_VIP_1_14_traces7.png]]

* 06-29-17 new VIP cell model
Goals: produce VIP neuron
Continue tunning of VIP.
Back to basics. Return parameters to normal. Change Ra to 400. Change RMP to - 69 mV. Increase Kapin to 0.0036 *15 [[./gif/fi_PV_VIP_kapin_increased.png]]  [[./gif/batch_VIP_1_14_traces8.png]]
next: reduce subthreshold oscillations. Max freq range 52.6-85.7 Hz (http://www.jneurosci.org/content/30/50/16796)
Check again look into a modified LTS neuron. Change Ra to 400, RPM to -69 mV, and increase kapcb to 0.0036*12 [[./gif/fi_PV_VIP__SOM_kapcb_increased.png]]
oscilation of membrane are produced by sodium currents.
Modified LTS neuron with t-type, n-type calcium currents, Na 0.035, K-A type 0.05. [[./gif/fi_PV_VIP_SOM_reducedNa.png]]

Found new model of VIP neuron on modelDB: https://senselab.med.yale.edu/modeldb/ShowModel.cshtml?model=168310&file=/KonstantoudakiEtAl2014/


Contains model for 3 types of interneuron, including cr that it is considered as irregular spiking interneuron.

Copied model and mod files.

Ran batch [[./gif/fi_PV_VIP_SOM_newCR.png]]  [[./gif/batch_VIP_2_7_traces1.png]] nice firing, need to increase Ra.

* 06-30-17 advanced on  VIP cell
Goals: finish VIP cell
Modifying version of cr.hoc
Reduce compartment to 1 dend, original 2 dends. Replace sodium mod file to nafx. Replace all the mod files to the ones on neurosim
change g_pas to 1/10000
[[./gif/fi_PV_VIP_SOM_newCR_mod.png]]  [[./gif/batch_VIP_2_7_traces2.png]]
next: reduce max frequency
reducing sodium from dendrite produce a strange plot. from     gnafbar_Nafx=0.018*5 to gnafbar_Nafx=0.018
 [[./gif/fi_PV_VIP_SOM_newCR_mod_sod.png]]  [[./gif/batch_VIP_2_7_traces3.png]]
increased length of dend (8*22) similar to LTS3.
Insert kapin* at dend
modified kapin to 0.023
Ra 150 for all secs. Produce artefacts
Increase kslowcr *1.5
[[./gif/fi_PV_VIP_SOM_newCR_mod2.png]]  [[./gif/batch_VIP_2_9_traces.png]]

* 07-03-17 Finished VIP cell model

Goals: finish VIP and README.txt file.

Modifying the potassium current in the dend move the fi curve to the left. Also the diameter of the soma innfluence the curve. LTS cell diam is 42 um, while FS is 27 um. The larger the soma the curve move to the right.

[[./gif/fi_PV_VIP_SOM_newCR_mod3.png]]  [[./gif/batch_VIP_2_7_traces4.png]]

More important parameter: Ra =200 in soma and dend. Kapin *3 at the dend. Soma diam = 35. Dend was similar to morphology of LTS.  A big difference to LTS s the insertion canin(n-type calcium channels) instead of catcb(t-type calcium channels; low threshold calcium channels).

Sim params:

soma_nafcr= 0.02
soma_kdrin=0.018
soma_Kslowcr=0.000725*1
soma_kctin=0.0001
soma_kapin=0.027
soma_canin=0.001
soma_hin=0.0001

soma {
     nseg=1
     L=35
     diam=35

    insert pas
    cm=1.2            //microF/cm2
    g_pas =1/40000
    e_pas = v_initcr
    v_initcr= -70
    Ra=200


    insert Nafx
    gnafbar_Nafx= soma_nafcr

    insert kdrin
    gkdrbar_kdrin= soma_kdrin

    insert IKsin
    gKsbar_IKsin= soma_Kslowcr

    insert kctin
    gkcbar_kctin= soma_kctin

    insert kapin
    gkabar_kapin= soma_kapin

    insert canin
    gcatbar_canin=soma_canin

    insert hin
    gbar_hin=soma_hin

    insert cadyn


}

axon {
    nseg=1
    L=113.22
    diam=1.1


    insert pas
    cm=1.2            //microF/cm2
    g_pas =1/20000
    e_pas = v_initcr
    v_initcr= -70
    Ra=150

    insert Nafx
    gnafbar_Nafx= soma_nafcr*10

    insert kdrin
    gkdrbar_kdrin= soma_kdrin*0.5
}


dend {
    nseg=1
    L=8*22
    diam=7


    insert pas
    cm=1.2            //microF/cm2
    g_pas =1/20000
    e_pas = v_initcr
    v_initcr= -70
    Ra=200

    insert Nafx
    gnafbar_Nafx=0.018*5

    insert kdrin
    gkdrbar_kdrin=0.018*0.5

    insert kapin
    gkabar_kapin= soma_kapin*3

}


    ko0_k_ion = 3.82   //mM
    ki0_k_ion = 140    //mM
    celsius   = 23

    connect dend(0), soma(0)
    connect axon(0), soma(1)


}

Renamed file as VIP.hoc

* 07-05-17 README.txt file and poster for CNS.

Goals:
Finish README.txt file
Poster for CNS.

Finished README.txt file

Poster CNS: https://docs.google.com/presentation/d/1Kdr90-8XJcOhcA9xJ6afsRDB8J7LTgTaQkOXMadH7Xo/edit?usp=sharing

* 07-06-17
Goals: Finish poster CNS

any more ideas for the poster?
billl
2:39 PM
any new data on poster?
2:40
what were you asking me to try before/
2:40
?
2:40
oh you did already ok
sergio
2:40 PM
I can include something for the network
2:40
or the new data about spines
billl
2:40 PM
good -- yeah let's show that we're making progress
sergio
2:41 PM
ok

Plan: Go back to sims, check param and new VIP.

All the gains were set to 1.

VIP cells were firing few APs [[./gif/traces_inh_VIP_highdendkapin.png]]. Only fire if kapin is reduced in the dendrites to 0.027 [[./gif/traces_inh_VIP_lowdendkapin.png]]

no connectivity traces: [[./gif/traces_inh_noconnectivity.png]] [[./gif/raster_noconnectivity.png]]

* 07-07-17
Goals: finish sims for poster.
Debug connetivity.
Increased gain for VIP to PV and SOM connectivity. [[./gif/traces_inh_VIP2x.png]] [[./gif/traces_exc_VIP2x.png]][[./gif/raster_VIP2x.png]]

Change interneuron to interneuron connectivity:
inhVIP = {'VIP2':2,'VIP5':7,'VIP6':12}
inhNoVIP = {'PV2':1,'SOM2':3,'PV5':6,'SOM5':8,'PV6':11,'SOM6':13}

#inh to inh
  for prePop,ipre in inhNoVIP.iteritems():
      for postPop,ipost in inhPops.iteritems():
          ruleLabel = prePop+'->'+postPop
          netParams.connParams[ruleLabel] = {
              'preConds': {'popLabel': prePop},
              'postConds': {'popLabel': postPop},
              'synMech': 'GABAA',
              'probability': pmat[ipre][ipost],
              'weight': IIgain*(wmat[ipre][ipost]),
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'sec': 'dend'}

  #inh to inh
  for prePop,ipre in inhVIP.iteritems():
      for postPop,ipost in inhNoVIP.iteritems():
          ruleLabel = prePop+'->'+postPop
          netParams.connParams[ruleLabel] = {
              'preConds': {'popLabel': prePop},
              'postConds': {'popLabel': postPop},
              'synMech': 'GABAA',
              'probability': pmat[ipre][ipost],
              'weight': VIPgain*(wmat[ipre][ipost]),
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'sec': 'dend'}

also changes plot traces:

cfg.pltTraces = 0 #select trace to plot

if cfg.pltTraces == 0: #Plot traces for excitatory cells
    cfg.analysis['plotTraces'] = {'include':[('IT2',0),('IT5',0),('PT5',0),('CT6',0),('IT6',0)],'oneFigPer':'trace','ylim':[-90,50],
                                'figSize': (12,8),'saveFig':'../data/figs/traces_exc','showFig':False}

elif cfg.pltTraces == 1: #Plot traces for inhibitory cells
    cfg.analysis['plotTraces'] = {'include': [
                                            ('PV2',0),('SOM2',0),('VIP2',0)],
#                                           ('PV5',0),('SOM5',0),('VIP5',0)],
#                                           ('PV6',0),('SOM6',0),('VIP6',0)],
                                'oneFigPer':'trace','figSize':(12,8),'ylim':[-90,50],'saveFig':'../data/figs/traces_inh','showFig':True}

elif cfg.pltTraces == 2: #Plot traces for IClamp
    cfg.analysis['plotTraces'] = {'include':[],'oneFigPer':'trace','ylim':[-100,50],
                                'figSize': (12,8),'saveFig':True,'showFig':False}

elif cfg.pltTraces == 3: #Plot IT2 pop
    cfg.analysis['plotTraces'] = {'include':[('IT2',0),('IT2',10),('IT2',20)],'oneFigPer':'trace',
                                'figSize': (12,8),'saveFig':'../data/figs/traces_IT','showFig': True}

elif cfg.pltTraces == 4: #Plot PT5 pop
    cfg.analysis['plotTraces'] = {'include':[('PT5',0),('PT5',10),('PT5',15)],'oneFigPer':'trace',
                                'figSize': (12,8),'saveFig':'traces_PT5','showFig': True}


added iclamp to exc pops: [[./gif/traces_inh_iclamp.png]] [[./gif/traces_exc_iclamp.png]][[./gif/raster_iclamp.png]]
    ampl = 0.4
    durat = 1000

    cfg.IClamp1 = {'pop': 'IT2', 'sec': 'soma', 'loc': 0.5, 'start': 5, 'dur': durat, 'amp': ampl}
    cfg.IClamp2 = {'pop': 'IT5', 'sec': 'soma', 'loc': 0.5, 'start': 5, 'dur': durat, 'amp': ampl}
    cfg.IClamp3 = {'pop': 'PT5', 'sec': 'soma', 'loc': 0.5, 'start': 5, 'dur': durat, 'amp': ampl}
    cfg.IClamp4 = {'pop': 'IT6', 'sec': 'soma', 'loc': 0.5, 'start': 5, 'dur': durat, 'amp': ampl}
    cfg.IClamp5 = {'pop': 'CT6', 'sec': 'soma', 'loc': 0.5, 'start': 5, 'dur': durat, 'amp': ampl}

* 07-10-17 AMPA/NMDA Netstim stimulation to basal dends
Goal Finish sims for poster:

Problem: when plotting interneurons, it is plotting also excitatory neurons. Check record cells, and plot traces. Everythin seems to be ok. It doesn't happen If I record exc cells.

Couldn't fix plotting problem.

Plotting excitatory neurons.

Added netstim as a pop. According to Salva, can do stimulation with a list of mechanisms:

on netParams

if cfg.addNetStim:

  # single NetStim
  for key in [k for k in dir(cfg) if k.startswith('NetStim')]:
    pop, seg, synMech, start, interval, noise, number, weight, delay = getattr(cfg, key, None)

#    cfg.analysis['plotTraces']['include'].append((params['pop'],0))  # record that pop

    #cfg.analysis['plotTraces']['include'] = [(pop,0)]

    #if synMech == ESynMech:
    #  wfrac = cfg.synWeightFractionEE
    #elif synMech == SOMESynMech:
    #  wfrac = cfg.synWeightFractionSOME
    #else:
    #  wfrac = [1.0]

    # add stim source
    netParams.stimSourceParams[key] = {'type': 'NetStim', 'start': start, 'interval': interval, 'noise': noise, 'number': number}

    # connect stim source to target
    for i, syn in enumerate(synMech):
      netParams.stimTargetParams[key+'_'+pop+'_'+syn] =  {
        'source': key,
        'conds': {'popLabel': pop},
        'sec': seg[0],
        'loc': seg[1],
        'synMech': syn,
        'weight': weight,
        'delay': delay}

on cfg.py

cfg.addNetStim = 0

               ## pop, sec, loc, synMech, start, interval, noise, number, weight, delay
cfg.NetStim1 = ['PT5', ['Bdend1', 0.5], ['AMPA','NMDA'], 100, 2000, 0.0, 1, 0.5, 1]

Only AMPA to Apical dendrite at exc cells
[[./gif/traces_PT5_ampa.png]] [[./gif/traces_exc_ampa.png]]

AMPA apical + AMPA/NMDA basal dendrites PT5 cells record at soma
[[./gif/traces_PT5_ampa_nmda.png]] [[./gif/raster_nmda_ampa.png]]

AMPA apical + AMPA/NMDA basal dendrites PT5 cells record at bdend1
[[./gif/traces_PT5_ampa_nmda_bdend_5.png]]

Bdend has a plateau but it is not observed at the soma.

* 07-11-17
Goals: meeting and figs

Move netstim to bdend at 0.3.  [[./gif/traces_PT5_ampa_nmda_bdend_03_5.png]] [[./gif/traces_PT5_ampa_nmda_03_5.png]] [[./gif/raster_ampa_nmda_03_5.png]] [[./gif/traces_exc_ampa_nmda_03_5.png]]

Just ampa:  [[./gif/traces_PT5_ampa_bdend_03_5.png]] [[./gif/traces_PT5_ampa_03_5.png]] [[./gif/raster_ampa_03_5.png]] [[./gif/traces_exc_ampa_nmda_03_5.png]]


* 07-13-17
Goals: increase noise

modification of noise at netstim: first noise 0.6, rate 40
[[./gif/traces_PT5_noise_40_06.png]] [[./gif/raster_noise_40_06.png]]

better noise if equal 0 and rate 100. Also weights are 0.1
[[./gif/traces_PT5_noise_100_0.png]] [[./gif/raster_noise_100_0.png]] [[./gif/traces_PT5_bdend_noise_100_0.png]]

produce plateaus on basal dendrite. noise: 0, rate 60. Weights at 0.3
[[./gif/traces_PT5_noise_60_0_stim03.png]] [[./gif/raster_noise_60_0.png]] [[./gif/traces_PT5_bdend_noise_60_0_stim03.png]]

increasing noise, don't produce noise: noise 1000
[[./gif/traces_PT5_noise_60_1000_stim03.png]]

Increase weights at 0.5
[[./gif/traces_PT5_noise_60_0_stim05.png]] [[./gif/raster_noise_60_0_05.png]] [[./gif/traces_PT5_bdend_noise_60_0_stim05.png]]

generating figs with 1000 ms duration

AMPA + NMDA:
[[./gif/traces_PT5_bdend_ampa_nmda_noise.png]] [[./gif/traces_PT5_ampa_nmda_noise.png]] [[./gif/raster_ampa_nmda_noise
.png]]

AMPA:
[[./gif/traces_PT5_bdend_ampa_noise.png]] [[./gif/traces_PT5_ampa_noise.png]] [[./gif/raster_ampa_noise.png]]


* 07-26-17 resume meeting CNS 
Resume of the CNS meeting: 
    - Good poster for assemblies: /u/sergioangulo/papers/russo2017.pdf
    - numenta similar to basal dendrite stimulation but for memory: /u/sergioangulo/papers/ahmad2016.pdf; /u/sergioangulo/papers/hawkins2016.pdf
    - PFC and nicotinic modulation: Nicotinic modulation of hierarchal inhibitory circuit control over resting state ultra-slow fluctuations in the prefrontal cortex: modeling of genetic modification and schizophrenia-related pathology (Marie Rooy, Fani Koukouli, David DiGregorio, Uwe Maskos, Boris Gutkin)
    - coherence:  Necessity for coherence in motor control (Willy Wong, Omid Talakoub, Robert Chen, Milos Popovic); check kuramoto's model
    - persisting firing model in PFC L5 neurons: /u/sergioangulo/papers/papoutsi2017.pdf
    /u/sergioangulo/papers/papoutsi2014.pdf
    /u/sergioangulo/papers/psarrou2014.pdf
    /u/sergioangulo/papers/papoutsi2013.pdf

New ideas for EEE network: 
    - optimize connectivity subcellular of interneuron to principal neurons
    - add long range connectivity with background oscilation
    - LFP
    - power spectrum analysis


* 07-27-17 changed interneuron connectivity
Goals: modify connection between interneurons. 
PV have perisomatic and proximal dendrite connectivity to pyramidal neurons.
SOM target dendritic tuft
VIP target other interneurons.
/u/sergioangulo/papers/tremblay2016.pdf

Connectivity parameters was changed to include connectivity only PV to soma, SOM to apical dendrite, and VIP to SOM and PV.
Runsim just AMPA to apical dendrites:
[[./gif/traces_VIPinh_toPV_SOM.png]]
[[./gif/raster_VIPinh_toPV_SOM.png
]]
Activity was increased in all the layer and follow the activity of VIP interneurons. 

Trying to create fig with RatePSD but keeps crashing.
This line worked:
cfg.analysis['plotRatePSD'] = {'include':['eachPop'],'binSize':5,'saveFig':True,'smooth':10}
On include can do 'allCells' and plot a combine PSD of all pops:
[[./gif/PSD_VIPinh_toPV_SOM.png]]
each pop:
[[./gif/PSD_VIPinh_toPV_SOM_pops.png
]]
next: Decrease netstim weight to 0.34. Previously 0.8 
[[./gif/PSD_VIPinh_toPV_SOM_034.png]]
[[./gif/PSD_VIPinh_toPV_SOM_pops_034.png]]
[[./gif/traces_VIPinh_toPV_SOM_034.png]]
[[./gif/raster_VIPinh_toPV_SOM_034.png]]

next: include stim AMPA/NMDA to basal dend in PT5 neurons.
[[./gif/PSD_VIPinh_toPV_SOM_pops_AMPANMDA.png]]
[[./gif/PSD_VIPinh_toPV_SOM_AMPANMDA.png]]
[[./gif/traces_VIPinh_toPV_SOM_AMPANMDA.png]]
[[./gif/raster_VIPinh_toPV_SOM_AMPANMDA.png]]
[[./gif/traces_VIPinh_toPV_SOM_AMPANMDA_bdend.png]]

change basal activity and reduce gamma activity.

next: add background oscillation

* 07-28-17 improved inh to inh connectivity and sim with recurrent L5
Goals: include background oscilation to PT5
Experiments of patch-clamp in the basal dendrite with nmda spikes:
/u/sergioangulo/papers/nevian2007.pdf

calcium transient on apical dendrites and basal dendrites. Basal dendrites linear relation to spiking activity:
/u/sergioangulo/papers/hill2013.pdf

connectivity to L5 pyramidal neurons on papoutsi 2013:
[[./gif/synaptic_connectivityL5.png]]
basal dendrite received pyramidal recurrent and autapses.
data from markram from somatosensory cortex /u/sergioangulo/papers/nevian2007.pdf

also show on this paper:
/u/sergioangulo/papers/gorce2016.pdf

include inh connectivity from PV and SOM to all other interneurons according to naka 2016 (/u/sergioangulo/papers/naka2016.pdf)
[[./gif/inh_connectivity.png]]

run sim with only AMPA to apical dend:
[[./gif/PSD_inh_to_inh_all.png]]
[[./gif/PSD_inh_to_inh.png]]
[[./gif/traces_inh_to_inh.png]]
[[./gif/raster_inh_to_inh.png]]
It produced less synchronization, but still gamma oscillations.

sim with AMPA and NMDA to basal dendrites:
[[./gif/PSD_inh_to_inh_AMPANMDA.png]]  
[[./gif/traces_inh_to_inh_AMPANMDA.png]] 
[[./gif/PSD_inh_to_inh_all_AMPANMDA.png]]  
[[./gif/raster_inh_to_inh_AMPANMDA.png]]  

Going back to background oscilation. Thalamocortical inputs to basal dendrites of L5 pyramidal neurons of S1:
/u/sergioangulo/papers/rah2013.pdf

run sim with recurrent connectiviy in L5:
[[./gif/traces_L5toL5_bdend_recordbdend.png]]
[[./gif/traces_L5toL5_bdend.png]]
[[./gif/raster_L5toL5_bdend.png]]
it produces persistent activity in L5 an silence of the other layers.

Next remove recurrent activity and simulate TC connectivity.

* 07-31-17 oscillations background
Goal: recuce probability or weight of the recurrent activity of L5
First: reduced probability to 10%
[[./gif/traces_L5toL5_bdend_01prob.png]]
[[./gif/PSD_L5toL5_bdend_01prob.png]]
[[./gif/raster_L5toL5_bdend_01prob.png]]
Connectivity to basal dend control activity of the network.

Second: reduced probability to 1% 
[[./gif/traces_L5toL5_bdend_001prob.png]]
[[./gif/PSD_L5toL5_bdend_001prob.png]]
[[./gif/raster_L5toL5_bdend_001prob.png]]
The network has a reduced activity

Third: probablity 1% and weight 10%
[[./gif/PSD_L5toL5_bdend_001prob_01wt_all.png]]
[[./gif/PSD_L5toL5_bdend_001prob_01wt.png]]
[[./gif/traces_L5toL5_bdend_001prob_01wt.png]]
[[./gif/raster_L5toL5_bdend_001prob_01wt.png]]
The activity was increased

Bill pointed paper about change in theta and beta/alpha synchrony activty between the hippocampus and PFC. Theta synchrony activity increased after error in performance task, and 
alpha/beta synchrony activity increased after correct trial
/u/sergioangulo/papers/brincat2015.pdf

Next change background stimulation to PFC. Try to do gamma from thalamus, and theta, alpha/beta from the hippocampus.

modified cfg.py to include long range
also modified netparams.
For now, stim includes gamma and theta to the basal dendrites 
It was working earlier, I will debug tomorrow.

* 08-01-17
Goal: debug oscilations

Not sure what was the error but it is working.

Run sim with no recurrent L5 and only AMPA to apical:
[[./gif/traces_norecurrentL5.png]]
[[./gif/PSD_norecurrentL5.png]]
[[./gif/raster_norecurrentL5.png]]


Run sim with recurrent L5 NMDA and AMPA to basal (wt 10%, prob 1%):
[[./gif/PSD_recurrentL5.png]]
[[./gif/traces_recurrentL5.png]]
[[./gif/raster_recurrentL5.png]]  

Added background connectivity from hippocampus(theta osc) and thalamus (gamma osc) with a weight (0.5 AMPA-NMDA) to basal dendrites:
[[./gif/PSD_longconn05.png]]
[[./gif/traces_longconn05.png]]
[[./gif/raster_longconn05.png]]
It saturates the network and produce constant activity of PT5.

Decreased wt (0.0003) of bakground oscilations:
[[./gif/PSD_longconn00003.png]]
[[./gif/traces_longconn00003.png]]
[[./gif/raster_longconn00003.png]]
Still saturates L5 but less.

Decreased wt to 0.0001 starts at 1000ms:
[[./gif/PSD_longconn00001.png]]
[[./gif/traces_longconn00001.png]]
[[./gif/raster_longconn00001.png]]


wt to 0.0002 starts at 1000ms:
[[./gif/PSD_longconn00002.png]]
[[./gif/traces_longconn00002.png]]
[[./gif/raster_longconn00002.png]]

wt 0.0002 withouth recurrents L5:
[[./gif/PSD_longconn00002_norec.png]]
[[./gif/traces_longconn00002_norec.png]]
[[./gif/raster_longconn00002_norec.png]]

wt 0.0001 without reurrents L5:
[[./gif/PSD_longconn00001_norec.png]]
[[./gif/traces_longconn00001_norec.png]]
[[./gif/raster_longconn00001_norec.png]]

From meeeting:

Return to connectivity VIP to pyr neurons.

VIP inteneurons were connected to soma of PYR neurons:
[[./gif/raster_VIPtoPyr.png]] 
[[./gif/traces_VIPtoPyr.png]]

Figs from poster:
[[./gif/traces_PT5_bdend_gain1_ampa.png]]
[[./gif/traces_PT5_bdend_gain1_ampa_nmda.png]]
[[./gif/traces_PT5_gain1_ampa_nmda.png]]
[[./gif/raster_gain1_ampa_nmda.png]]
[[./gif/traces_PT5_gain1_ampa.png]]
[[./gif/raster_gain1_ampa.png]]

Files from sim in repo (3424ee6b5080). Run again simulation but generates different figure:
[[./gif/traces_VIPrep.png]]
[[./gif/raster_VIPrep.png]]
[[./gif/traces_VIPrep_AMPANMDA.png]]
[[./gif/raster_VIPrep_AMPANMDA.png]]

* 08-02-17 plateaus sim on PT5 
In conversacion with bill and salva, both agree to work in the version recovered from all repo

run a couple of simulation to show dendritic plateaus of basal dendrites and the activity on IT5
[[./gif/traces_IT5_PT5_AMPANMDA.png]]
[[./gif/traces_VIPrep_AMPANMDA_bdend.png]]

next: change sim time to 800 ms, and record cell method to include only 3 cells per population:
cfg.recordCells = [[(pop,0),(pop,10),(pop,15)] for pop in excPops]
[[./gif/traces_PT5_AMPANMDA_06.png]]
[[./gif/raster_PT5_AMPANMDA_06.png]]

reduced AMPA/NMDA to 0:
[[./gif/traces_PT5_AMPANMDA_0.png]]
[[./gif/raster_PT5_AMPANMDA_0.png]]

back to AMPA/NMDA 0.3:
[[./gif/traces_PT5_AMPANMDA_03.png]]
[[./gif/raster_PT5_AMPANMDA_03.png]]

AMPA/NMDA 0.9:
[[./gif/traces_PT5_AMPANMDA_09.png]]
[[./gif/raster_PT5_AMPANMDA_09.png]]

AMPA/NMDA 1.2:
[[./gif/traces_PT5_AMPANMDA_12.png]]
[[./gif/raster_PT5_AMPANMDA_12.png]]

AMPA/NMDA 1.5:
[[./gif/traces_PT5_AMPANMDA_15.png]]
[[./gif/raster_PT5_AMPANMDA_15.png]]

AMPA/NMDA 1.8:
[[./gif/traces_PT5_AMPANMDA_18.png]]
[[./gif/raster_PT5_AMPANMDA_18.png]]

Still can not induce plateaus at the PT5 Cells.

Run some simulations with single cells and produce dendritic plateau by stim with AMPA/NMDA (weight 0.01):
[[./gif/traces_PT5_AMPANMDA_single_01.png]]

add background stim to apical dend with AMPA:
[[./gif/traces_PT5_AMPANMDA_single_01_noise.png]]

* 08-03-17
Goals: generate plateaus in the network context 
Bill suggestion: change the number of spikes in the netstim to generate a plateau. Previous parameters only generated 1 spike. 

AMPA/NMDA weight 0.3, number 10:
[[./gif/traces_PT5_AMPANMDA_03_number10.png]]
[[./gif/raster_PT5_AMPANMDA_03_number10.png]]

AMPA/NMDA weight 0.3, number 30:
[[./gif/traces_PT5_AMPANMDA_03_number30.png]]
[[./gif/raster_PT5_AMPANMDA_03_number30.png]]

(emacs: save C-x C-s; copy M-w; paste C-y)

AMPA/NMDA weight 0.3, number 100:
[[./gif/traces_PT5_AMPANMDA_03_number100.png]]
[[./gif/raster_PT5_AMPANMDA_03_number100.png]]
[[./gif/traces_PT5_AMPANMDA_03_number100_bdend.png]]

AMPA/NMDA weight 0.3, number 1000:
[[./gif/traces_PT5_AMPANMDA_03_number1000.png]]
[[./gif/raster_PT5_AMPANMDA_03_number1000.png]]

I was setting the netstim in a wrong way:

netstim interval is the time between spikes, and number is the max number of spikes. Then 1000 spikes happen, 1 every 1000 seconds.

new params for burst: interval 5 ms, number 10.
[[./gif/traces_PT5_AMPANMDA_03_number10_5ms.png]]
[[./gif/raster_PT5_AMPANMDA_03_number10_5ms.png
]]
burst of 20 spikes, interval 5ms: 
[[./gif/traces_PT5_AMPANMDA_03_number20_5ms.png]]
[[./gif/raster_PT5_AMPANMDA_03_number20_5ms.png]] 

Still, I cannot induce the plateaus in the soma compartment.

Bill suggested to record gNMDA and iNMDA.

access to a compartment of a cell and synaptic mechanisms:
sim.net.cells[0].secs.Adend3.synMechs

>>> sim.net.cells[0].secs.Bdend1.synMechs
[{loc: 0.3, hSyn: AMPA[3], mod: 'AMPA', label: 'AMPA'}, {loc: 0.3, hSyn: NMDA[0], mod: 'NMDA', label: 'NMDA'}]

salva:
yup, make sure that there is actually a syn there….
[4:01] 
set cfg.saveCellSecs = 1 and cfg.saveCellConns = 1
[4:01] 
and explore the model
[4:01] 
sim.net.cells[0].secs.Adend3.synMechs
[4:02] 
you can also set the sim to 500ms, and remove all other pops except PT5 to try out things faster

Removed all the other pops, and left connectivity and netstim. Then set record cell at loc 0.3:
cfg.recordTraces = {
#		'V_soma': {'sec':'soma', 'loc':0.5, 'var':'v'}
#		'V_Adend': {'sec':'Adend3', 'loc':0.5, 'var':'v'}
#		'V_Bdend1': {'sec':'Bdend1', 'loc':0.5, 'var':'v'}
#		'i_NMDA_Bdend1': {'sec':'Bdend1', 'loc':0.3, 'synMech': 'NMDA', 'var': 'i'}
		'g_NMDA_Bdend1': {'sec':'Bdend1', 'loc':0.3, 'synMech': 'NMDA', 'var': 'g'}					
#		'I_AMPA_Adend3': {'sec':'Adend3', 'loc':0.5, 'synMech': 'AMPA', 'var': 'i'}
		}

iNMDA:
[[./gif/traces_gNMDA_PT5_Bdend1.png]]

gNMDA:
[[./gif/traces_iNMDA_PT5_Bdend1.png]]


Then ran sims with all the other pops:
[[./gif/traces_gNMDA_PT5_Bdend1_pops.png]]
[[./gif/traces_iNMDA_PT5_Bdend1_pops.png]]
   
Bill suggestion: activation too short, aim to 300-400ms
also, start working with Joe's new cell.

Joe suggested to modify the Tau2 of NMDA, but he is working with a differen mod file.
The NMDA file that I am working on, contains these parameters:

  mg    = 1.    (mM)       : external magnesium concentration
  Cdur	= 1.	(ms)	   : transmitter duration (rising phase)
  Alpha	= 4.	(/ms mM)   : forward (binding) rate
  Beta	= 0.0067 (/ms)	   : backward (unbinding) rate 1/150
  Erev	= 0.	(mV)	   : reversal potential 

Only parameter that I can modify from netpyne is erev.

Next include Joe's cell. It required 2 cells: SPI6.py and eee7.py.

Also I found a possible error for the activity of IT5. Adend1 was not correctly included in the section list. Corrected.

Changed netstin to 100Hz and 20 spikes:
[[./gif/traces_iNMDA_newPT5_Bdend1.png]]
[[./gif/raster_newPT5_AMPANMDA.png]]
[[./gif/traces_newPT5_AMPANMDA.png]]

only AMPA:
[[./gif/traces_newPT5.png]]
[[./gif//raster_newPT5.png]]

 
* 08-04-17
Bill suggested to use AMPA and NMDA from internals at /usr/site/nrniv/local/mod

Salva and Joe use MyExp2SynNMDABB for NMDA
Salva uses MyExp2SynBB for AMPA and GABAA
Joe just uses the AMPA

I will try Salva's parameters first.

ran sim with just AMPA:
[[./gif/traces_newPT5_newAMPA.png]]
[[./gif/raster_newPT5_newAMPA.png]]

sim plus AMPA and NMDA in the basal dendrites:
[[./gif/traces_newPT5_newAMPANMDA.png]]
[[./gif/raster_newPT5_newAMPANMDA.png]]

longer NMDA tau2 (3x):
[[./gif/traces_newPT5_newAMPANMDA_tau2_3_bdend.png]]
[[./gif/traces_newPT5_newAMPANMDA_tau2_3.png]]
[[./gif/raster_newPT5_newAMPANMDA_tau2_3.png]]

NMDA tau2 5x:
[[./gif/traces_newPT5_newAMPANMDA_tau2_5.png]]
[[./gif/traces_newPT5_newAMPANMDA_tau2_5_bdend.png]]
[[./gif/raster_newPT5_newAMPANMDA_tau2_5.png]]

decreased the weight for AMPA to 0.02:
[[./gif/traces_newPT5_newAMPA_wt02.png]]
[[./gif/raster_newPT5_newAMPA_wt02.png]]

and added AMPA/NMDA:
[[./gif/traces_newPT5_newAMPANMDA_tau2_5_wt02.png]]
[[./gif/raster_newPT5_newAMPANMDA_tau2_5_wt02.png]] 

showed to bill only AMPA stim:
might as well put in all the synapses at same time since will need to retune from scratch
3:52
and also fix the VIP, SOM, PV connects
3:52
then retune

One posibility is to target VIP only PV and SOM and spare the principal neuron.
it modifies the firing of the network:
[[./gif/traces_newPT5_VIPtoinh.png]]
[[./gif/raster_newPT5_VIPtoinh.png]]

sim of VIP to inh, and exc only to VIP:
[[./gif/traces_newPT5_VIPtoinh_exctoVIP.png]]
[[./gif/raster_newPT5_VIPtoinh_exctoVIP.png]]

then exc to other interneurons but only by a factor of 0.4:
[[./gif/traces_newPT5_VIPtoinh_exctoVIP_exctonoVIP04.png]]
[[./gif/raster_newPT5_VIPtoinh_exctoVIP_exctonoVIP04.png]]

decreased exc to inh weight:
  gain = 1
  EEgainL2 = gain*1#cfg.EEgainL2
  EEgainL5 = gain*1#cfg.EEgainL5
  EEgainL6 = gain*1#cfg.EEgainL6
  IEgainL2 = gain*0.3#cfg.IEgainL2 #0.6
  IEgainL5 = gain*0.5#cfg.IEgainL5 #0.7
  IEgainL6 = gain*1#cfg.IEgainL6 #0.5
  IIgain = gain*1#cfg.IIgain
  EIgain1= gain*1#cfg.EIgain VIP
  EIgain2 = gain*0.4#cfg.EIgain noVIP
  VIPgain = gain*1

only AMPA:
[[./gif/traces_newPT5_inhmod_AMPA.png]]
[[./gif/raster_newPT5_inhmod_AMPA.png]]
recording of PT5:
[[./gif/traces_newPT5rec_inhmod_AMPA.png]]

added AMPA/NMDA:
[[./gif/traces_newPT5rec_inhmod_AMPANMDA.png]]
[[./gif/raster_newPT5_inhmod_AMPANMDA.png]]
plus recording iNMDA:
[[./gif/traces_newPT5rec_inhmod_AMPANMDA_iNMDA.png]]


Conclussion: inhibitory input drives the PT5 output. 
Next:Check compartment connectivity of inh to exc.

* 08-07-17

Goals: Tune the network I->E balance.

First: modified connectivity I->E. PV to soma and SOM to Adend3.
[[./gif/traces_newPT5_inhmod2_AMPA.png]]
[[./gif/raster_newPT5_inhmod2_AMPA.png]]

then decreased the gain of E->I to 10 %:
[[./gif/traces_newPT5_inhmod2_AMPA_EI01.png]]
[[./gif/raster_newPT5_inhmod2_AMPA_EI01.png]]

L2 and L5 don't have activity even if the connectivity I->E is modified.

setting batch:
cfg.EEgain = [0.8, 1.0, 1.2] 
cfg.EIgain = [0.8, 1.0, 1.2] 
cfg.IEgain = [0.8, 1.0, 1.2] 
cfg.IIgain = [0.8, 1.0, 1.2] 
 
modified inhbitory connectivity. VIP interneurons sends outputs to interneurons and only receive inputs from principal neurons:
[[./gif/traces_newPT5_inhmod3_AMPA.png]]
[[./gif/raster_newPT5_inhmod3_AMPA.png]]

Decreases weight I->I by 10, induce epileptogenic activity:
[[./gif/traces_newPT5_inhmod3_AMPA_II01.png]]
[[./gif/raster_newPT5_inhmod3_AMPA_II01.png]]

Then modified PV to non PV interneurons. decreased weight by 50%:
[[./gif/traces_newPT5_inhmod4_AMPA.png]]
[[./gif/raster_newPT5_inhmod4_AMPA.png]]

Change activity still difficult to control.

* 08-08-17
Goals: improved inhbitory network and reproduced soma plateaus.

turned off the netstim to all the cells and then only induced AMPA/NMDA (NMDA params: tau2 900; 1 spike) to PT5 cells.
Weight 0.1:
[[./gif/traces_newPT5_inhmod4_AMPANMDA_tau6x_wt01.png]]
[[./gif/raster_newPT5_inhmod4_AMPANMDA_tau6x_wt01.png]]
[[./gif/traces_newPT5_inhmod4_AMPANMDA_tau6x_wt01_bdend.png]]
Weight 0.3:
[[./gif/traces_newPT5_inhmod4_AMPANMDA_tau6x_wt03.png]]
[[./gif/raster_newPT5_inhmod4_AMPANMDA_tau6x_wt03.png]]
[[./gif/traces_newPT5_inhmod4_AMPANMDA_tau6x_wt03_bdend.png]]

Soma dendritic plateaus is induced without background activity in the network.  

then, PV conectivity weight to VIP and SOM was decreased by factor of 0.6 
[[./gif/traces_newPT5_inhmod5_AMPA_bdend.png]]
[[./gif/ratser_newPT5_inhmod5_AMPA.png]]
[[./gif/traces_newPT5_inhmod5_AMPA.png]]

From meeting:
Bill suggested to replicate plateaus produced by Joe.
Also to use SaveStates.

* 08-09-17
Goals: to replicate dendritic plateaus from Joe

First: modified netstim in netParams and cfg. Method similar to IClamp. Advantages that can be easily modified to run a batch.

on netstim:
cfg.NetStim1 = {'pop':'PT5','sec':'Bdend1','loc':0.3,'synMech':['AMPA','NMDA'],'start':200,'interval':20,'noise':0.1,'number':1,'weight':0.1,'delay': 1}

on cfg:
if cfg.addNetStim:
  #cfg.NetStim1 = {'pop':'PT5','sec':'Bdend1','loc':0.3,'synMech':['NMDA'],'start':200,'interval':20,'noise':0.1,'number':1,'weight':0.1,'delay': 1}

  # single NetStim
  for key in [k for k in dir(cfg) if k.startswith('NetStim')]:
    params = getattr(cfg, key, None)  
    
    cfg.analysis['plotTraces']['include'].append((params['pop'],0))  # record that pop

    # add stim source
    netParams.stimSourceParams[key] = {
      'type': 'NetStim',
      'start': params['start'],
      'interval': params['interval'],
      'noise': params['noise'],
      'number': params['number']}
    
    # connect stim source to target
    for i, syn in enumerate(params['synMech']):
      netParams.stimTargetParams[key+'_'+params['pop']+'_'+syn] =  {
        'source': key,
        'conds': {'popLabel': params['pop']},
        'sec': params['sec'],
        'loc': params['loc'],
        'synMech': syn,
        'weight': params['weight'],
        'delay': params['delay']}

on batch:   
def dendPlateau():
	params = specs.ODict()

	params['tau2NMDA'] = [1.0, 2.0, 4.0, 6.0, 8.0]
	params[('NetStim1', 'weight')] = [0.01, 0.02, 0.04, 0.06, 0.08, 0.1]
		

	b = Batch(params=params, netParamsFile='netParams.py', cfgFile='cfg.py')

	grouped = []  # list of params that are grouped (vary together)
	for p in b.params:
		if p['label'] in grouped: p['group'] = True
	return b

sim from batch only NMDA:
Tau2: 1200ms
Weight: 0.1
[[./gif/batch_4_5_traces.png]]


Joe suggested AMPA and NMDA in a ratio of 0.2 for AMPA to 1 for NMDA.

need to modify netParams and cfg to include to different values for AMPA and NMDA:

netParams:
for i, syn in enumerate(params['synMech']):
      synWeight = params['weight'][i]
      netParams.stimTargetParams[key+'_'+params['pop']+'_'+syn] =  {
        'source': key,
        'conds': {'popLabel': params['pop']},
        'sec': params['sec'],
        'loc': params['loc'],
        'synMech': syn,
        'weight': synWeight, 
        'delay': params['delay']}

cfg:
cfg.NMDAw = 0.1
cfg.AMPAw = cfg.NMDAw*0.2
cfg.NetStim1 = {'pop':'PT5','sec':'Bdend1','loc':0.3,'synMech':['AMPA','NMDA'],'start':200,'interval':20,'noise':0.1,'number':1,'weight':[cfg.AMPAw, cfg.NMDAw],'delay': 1}

batch:
params['NMDAw']	=[0.01, 0.02, 0.04, 0.06, 0.08, 0.1]

sim from batch with AMPA and NMDA (ratio:0.2):
Tau2: 1200ms
NMDA Weight: 0.1
[[./gif/batch_4_5_traces_AMPANMDA_bdend.png]]
[[./gif/batch_4_5_traces_AMPANMDA.png]]

Joe checked the repo and suggested to reduce the for the dendrites for the PT5:
nax_gbar_dendm = 0.1
before, it was set to 1.0

Also, the batch was not varying the weight. Joe suggested this change:

for i, syn in enumerate(params['synMech']):
      if syn == 'AMPA':
        synWeight = cfg.NMDAw*0.2
      elif syn == 'NMDA':
        synWeight = cfg.NMDAw
      netParams.stimTargetParams[key+'_'+params['pop']+'_'+syn] =  {
          'source': key,
          'conds': {'popLabel': params['pop']},
          'sec': params['sec'],
          'loc': params['loc'],
          'synMech': syn,
          'weight': synWeight,
          'delay': params['delay']}

  
and change location of stim to 0
* 08-10-17
goals: replicate Joe's plateau

After changes from yesterday, ran batched:

NMDA: tau2: 1200; weight: 0.08.
[[./gif/batch_4_4_traces.png]]

It is different the max weight in joe' sim.

joe's parameters.multi file differences:
:DEFAULT h_BS
:DEFAULT MyExp2SynBB
:DEFAULT cat_mig
:DEFAULT cagk
:DEFAULT IC
:DEFAULT h_harnett
:DEFAULT HCN1
:DEFAULT ar_traub
:DEFAULT cat_traub
:DEFAULT cal_mh
:DEFAULT nap_sidi
:DEFAULT ican_sidi

AMPA from DMS.

Run batch with same parameters.multi than joe and AMPA from DMS. 
Similar plateaus:
[[./gif/batch_4_4_traces_DMS_AMPA.png]]
a bit slower with the new AMPA.
This one is very similar to previous Joe's simulations
Joe founf that the sodium conductance was reduced to the 10% in the dendrites of the cell.
Also round number for this paremeter was used for Joe.

* 08-14-17 mpi malfunctioning and Joe's replication of sim
zn simulation had a segmentation failure:

zn% python init.py
Warning: no DISPLAY environment variable.
--No graphics will be displayed.
NEURON -- VERSION 7.5 master (0388d94) 2017-08-09
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016
See http://neuron.yale.edu/neuron/credits
loading membrane mechanisms from x86_64/.libs/libnrnmech.so
Additional mechanisms from files
 misc.mod stats.mod infot.mod vecst.mod nstim.mod samnutils.mod MyExp2SynNMDABB.mod kap_BS.mod kdmc_BS.mod kdr_BS.mod nax_BS.mod cadad.mod can_mig.mod cal_mig.mod savedist.mod h_kole.mod kBK.mod AMPA.mod NMDA.mod GABAA.mod GABAB.mod
first instance of j
first instance of itmp
first instance of using_cvode_
first instance of movie_frame_dur_
first instance of realtime
first instance of running_
first instance of rtstart
first instance of stdrun_quiet
first instance of screen_update_invl
first instance of tstop
first instance of steps_per_ms
first instance of nstep_steprun
first instance of runStopAt
first instance of runStopIn
first instance of global_ra
first instance of mapped_nrnmainmenu_
first instance of v_init
first instance of n_graph_lists
first instance of i
first instance of eventslow
first instance of eventcount
first instance of cnt
*******
  Note: NeuroML import failed; import/export functions for NeuroML will not be available. 
  Install the pyNeuroML & libNeuroML Python packages: https://www.neuroml.org/getneuroml
*******
cylinder must be in list ['cuboid', 'ellipsoid', ' cylinder']
ERROR: NetParams->'shape': Shape is not valid.cylinder must be in list ['cuboid', 'ellipsoid', ' cylinder']
Creating network of 1 cell populations on 1 hosts...
  Number of cells on node 0: 1 
  Done; cell creation time = 0.04 s.
Making connections...
  Number of connections on node 0: 0 
  Done; cell connection time = 0.00 s.
Adding stims...
  Number of stims on node 0: 2 
  Done; cell stims creation time = 0.00 s.
Recording 1 traces of 1 types on node 0
Segmentation fault (core dumped)

running mpi produced same problem:

zn% sim
/u/sergioangulo/projects/eeeserg/eee/sim
batch_analysis.py  cellshape.py  __init__.py    netParams2.py  runsim*
batch.py       cfg.py    init.py    netParams.py   traces.png
batch_utils.py     compile*  mod/       raster.png     x86_64@
cells/         conn/     my_batches.py  runbatch*
zn% runsim
rm: cannot remove â*.pycâ: No such file or directory
[zn:38869] *** Process received signal ***
[zn:38869] Signal: Segmentation fault (11)
[zn:38869] Signal code: Address not mapped (1)
[zn:38869] Failing at address: 0x44000098
[zn:38869] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0x10330) [0x7fd83f3d3330]
[zn:38869] [ 1] /usr/lib/libmpi.so.1(PMPI_Comm_dup+0x4e) [0x7fd83e07877e]
[zn:38869] [ 2] /usr/site/../arch/nrn/x86_64/lib/libnrnmpi.so.0(nrnmpi_init+0xed) [0x7fd840e54bad]
[zn:38869] [ 3] nrniv(main+0x3b) [0x4020bb]
[zn:38869] [ 4] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7fd83e8bbf45]
[zn:38869] [ 5] nrniv() [0x40215f]
[zn:38869] *** End of error message ***
[zn:38868] *** Process received signal ***
[zn:38868] Signal: Segmentation fault (11)
[zn:38868] Signal code: Address not mapped (1)
[zn:38868] Failing at address: 0x44000098
[zn:38868] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0x10330) [0x7fa53a9f1330]
[zn:38868] [ 1] /usr/lib/libmpi.so.1(PMPI_Comm_dup+0x4e) [0x7fa53969677e]
[zn:38868] [ 2] /usr/site/../arch/nrn/x86_64/lib/libnrnmpi.so.0(nrnmpi_init+0xed) [0x7fa53c472bad]
[zn:38868] [ 3] nrniv(main+0x3b) [0x4020bb]
[zn:38868] [ 4] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7fa539ed9f45]
[zn:38868] [ 5] nrniv() [0x40215f]
[zn:38868] *** End of error message ***
[zn:38871] *** Process received signal ***
[zn:38871] Signal: Segmentation fault (11)
[zn:38871] Signal code: Address not mapped (1)
[zn:38871] Failing at address: 0x44000098
[zn:38871] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0x10330) [0x7fa7db90e330]
[zn:38871] [ 1] /usr/lib/libmpi.so.1(PMPI_Comm_dup+0x4e) [0x7fa7da5b377e]
[zn:38871] [ 2] /usr/site/../arch/nrn/x86_64/lib/libnrnmpi.so.0(nrnmpi_init+0xed) [0x7fa7dd38fbad]
[zn:38871] [ 3] nrniv(main+0x3b) [0x4020bb]
[zn:38871] [ 4] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7fa7dadf6f45]
[zn:38871] [ 5] nrniv() [0x40215f]
[zn:38871] *** End of error message ***
[zn:38870] *** Process received signal ***
[zn:38870] Signal: Segmentation fault (11)
[zn:38870] Signal code: Address not mapped (1)
[zn:38870] Failing at address: 0x44000098
[zn:38870] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0x10330) [0x7f262df35330]
[zn:38870] [ 1] /usr/lib/libmpi.so.1(PMPI_Comm_dup+0x4e) [0x7f262cbda77e]
[zn:38870] [ 2] /usr/site/../arch/nrn/x86_64/lib/libnrnmpi.so.0(nrnmpi_init+0xed) [0x7f262f9b6bad]
[zn:38870] [ 3] nrniv(main+0x3b) [0x4020bb]
[zn:38870] [ 4] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7f262d41df45]
[zn:38870] [ 5] nrniv() [0x40215f]
[zn:38870] *** End of error message ***
===================================================================================
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   EXIT CODE: 139
=   CLEANING UP REMAINING PROCESSES
=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES
===================================================================================
YOUR APPLICATION TERMINATED WITH THE EXIT STRING: Segmentation fault (signal 11)
This typically refers to a problem with your application.
Please see the FAQ page for debugging suggestions

Salva found similar error running his code.

Salva suggested to debug and found problem in the code.

only commented one line stop the segmentation fault to stop if the code was started from "python init.py"

#netParams.popParams['PT5']  = {'cellModel': 'HH_reduced', 'cellType': 'PT5B', 	'xRange': columnA, 'yRange': layer['5'], 'numCells':int(p*0.5*num['E'][1])}
 
If the whole code was commented still will cause the segmentation default.

ran mpi test:

mpiexec -n 3 nrniv -mpi /u/billl/NeuronModels/m1simnetcon/test0.hoc

generated similar problem.

Adam and Bill started working fixing the problem.

Joe founf that the 2 simulation code have same output:
[[./gif/20170811_150800.png]]


* 08-14-17
 
test file are working at cu and my. 

mpiexec -n 4 nrniv -mpi -python /u/billl/nrniv/talks/test0.py

my% mpiexec -n 4 nrniv -mpi -python /u/billl/nrniv/talks/test0.py
numprocs=4
NEURON -- VERSION 7.5 master (0388d94) 2017-08-09
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016
See http://neuron.yale.edu/neuron/credits

Additional mechanisms from files
 misc.mod stats.mod infot.mod vecst.mod nstim.mod samnutils.mod MyExp2SynNMDABB.mod kap_BS.mod kdmc_BS.mod kdr_BS.mod nax_BS.mod cadad.mod can_mig.mod cal_mig.mod savedist.mod h_kole.mod kBK.mod AMPA.mod NMDA.mod GABAA.mod GABAB.mod
I am 2 of 4

I am 3 of 4

I am 1 of 4

I am 0 of 4

Ran sim with netpyne but still have segmentation failure.

Probably need to intall NEURON in my laptop and work from there.

Problem fix it. sims are running.

back to running simulations.

First reproduce graphics from joe:
[[./gif/batch_3_5_traces.png]]
  
for some strange reason .png is not buffered on emacs.

run simulation of PT5 inside the network:
[[./gif/traces_PT5_network.png]]

it did not induce plateau. Same parameters as before.

next to shutdown IE weights.

[[./gif/traces_PT5_network_IE0.png]]

Ran batch on au (slower) and zn.

Modified the gains for the Excitatory to excitatory connections and the Inhibitoy-to-inhibitory connections

* 08-15-17

Meeting with the lab:

Report on here:
https://docs.google.com/document/d/1K65gLE66VDW26nNDwTByo0NWT9e-NCA-DZYPeNSPO-0/edit?usp=sharing

From batch simultion, firing of the cells is completely different to the single cell simulation. 

then checking on netParams.cellParams.PT5_reduced, the cell have a really short apical dendrite .

modified and the cells fires really close to the dendritic plateau.
[[./gif/traces_PT5_network_IE001_normal_lenght.png]]

Suggestion:

Move to NMDA DMS

Use 600 ms for tau2.

ran a batch with those parameters. 

Batch with tau2 600ms:

[[./gif/IEbalance_plateau.png]]

* 08-16-17

goal: work with NMDA DMS

Asked Penny how to modify Cdur on the hoc file:

If u want to modify it in netpyne, write Cdur in the RANGE part, like: RANGE B, Cdur. Recompile the mod file, then u should be able to modify the value in netpyne


[3:24] 
netParams.synMechParams['NMDA'] = {'mod': 'NMDA', 'Cdur': 'the value u want or set the values in cfg'}


[3:25] 
Same for Alpha and Beta, put them in RANGE and recompile

get error message:
File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 1141, in _setConnSynMechs
    synMechs = [self.addSynMech(synLabel=params['synMech'], secLabel=synMechSecs[i], loc=synMechLocs[i]) for i in range(synsPerConn)] 
  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 593, in addSynMech
    setattr(synMech['hSyn'], synParamName, synParamValue)
LookupError: 'Beta' is not a defined hoc variable name.
 
Try different ways but couldn't compile penny's file

I'll ask her tomorrow.

* 08-17-17
Goals: run sim with NMDA DMS

Couldn't modified the parameter from netpyne. Then tried changing parameters from mod files.

Tried sims modifying Cdur and beta, but it didn't produce significant changes:

Cdur 1000, original value 1.
[[./gif/batch_dendplateau_newNMDA_Cdur1000_6_traces.png]]

Beta 0.001, original value 0.0067
[[./gif/batch_dendplateau_newNMDA_Cdur1000_6_traces.png]]

Now try effects of IE balance on the dendritic plateau with new NMDA.

check that for every simulation a rasterplot  is generated in the batch:

on netParams:
cfg.analysis['plotRaster']

on cfg:
cfg.analysis['plotRaster'] = {'orderBy': 'gid', 'orderInverse':True,'labels':'overlay','popRates': True,'lw': 0.6,'marker': '|','saveFig': True}

batch with new NMDA and balance of inh and exc weight gains:
[[./gif/IEbalance_plateau_newNMDA.png]]

Tried to run simulation incorporating GABAB to SOM synapses but there is not a big difference.

* 08-18-17
Goal: check if stim to VIP at the same time with basal dendrite produce the plateaus.

Realized thta batch with GABAB were not set-up in the correct way, I didn't include GABAB in the synMechPrams. Re-runing batch

New batch shows that GABAB for SOM interneuron produced stronger inhibition on PT5 cells.

Added GABAslow similar to Salva's M1 model:
netParams.synMechParams['GABAASlow'] = {'mod': 'MyExp2SynBB','tau1': 2, 'tau2': 100, 'e': -80}

For SOM to inhibitory has:
SOMISynMech = ['GABAASlow']

For SOM to Exc:
SOMESynMech = ['GABAASlow','GABAB']

sim: similar to only GABAB.

Then run simulation and added second netsim to VIP5 pop. This will inhibit PV and SOM pops.
[[./gif/traces_bend_VIP_stim.png]]
[[./gif/raster_bdend_PT5_stim.png]]
EEgain = 1
IEgain = 1
Stim to VIP5 started at 180 ms

then control sim without stim to VIP5.
[[./gif/traces_bdend_stim.png]]
[[./gif/raster_bdend_stim.png]]

* 08-21-17

Goals: NMDA DMS

added misc.h to mod directory and recompile on 'zn'
 
bill added misc.h on mkmod

joe is checking the compiling problems.

bill solution for multiple params:
can do from parameters.multi by simply making another one


[4:31] 
NEURON{ POINT_PROCESS NMDA_spill


[4:31] 
NEURON{ POINT_PROCESS NMDAesyn


[4:31] 
whatever we want to call it (but let's all call it the same thing)


[4:31] 
can set that one to have a longer CDUR to start with in   Cdur  = 1.  (ms)     : transmitter duration (rising phase)
and then also modify later in the py or netpyne files

then remove all the lines that are not used on parameters.multi:

DEFAULT vecst
DEFAULT nstim

DEFAULT MyExp2SynBB

: Ben Suter ion channels
DEFAULT h_BS
DEFAULT kap_BS
DEFAULT kdmc_BS
DEFAULT kdr_BS
DEFAULT nax_BS

DEFAULT cadad

: mig ion channels
DEFAULT cat_mig
DEFAULT can_mig
DEFAULT cal_mig

: Kole 2006 H channel
DEFAULT h_kole

: BK channel with ca and voltage dependence
DEFAULT kBK

: based on destexhe
DEFAULT gabab

: Channels for 3-comp FScell 
DEFAULT nafx
DEFAULT kdrin
DEFAULT IKsin
DEFAULT hin
DEFAULT canin
DEFAULT kapin
DEFAULT kctin
DEFAULT cadyn

: Channels for 3-comp LTScell 
DEFAULT kapcb
DEFAULT catcb

:Vecstim used for long-range pops
DEFAULT vecstim

:* SYNAPSES

:** AMPA

NEURON {POINT_PROCESS AMPA}

PARAMETER {
  Cdur  = 0.3   (ms)        : transmitter duration (rising phase)
  Alpha = 0.47  (/ms mM)    : forward (binding) rate
  Beta  = 0.18  (/ms)       : backward (unbinding) rate
  Erev  = 0 (mV)        : reversal potential
}
INCLUDE "netcon.inc"

:** NMDA
NEURON{ POINT_PROCESS NMDA
  RANGE B 
  GLOBAL mg
}

PARAMETER {
  mg        = 1.    (mM)       : external magnesium concentration
  Cdur  = 1.    (ms)       : transmitter duration (rising phase)
  Alpha = 4.    (/ms mM)   : forward (binding) rate
  Beta  = 0.0067 (/ms)     : backward (unbinding) rate 1/150 
  Erev  = 0.    (mV)       : reversal potential
}

ASSIGNED { B }

INCLUDE "netcon.inc"
: EXTRA BREAKPOINT MUST BE BELOW THE INCLUDE
BREAKPOINT {
  rates(v)
  g = g * B : hence g = gmax * R * B
  i = i * B : hence i = g*(v - Erev)
}

PROCEDURE rates(v(mV)) {
  TABLE B
  DEPEND mg
  FROM -100 TO 80 WITH 180
  B = 1 / (1 + exp(0.062 (/mV) * -v) * (mg / 3.57 (mM)))
}

:** GABAA
NEURON {  POINT_PROCESS GABAA }
PARAMETER {
  Cdur  = 0.3   (ms)        : transmitter duration (rising phase)
  Alpha = 10    (/ms mM)    : forward (binding) rate
  Beta  = 0.16  (/ms)       : backward (unbinding) rate
  Erev  = -80   (mV)        : reversal potential
}
INCLUDE "netcon.inc"

Problem: Joe and me can not see a response of the cells after stim.

Tried to see if the inputs were ok with: netParams.cellParams.PT5_reduced.secs.Bdend1

In [8]: netParams.cellParams.PT5_reduced.secs.Bdend1
Out[8]: {ions: {na: {i: 10.0, e: 42.0, o: 140.0}, ca: {i: 5e-05, e: 132.4579341637009, o: 2.0}, k: {i: 54.4, e: -104.0, o: 2.5}}, mechs: {kBK: {tau: 1.0, caPmax: 1.0, caPmin: 0.0, caVhh: 0.002, caVhmin: -2.1899738592999967, gpeak: 5.09733585163e-05, caPh: 0.002, caPk: 1.0, k: 17.0, caVhmax: 155.67}, pas: {e: -88.5366550238, g: 7.620207783345154e-05}, cadad: {taur: 99.1146852282, depth: 0.119408607923, kt: 0.0, cainf: 0.00024, kd: 0.0}, ih: {aslope: 11.9, gbar: 0.000140956438043, ascale: 0.00643, bslope: 33.1, bscale: 0.193, ashift: 154.9}, kap: {vhalfn: 32.7885075379, gbar: 0.0898600246397, sh: 0.0, vhalfl: -59.7867409796, tq: -52.0967985869}, can: {gcanbar: 4.60717910591e-06}, cal: {gcalbar: 4.41583533572e-06}, nax: {gbar: 0.00345117294903, sh: 0.0}, kdr: {gbar: 0.0131103978049, sh: 0.0, vhalfn: 11.6427471384}}, geom: {nseg: 99, diam: 2.2799248874, L: 200.0, cm: 1.89771901209, Ra: 114.510490019}, _repr_mimebundle_: {}, vinit: -75.0413649414, topol: {childX: 0.0, parentSec: 'soma', parentX: 0.5}}

I couldn't see the synMechs.

then synMechs empty.

In [5]: netParams.cellParams.PT5_reduced.secs.Bdend1.synMechs
Out[5]: {_repr_mimebundle_: {}}

Tried exp2syn modl files and still no response.

* 08-22-17

Check conversation with Salva and Joe:

you won’t see synMechs in the cellParams — they are only added once connections are made — you can inspect eg. sim.net.cells[0].secs.soma.synMechs



salvadord [10:46 PM] 
@joe - so works ok with exp2syn but not with dms?


[10:50] 
is problem just with batch or also single sim?


joe [10:55 PM] 
I’ve just been running batches.  I’ll try a single sim.


joe [11:15 PM] 
I’ve been running single sims and changing weight in cfg.  Same problem: I can see proper value in my print statements, but I’m not seeing any response.


[11:15] 
I’ll keep digging around, I just wanted to make sure I wasn’t missing something simple.


salvadord [11:17 PM] 
where’s single sim example so I can try?


joe [11:19 PM] 
I just ran batch_init to get a single sim.


[11:20] 
in eee/sim/batches/batch_spillover


salvadord [11:34 PM] 
check whether the stims are actually being created, and what weight they have


[11:35] 
eg. sim.net.cells[0].stims


joe [11:36 PM] 
In [6]: sim.net.cells[0].stims
Out[6]: []


[11:37] 
And in looking, somehow I lost the spine where the stim should be…


[11:37] 
In [5]: sim.net.cells[0].secs[‘head50’]
Out[5]: {}


salvadord [11:37 PM] 
so maybe something else wrong with sim? guess 1st make sure stim created


[11:38] 
then can actually check weight in `sim.net.cells[0].conns` and NEURON netcon weight in  `sim.net.cells[0].conns[0]['hNetcon']`


joe [11:40 PM] 
Thanks for the tips.  I’ll keep digging.


Check netParams:

In [2]: netParams.connParams
Out[2]: ConnParams()

In [3]: netParams.stimSourceParams
Out[3]: 
StimSourceParams([('NetStim1',
                   {'interval': 100,
                    'noise': 0.1,
                    'number': 1,
                    'start': 200,
                    'type': 'NetStim'})])

In [4]: netParams.stimTargetParams
Out[4]: 
StimTargetParams([('NetStim1_PT5_AMPA',
                   {'conds': {'popLabel': 'PT5'},
                    'delay': 1,
                    'loc': 0.5,
                    'sec': 'Bdend1',
                    'source': 'NetStim1',
                    'synMech': 'AMPA',
                    'weight': 0.020000000000000004}),
                  ('NetStim1_PT5_NMDA',
                   {'conds': {'popLabel': 'PT5'},
                    'delay': 1,
                    'loc': 0.5,
                    'sec': 'Bdend1',
                    'source': 'NetStim1',
                    'synMech': 'NMDA',
                    'weight': 0.1})])

then sim.net.cells[0]:

>>> sim.net.cells[0].conns
[]
>>> sim.net.cells[0].secs.soma.synMechs
>>> {}
>>> sim.net.cells[0].secs.Bdend1.synMechs
{}

solution: Joe added this to parameters.multi:
RANGE B, Cdur, Alpha, Beta 

document for lab meeting:

https://docs.google.com/document/d/1snjddVKBiTznoFBGoBnvQ3MRfS4mzdxGusl-hVREhw4/edit?usp=sharing

* 08-23-17

Goal: Modify Cdur or Beta on the NMDA DMS mod file

Joe has tried to modify Cdur but didn't see any changes.

Now trying to work with Penny's NMDA mod file.

Joe and Bill were able to fix the files and compile with mkmod.

Now can modify Cdur and Beta from NMDA file

Run some batches trying to find values.

* 08-24-17

Goals: get params for network simulations

NMDA DMS
weight: 0.12
ratio: AMPA/NMDA 0.2
Beta: [0.01, 0.006666666666666667, 0.005]
Cdur: [0.1, 0.4, 0.7, 1, 5]
[[./gif/NMDA_DMS_Cdur_Beta.png]]

ask bill, joe and penny about AMPA/NMDA ratio

I was looking into penny’s sim and she has longer plateaus with different AMPA/NMDA ratios


billl [1:15 PM] 
but you are using the joe cells right? -- so you and joe should figure out the params you want to use


sergio [1:15 PM] 
yep, we are using a ratio of 0.2


billl 
[1:16 PM] 
joe is testing different params so get params from him


[1:16] 
when available


joe [1:16 PM] 
Yeah, part of going through my many figs is finding param values resulting on good plateaus.


sergio [1:17 PM] 
ok


joe [1:17 PM] 
I haven’t varied NMDA/AMPA ratio, but I will now.


billl [1:18 PM] 
that's good too;  but you already have some params that give the longer plateaus i think?


[1:18] 
some param sets


joe [1:20 PM] 
With DMS, increasing Cdur and Beta increase plateau duration.


billl 
[1:21 PM] 
what params do you want sergio to use?


joe [1:21 PM] 
Moving the stim location away from the soma increases plateau dur, but decreases spiking (will look into in more detail later today)


[1:22] 
Still working on getting good default param values.  I’ll keep updating.


billl 
[1:28 PM] 
good if just can pick one for him to start working with ;  he will eventually be running big batches with lots of param variations but this way can have a basic sim/startingpoint


joe [1:37 PM] 
I’ll work on this now.

params from joe:

cfg.NMDABetaScale  = 0.5
cfg.ratioAMPANMDA = 1.0
cfg.CdurNMDAScale = 5.0

* 08-25-17

Goal continue to work on network sims

discussion on EEE slack channel:

for definition, are we going to call plateaus longer than 100-200 ms?


new messages
billl [2:35 PM] 
i would go for >200


[2:36] 
NMDA spike would be <150;  150-200 will be no-man's land


Questions to Srdjan:

Evidence for subthreshold plateaus (no spikes)?
What is thought to be the Inhibitory/excitatory balance during plateaus? 
What percent spillover should we test?  (Also what delay?  Cdur?)
What differences would you expect from the addition of spillover?


ran sim with 2 stims. Params from Joe.
cfg.ratio = 1.0 
cfg.Cdur = 5.0

difference: Beta parameter was 0.5 for joe, seems to be to short (2ms). Modified to 
cfg.Beta = 0.005

Weight: 0.7

[[./gif/batch_dendplateau_VIPstim_phys_2_traces.png]]

* 08-28-17 

Check Joe's repo for the params.

Joe's batch params are factors to multiply by set params:
netParams.synMechParams['NMDA'] = {'mod': 'NMDA', 'Cdur': cfg.CdurNMDAScale * 1.0, 'Cmax': cfg.CmaxNMDAScale * 1.0, 'Alpha': cfg.NMDAalphaScale * 4.0, 'Beta': cfg.NMDABetaScale * 0.01}

joe's batch params:
cfg.NMDABetaScale  = 0.5
cfg.ratioAMPANMDA = 1.0
cfg.CdurNMDAScale = 5.0

beta would be: 0.005
ratio: remains as ratio 
Cdur: 5.0

run sim with these parameters and only one synapse:
[[./gif/batch_dendplateau_VIPstim_phys_1synapse_3_traces.png]]
weight: 0.1

ran batch varying the time between one stim to Bdend1 (fixed time) and a second stim to basal dend
 but didn't see changes expected.

check parameters with joe again. He uses a ratio of 3.0 and beta scale of 0.5
try a sim:  
[[./gif/batch_dendplateau_1synapse_3_traces.png]]
weight: 0.9

tried with the eee7ps cell but nneds more functions to be incorporated.

ran single cell sim:
[[./gif/batch_dendplateau_1synapse_5_traces.png]]
weight: 0.105

ran cell in the network context: 
[[./gif/batch_dendplateau_1synapse_netw_5_traces.png]]
weight: 0.105

* 08-29-17
Goals: plateau in the network 
 
From meeting:

Problem: depolarization block

-NMDA gmax too high
-check input impedance in single cell
-Salva has long lasting plateaus (>1s)
-long plateaus elicited by long connectivity, network of 1000 cells that induce 0-1Hz osc.
-Salva has increased HCN on his model
-Srdjan suggested to check firing threshold (too negative)
-On slice, theory of glutamate pocket and astrocyte glutamate uptake saturation 

For meeting prepare graph to show that inhibiton block can be bypass if weight of stim is increased 2x of what normally induce a response.

[[./gif/PT5_network_wt02.png]]
https://docs.google.com/document/d/1LnaM33Uze8RDBuF0SBf35ccsM-gRUoJCKwPr5wYoGCI/edit?usp=sharing

After meeting, I'm responsible to check Salva's long plateaus.

Salva's plateaus are produce by pulses:

on cfg:

cfg.addLongConn = 1
cfg.numCellsLong = 1  # num of cells per population
cfg.noiseLong = 1  # firing rate random noise
cfg.delayLong = 5.0  # (ms)
cfg.weightLong = 0.1#0.0001  # corresponds to unitary connection somatic EPSP (mV)
cfg.probLong = 0.1 #probability of connectivity

cfg.startLong = 10  # start at 0 ms
cfg.ratesLong = {'HPC':[0.0, 2.0], 'TC':[0.0, 2.0]}
#cfg.spkTimesLong = range(0,3000,20) 
#cfg.pulsesLong = {'start': 1000, 'end': 3000, 'rate': 1.0, 'noise': 0.5}#,
#        {'start': 1000, 'end': 3000, 'rate': 1, 'noise': 0.5}]

cfg.addPulses = 0
cfg.pulse = {'pop': 'None', 'start': 1000, 'end': 1200, 'rate': 20, 'noise': 0.5}


on netparams:

## Long-range input populations (VecStims)
if cfg.addLongConn:
  ## load experimentally based parameters for long range inputs

  numCells = cfg.numCellsLong
  noise = cfg.noiseLong
  start = cfg.startLong
  
  #spkTimes = cfg.spkTimesLong
  #pulses = cfg.pulsesLong

  longPops = ['HPC','TC']
  ## create populations with fixed 
  for longPop in longPops:
    netParams.popParams[longPop] = {'cellModel': 'VecStim', 
                    'numCells': numCells, 
                    'rate': cfg.ratesLong[longPop], 
                    'noise': noise, 
                    'start': start, 
                    'pulses': []#pulses 
                    #'spkTimes': spkTimes
                    }

if cfg.addPulses:
  for key in [k for k in dir(cfg) if k.startswith('pulse')]:
    params = getattr(cfg, key, None)
    [pop, start, end, rate, noise] = [params[s] for s in ['pop', 'start', 'end', 'rate', 'noise']]

    if pop in netParams.popParams:
      if 'pulses' not in netParams.popParams[pop]: netParams.popParams[pop]['pulses'] = {}  
      netParams.popParams[pop]['pulses'].append({'start': start, 'end': end, 'rate': rate, 'noise': noise})
 
and connectivity:

if cfg.addLongConn:
  
  longPops = ['HPC','TC']
  PT5 = ['PT5']

  for prePop in longPops:
        for postPop in PT5:
            ruleLabel = prePop+'->'+postPop
            netParams.connParams[ruleLabel] = {
                'preConds': {'pop': prePop},
                'postConds': {'pop': postPop},
                'synMech': 'AMPA', #ESynMech,#'NMDA',
                'probability': cfg.probLong, #EEgainL5*(pmat[ipre][ipost]),
                'weight': cfg.weightLong,#0.1*(wmat[ipre][ipost]),
                'delay': cfg.delayLong, #'defaultDelay+dist_3D/propVelocity',
                'loc': 0.5,
                'sec': 'Bdend1'}    


Checking if it works.

Joe comparing NMDA from DMS and MyExp2SynNMDABB

Has this script:

from neuron import h
h.load_file('stdrun.hoc')
import matplotlib.pyplot as plt
plt.ion()

sec = h.Section(name="sec")
dms = h.NMDA(0.5, sec=sec)
e2s = h.MyExp2SynNMDABB(0.5, sec=sec)

t_vec = h.Vector()
t_vec.record(h._ref_t)

dms_vec = h.Vector()
dms_vec.record(dms._ref_g)

e2s_vec = h.Vector()
e2s_vec.record(e2s._ref_g)
e2s_ivec = h.Vector()
e2s_ivec.record(e2s._ref_iNMDA)

ns = h.NetStim() 
ns.number = 1
ns.start = 200
ns.noise = 0

nc = h.NetCon(ns, dms)
nc.delay = 1.0
nc.weight[0] = 0.2

nc2 = h.NetCon(ns, e2s)
nc2.delay = 1.0
nc2.weight[0] = 0.2

h.tstop = 1000
h.run()

#plt.subplot(211)
plt.plot(t_vec, dms_vec, label="DMS g")
#plt.legend()
#plt.subplot(212)
plt.plot(t_vec, e2s_vec, label="E2S g")
#plt.plot(t_vec, e2s_ivec, label="E2S iNMDA")
plt.legend()

Problem was to recor and plot g on MyExp2Syn. 

Previously I have recorded with sNMDA, but it was not working for you.

Bill modify mod file to include:
g = sNMDA * mgblock

on netpyne just need to set:
cfg.recordTraces = {'g_NMDA_Bdend1': {'sec':'Bdend1', 'loc':0.5, 'synMech': 'NMDA2', 'var': 'sNMDA'}}
[[./gif/traces_sNMDA_MyExp2SynNMDABB.png]]

* 08-30-17

Goals: reproduce Salva's long plateaus.

Can not make the pops to fire.

increased the number 100 and firing.

then to 1000.

rateslong produce firing in a range: [0,100] induce 50 Hz 
 
keep having problems at the convergence with mpi:

zn% runsim 1
numprocs=1
NEURON -- VERSION 7.5 master (0388d94) 2017-08-09
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016
See http://neuron.yale.edu/neuron/credits

Additional mechanisms from files
 vecst.mod nstim.mod MyExp2SynBB.mod MyExp2SynNMDABB.mod NMDA.mod NMDAes.mod h_BS.mod kap_BS.mod kdmc_BS.mod kdr_BS.mod nax_BS.mod cadad.mod cat_mig.mod can_mig.mod cal_mig.mod h_kole.mod kBK.mod gabab.mod nafx.mod kdrin.mod IKsin.mod hin.mod canin.mod kapin.mod kctin.mod cadyn.mod kapcb.mod catcb.mod vecstim.mod AMPA.mod GABAA.mod

*******
  Note: NeuroML import failed; import/export functions for NeuroML will not be available. 
  Install the pyNeuroML & libNeuroML Python packages: https://www.neuroml.org/getneuroml
*******


Reading command line arguments using syntax: python file.py [simConfig=filepath] [netParams=filepath]
Balancing each compartment to -73 mV
Balancing each compartment to -64 mV
Balancing each compartment to -70 mV

Creating network of 15 cell populations on 1 hosts...
  Number of cells on node 0: 1428 
  Done; cell creation time = 1.87 s.
Making connections...
  Number of connections on node 0: 19221 
  Number of synaptic contacts on node 0: 24181 
  Done; cell connection time = 3.12 s.
  Number of stims on node 0: 0 
  Done; cell stims creation time = 0.00 s.
Recording 2 traces of 1 types on node 0

Running simulation for 400 ms...
Convergence not achieved in maximum number of iterations
nrniv: scopmath library error
 near line 0
 ko0_k_ion = 2.5
                ^
        ParallelContext[1].psolve(400)
oc_restore_code tobj_count=1 should be 0
Traceback (most recent call last):
  File "init.py", line 26, in <module>
    sim.runSim()                      			# run parallel Neuron simulation
  File "/usr/site/nrniv/local/python/netpyne/netpyne/simFuncs.py", line 923, in runSim
    sim.pc.psolve(sim.cfg.duration)
RuntimeError: hoc error
>>> nrn_timeout t=282.1
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD
with errorcode 0.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------

asked salva about the error.
 
bill suggested:

-repo multiple heads
-too heavy
-'looks like all of your mod files use METHOD cnexp, i think can get rid of that'
- scop error prob coming from IKsin.mod:    ek = 25 * log(ko/ki)
kapcb.mod:    ek=25*log(ko/ki)            :Changed, added, 23/04/2010, Nassi
kdrin.mod:    ek = 25 * log(ko/ki)

cleaned repo multiple heads and removed gif folder.
size: 35.1 Mb

commenting out METHOD cnexp on IKsin.mod, kapcb.mod, kdrin.mod solved the problem

plateaus:
[[./gif/traces_longcon.png]]
[[./gif/raster_longcon.png]]

cfg.numCellsLong = 1000  # num of cells per population
cfg.noiseLong = 1  # firing rate random noise
cfg.delayLong = 5.0  # (ms)

cfg.weightLong = 0.00035 #0.0001  # corresponds to unitary connection somatic EPSP (mV)
cfg.probLong = 0.1 #probability of connectivity

cfg.startLong = 100  # start at 0 ms
cfg.ratesLong = {'HPC':[0, 2], 'PFC':[0, 2], 'cPFC':[0,2], 'MC':[0,2],'dTC':[30, 80]}
#cfg.spkTimesLong = range(0,3000,20) 


cfg.addPulses = 1
cfg.pulse = {'pop': 'None', 'start': 1000, 'end': 1200, 'rate': 20, 'noise': 0.5}

then tried single netstim with new params from joe:

cfg.NMDAw = 0.126615 # NMDA synaptic weight 
cfg.ratio = 3.0 #AMPA/NMDA ratio #0.2 #AMPA synaptic weight, 20% of the NMDA weight
cfg.Cdur = 40.0
cfg.Beta = 0.0015 #0.0125 #0.01

[[./gif/traces_newNMDAparams.png]]
[[./gif/raster_newNMDAparams.png]]
network context.

[[./gif/
network context + VIP stim

then long connectivity and modify PV weight gain to SOM-VIP to 1.0 (before 0.6)
[[./gif/traces_longcon2.png]]
[[./gif/raster_longcon2.png]]
cfg.weightLong = 0.00035 

* 08-31-17

bill comments from last sim: 

you are stimulating at 500?  -- let's stimulate at 0 and just run for 1e3 till get the balance right

now, starting stim at 0 and then sim for 1000 ms
[[./gif/traces_longcon3.png]]
[[./gif/raster_longcon3.png]]

then modify weight + IE balance?

bill suggestion:

ok so let's just cycle thru balancing till get alll the pops firing

compare to what salvador gets with input to same pop and try get something similar

now trying to add netstim to all pop with AMPA to soma.
[[./gif/traces_longcon4.png]]
[[./gif/raster_longcon4.png]]
cfg.weightLong = 0.000325 
cfg.netStimWeight = 0.025

changed rate for dTC from 30-80 to 0-2
[[./gif/traces_longcon5.png]]
[[./gif/raster_longcon5.png]]
cfg.netStimWeight = 0.02
cfg.weightLong = 0.000505

running batch. need to check traces.

* 09-01-17

Check balance in the network from background stim with AMPA and long connectivity to PT5.

record multiple traces for batch. Added to  addLongCon:
cfg.analysis['plotTraces']['include'].append((('PT5'),0))
cfg.analysis['plotTraces']['include'].append((('PT5'),10))
cfg.analysis['plotTraces']['include'].append((('PT5'),15)) #(params['pop'],0))  # record that pop
cfg.analysis['plotRaster']


modify mod files IKsin, kdrin, kapb
orig:
USEION k READ ko, ki WRITE ik

new:
USEION k READ ek  WRITE ik 

it might modify output. It did not induce activity on interneurons. Changing only on kapcb. 

for new repo need to add dir for data.

repo have error from Ko. fixing that.

commented out 'USEION k READ ko, ki WRITE ik' is working, not error message and activity on interneurons. 

* 09-05-17

Goal: poster + fig

batch simlation of AMPA netwtim to the soma of all the pops, plus long connectivity to basal dendrites of PT5 (AMPA/NMDA):
[[./gif/weightXweight_traces.png]]
[[./gif/weightXweight.png]]

batch netStim to all cells (AMPA): 0.025; long connectivity stimulation to PT5 (AMPA/NMDA): 4.7x10-4
varying inh-to-inh weight gain, and exc-to-exc weight gain:
[[./gif/IEbalanceTraces.png]]
[[./gif/IEbalanceRaster.png]]

bill suggested to do a long sim (3 s) with a sim from last batch:
[[./gif/traces_IEbalance.png]]
[[./gif/raster_IEbalance.png]]
Inhibitory-to-excitatory weight gain: 0.85; Excitatory-to-excitatory weight: 1.0 

** Meeting:

-inhibitory activity sees too strong:
-srdjan: raster figure is illegible change color pallete to increase contrast.
-bill: increase number of PT5 in the network.
-bill to srdjan: what is the function of layer 6 on PFC?
-bill and srdjan: try simple network, only PT5 and PV5 network

* 09-11-17
Goal: finish network 2 pops.

total cells 323: PT5: 212; PV5:111
connectivity E->E; E->I; I->E; I->I
I->E:0.01

stim to basal dend: AMPA-NMDA: 0.0025

[[./gif/traces_layer_longcon.png]]
[[./gif/raster_layer_longcon.png]]

PV cells don't have nice spikes.

check connectivty matrix:

[[./gif/plotConn_weight_layer.png]]
[[./gif/plotConn_prob_con.png]]
[[./gif/plotConn_strength_layer.png]]

now, changing IE balance:
better results with the netstim to soma if:
cfg.EEgain = 1.0
cfg.IEgain = 0.01
cfg.IIgainPV1 = 0.01
cfg.EIgain1 = 0.01 

now long connectivity to basal dendrite with AMPA/NMDA:
[[./gif/traces_longcon_layer.png]]
[[./gif/raster_longcon_layer.png]]

cfg.weightLong = 0.0006 
cfg.EEgain = 0.5
cfg.IEgain = 0.0
cfg.IIgainPV1 = 0.0
cfg.EIgain1 = 0.0 

* 09-12-17

goal: finish network 2 pops

[[./gif/traces_longcon_layer2.png]]
[[./gif/raster_longcon_layer2.png]]
cfg.EIgain1 = 0.01
include activation of interneurons.

[[./gif/traces_longcon_layer3.png]]
[[./gif/raster_longcon_layer3.png]]
cfg.EEgain = 1.0
cfg.IEgain = 0.0
cfg.IIgainPV1 = 0.0005 
cfg.EIgain1 = 0.05 


[[./gif/plotConn_longcon_layer4.png]]
[[./gif/traces_longcon_layer4.png]]
[[./gif/raster_longcon_layer4.png]]
nice activity:
cfg.weightLong = 0.0007
cfg.EEgain = 0.05
cfg.IEgain = 0.0001
cfg.IIgainPV1 = 0.0002 
cfg.EIgain1 = 0.02

increased inhibitory input to PT5, abolished the plateaus.
[[./gif/plotConn_longcon_layer5.png]]
[[./gif/traces_longcon_layer5.png]]
[[./gif/raster_longcon_layer5.png]]
cfg.weightLong = 0.0007
cfg.EEgain = 0.05
cfg.IEgain = 0.0005
cfg.IIgainPV1 = 0.0002 
cfg.EIgain1 = 0.02 

from the meeting:
 
srdjan: check short range and long range connectivity. Short range connectivity should link to basal dendrites while long range connectivity to apical dendrites.
srdjan: check for calcium influx.
srdjan: check changes in the network with plateaus and without.

* 09-13-17

Goals: changes connectivity, and record calcium.

new connectivity:
[[./gif/text3385.png]]
following indication from papoutsi 2013:
/u/sergioangulo/papers/papoutsi2013.pdf

total cells: 64; 41 exc; 13 inh

Changes long connectivity to netstim:
change connectivity to basal branch.
cfg.NetStim1 = {'pop':'PT5','sec':'Adend1','loc':0.5,'synMech':['AMPA','NMDA'],'start':200,'interval': 50,'noise':0.1,'number': 10,'weight':[0.1, 0,1],'delay': 1}
cfg.AMPAw = 1.1
cfg.ratio = 15.0; AMPA/NMDA

20Hz, 10 stim to apical dend, mainly AMPA.

added convergence:
E->E: 10; (5 for branch) to basal dend
E->I: 2; to soma
I->E: 4; to soma
I->I: 12; to soma

sim, no connecitvity only stim:
[[./gif/traces_newcon.png]]
[[./gif/raster_newcon.png]]


sim, added connectivity E->I:
[[./gif/plotConn_newcon2.png]]
[[./gif/traces_newcon2.png]]
[[./gif/raster_newcon2.png]]
cfg.EIgain1 = 0.04

sim, added connectivity I->I:
[[./gif/plotConn_newcon3.png]]
[[./gif/traces_newcon3.png]]
[[./gif/raster_newcon3.png]]
cfg.IIgainPV1 = 0.001

added connectivity I->E:
[[./gif/plotConn_newcon4.png]]
[[./gif/traces_newcon4.png]]
[[./gif/raster_newcon4.png]] 
cfg.IEgain = 0.001


* 09-14-17

added GABAslow in a ratio of 0.4 to GABAA.
added AMPA/NMDA ratio to basal dend: 0.3

Idea: strong recurrent input to basal dend induced long lasting calcium influx, nned to be counter balance by inhibitory activity:

cfg.EEgain = 0.04
cfg.IEgain = 0.0016 
cfg.IIgainPV1 = 0.0001
cfg.EIgain1 = 0.04
[[./gif/plotConn_newcon5.png]]
[[./gif/traces_newcon5.png]]
[[./gif/raster_newcon5.png]]


only one stim to Apical dend:

cfg.EEgain = 0.04
cfg.IEgain = 0.0018 
cfg.IIgainPV1 = 0.0001
cfg.EIgain1 = 0.04
[[./gif/plotConn_newcon6.png]]
[[./gif/traces_newcon6.png]]
[[./gif/raster_newcon6.png]]
[[./gif/traces_newcon6_bdend1.png]]
[[./gif/traces_newcon6_iNMDA_Bdend1.png]]

[[./gif/plot2Dnet_newconlayer.png]]

control experiment:

no E->E connectivity:

[[./gif/traces_newcon_control.png]]
[[./gif/raster_newcon6_control.png]]
[[./gif/plotConn_newcon6_control.png]]

* 09-15-17

Bill: your raster looks like no activity but maybe need bigger spots? :) -- but seriously see ~0 after the initial transient

Changing color and weight of raster plot:

cfg.analysis['plotRaster'] = {'include': L5,'orderBy': 'gid', 'orderInverse':True,'saveFig':'raster', 'labels':'overlay','popRates': True, 'syncLines':False, 'figSize': (12,10),'showFig': True,'lw': 1.0,'marker': '|', 'popColors': {'PT5':'red','PV5': 'blue'}}

[[./gif/raster_newcon6_darklines.png]]
[[./gif/raster_newcon5_darklines.png]]

Bill: you need some irreg poisson bg now have no activity

added netstim:
freq: 100
noise: 1
weight: 0.012
mech: AMPA
sec: Adend1
loc: 0.5

cfg.EEgain = 0.04 
cfg.IEgain = 0.0016 
cfg.IIgainPV1 = 0.0001 
cfg.EIgain1 = 0.04

[[./gif/traces_newcon7.png]]
[[./gif/raster_newcon7.png]]

increased weight: 0.2
[[./gif/traces_newcon7_wt02.png]]
[[./gif/raster_newcon7_wt02.png]]

control experiment: only AMPA on E->E connectivity:
[[./gif/traces_newcon7_control.png]]
[[./gif/raster_newcon7_control.png]]
weight: 0.5

bill:

still seems very stereotyped


[4:48] 
guess need to inc the weight or better yet put it in soma or in proximal apical dend


sergio [4:49 PM] 
the netstim input is included in the proximal apical dend


billl 
[4:50 PM] 
ok so need to increase the weight then -- how many netstims?


[4:50] 
prob need at least 20 , might need 100


[4:50] 
guess could try with 10 first


[4:51] 
and then increase if needed


sergio [4:51 PM] 
ok let me try that


billl [4:51 PM] 
oh no ; let me correct that; how many cells in network?


sergio [4:51 PM] 
I have one netstim on that sim


[4:51] 
64


billl [4:51 PM] 
1 netstim? -- oh that won't help at all


[4:52] 
64 cells ok so lets try 64 netstims and put 1 on each cell


[4:52] 
else all the cells will just do the same thing which is what you are seeing


sergio [4:54 PM] 
there are 41 excitatory cells, so should I use 41 netstims?


billl 
[4:54 PM] 
oh thought you said 64 cells??


sergio [4:55 PM] 
in total. I also have 13 inh cells


billl 
[4:55 PM] 
can drive those too


sergio [4:55 PM] 
ok


billl 
[4:56 PM] 
or could drive both E and I cells with 1 AMPA and 1 GABAA


[4:56] 
see how it looks


[4:56] 
make it look like some kind of reasonable ongoing activiity


Changing input to external pulses.

and all probabilitiesare set to 1.

* 09-16-17

Goal: finish model 2 pops with multiple netstims

impossible to balance the network if prob are set to 1. Either depolarization block or fluctuation:
if stim is a netstim to apical dend.
[[./gif/traces_newcon8.png]]
[[./gif/raster_newcon8.png]]

but with 10 stim at 20 Hz can produce long lasting plateaus.

[[./gif/traces_newcon8_10stim.png]]
[[./gif/raster_newcon8_10stim.png]]
cfg.EEgain = 0.007
cfg.IEgain = 0.00078 
cfg.IIgainPV1 = 0.0001 
cfg.EIgain1 = 0.01
cfg.AMPAw = 1.8 

modified noise on netstim pulses (0.01) to PT5:
[[./gif/traces_newcon8_noise01.png]]
[[./gif/raster_newcon8_noise01.png]]
cfg.EEgain = 0.007
cfg.IEgain = 0.0007 
cfg.IIgainPV1 = 0.0001
cfg.EIgain1 = 0.018
cfg.weightLong = 0.01
cfg.probLong = 1
cfg.noiseLong = 0.01

one stim to PT5:
[[./gif/traces_newcon_stim1.png]]
[[./gif/raster_newcon_stim1.png]]
cfg.EEgain = 0.007
cfg.IEgain = 0.0008 
cfg.IIgainPV1 = 0.0001
cfg.EIgain1 = 0.01
cfg.AMPAw = 1.8

netstim started at 100ms:
[[./gif/traces_newcon8_start100.png]]
[[./gif/raster_newcon8_start100.png]]
noise: 0.1

one stim no NMDA to basal dend:
[[./gif/traces_newcon8_noNMDA.png]]
[[./gif/raster_newcon8_noNMDA.png]]
cfg.AMPAw = 1.8


one stim no NMDA to basal dend:
[[./gif/traces_newcon_noNMDA2.png]]
[[./gif/raster_newcon8_noNMDA2.png]]
cfg.AMPAw = 1.1

one stim NMDA to basal dend:
[[./gif/traces_newcon8_NMDA2.png]]
[[./gif/raster_newcon8_NMDA2.png]]
cfg.AMPAw = 1.1

[[./gif/plotConn_newcon8.png]]
[[./gif/plot2Dnet_newcon8.png]]

* 09-19-17

added netsim to dend of PV5:
weight: 0.003
[[./gif/traces_newcon8_netstimInh.png]]
[[./gif/raster_newcon8_netstimInh.png]]

netstim to PT5 and record on bdend
[[./gif/traces_newcon8_bdend_netsim.png]]
 
calcium influx trough NMDA at basal dendrite:
[[./gif/traces_newcon8_bdend_cai_netstim.png]]

meeting:

check hypersyncrony.


Found the netstim were connected to multiple cells:
[[./gif/plot2Dnet_newcon8_netstim.png]]

* 09-20-17

probability overrides covergence, divergence, connList 

removed probability from connectivity rules.

divergence: create one output per presynaptic cell, but 2 precells can connect one post.
convergence: create one input per postsynaptic cell, but one presynaptic can connect multiple post cell.

convergence overrides divergence. 

to chek pop params with gids:
sim.net.allPops

solution: using connList function, it has to specify list with pre and post ids. these ids are relative. every population start from 0. normally gids are consecutive in the network and include all the pops.

cellnumber = 41
cellnumber2 = 23
connList = [[] for i in range(cellnumber)]
connList2 = [[] for i in range(cellnumber2)]
for i in range(cellnumber): connList[i] = [i,i]
for i in range(cellnumber2): connList2[i] = [(i+41),i]
  
[[./gif/plot2Dnet_newcon9.png]]

kept covergence parameters inside the network.

changed gain parameters to actual weight. 

cfg.EEgain = 0.005 # basal dend 
cfg.IEgain = 0.06   #PV to exc
cfg.IIgainPV1 = 0.01 # PV to PV
cfg.EIgain1 = 0.5 # exc to PV

cfg.weightLong = 1.0   # to PT5 
cfg.weightLongInh = 0.2 # to PV5
cfg.noiseLong = 0.2 

cfg.ratesLong = {'dTC':[0, 100]}

[[./gif/plotConn_newcon9.png]]
[[./gif/traces_newcon9.png]]
[[./gif/raster_newcon9.png]]
[[./gif/traces_newcon9_noNMDA.png]]
[[./gif/raster_newcon9_noNMDA.png]]
responses seems to be only AMPA

strange: 10 stimluli at 20 hz, weight 1.8 induce prolongued firing. 

tunned network with 10 stim at 20 Hz.
[[./gif/traces_newcon9_stim10.png]]
[[./gif/raster_newcon9_stim10.png]]
cfg.EEgain = 0.0036 
cfg.IEgain = 0.0002 
cfg.IIgainPV1 = 0.002 
cfg.EIgain1 = 0.5
cfg.AMPAw = 0.85

then netstim pulses:
[[./gif/traces_newcon9_netstim.png]]
[[./gif/raster_newcon9_netstim.png]]
cfg.EEgain = 0.0055   # basal dend 
cfg.IEgain = 0.0006   #PV to exc 
cfg.IIgainPV1 = 0.002  # PV to PV
cfg.EIgain1 = 0.5 # exc to PV
cfg.noiseLong = 0.7
cfg.weightLong = 0.35   # to PT5 
cfg.weightLongInh = 0.1 # to PV5
cfg.ratesLong = {'dTC':[0, 100]}

[[./gif/plotConn_newcon9_2.png]]

long connectivity plot
[[./gif/plot2Dnet_newcon9_2.png]]
[[./gif/plot2Dnet_newcon9_3.png]]

control sim, no basal dend connectivity
[[./gif/traces_newcon9_noEE.png]]
[[./gif/raster_newcon9_noEE.png]]

* 09-21-17

bill: good; but now too much firing -- individual cells should be ~1-5 hz

plan: decrease noise, increase inh input, decrease driving input.

cfg.EEgain = 0.005   # basal dend 
cfg.IEgain = 0.001   #PV to exc 
cfg.IIgainPV1 = 0.002  # PV to PV
cfg.EIgain1 = 0.5 # exc to PV
cfg.noiseLong = 0.3  # firing rate random noise
cfg.weightLong = 0.4   # to PT5 
cfg.weightLongInh = 0.15 # to PV5
[[./gif/traces_newcon9_low.png]]
[[./gif/raster_newcon9_low.png]]

no connectivity:
[[./gif/raster_newcon9_noInternalConn.png]]
[[./gif/traces_newcon9_noInternalConn.png]]

bill:
what not have all the netstim rates be the same? -- we have one netstim for each cell right?  -- what's the use of having a netstim at 0Hz?
eg how about making them all 80-100?

changing range of freq of netstim:
[[./gif/traces_newcon9_noConn_80-100.png]]
[[./gif/raster_newcon9_noConn_80_100.png]]

reduced weights from netstims:
[[./gif/traces_newcon9_noconn_low.png]]
[[./gif/raster_newcon9_noconn_low.png]]
cfg.weightLong = 0.28   # to PT5 
cfg.weightLongInh = 0.075 # to PV5
cfg.noiseLong = 0.3

included connectivity:
cfg.EEgain = 0.005   # basal dend 
cfg.IEgain = 0.004   #PV to exc 
cfg.IIgainPV1 = 0.002  # PV to PV
cfg.EIgain1 = 0.5 # exc to PV
[[./gif/traces_newcon9_newnetsim.png]]
[[./gif/raster_newcon9_newnetstim.png]]

bill:
ok but also take a look at the convergence values
so let's check the values -- can check the values for the cells that are firing a lot compared to cells that are not firing a lot

accesing to connectivity of one cell:
sim.net.allCells[10].conns
[{loc: 0.5, hNetcon: None, weight: 0.005, preGid: 0, label: 'PT5->PT5', delay: 3.6064185807778366, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 36, label: 'PT5->PT5', delay: 3.2526212479866743, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 37, label: 'PT5->PT5', delay: 3.5697925271124502, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 39, label: 'PT5->PT5', delay: 4.0345947192501121, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 8, label: 'PT5->PT5', delay: 3.7351531858642528, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 9, label: 'PT5->PT5', delay: 3.829656245170574, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 11, label: 'PT5->PT5', delay: 2.6102531796454413, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 13, label: 'PT5->PT5', delay: 2.3809665764195751, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 14, label: 'PT5->PT5', delay: 3.8057576677155547, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 18, label: 'PT5->PT5', delay: 2.5637655739106116, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 19, label: 'PT5->PT5', delay: 3.6426805139525138, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 31, label: 'PT5->PT5', delay: 3.8314983188185421, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 56, label: 'PV5->PT5', delay: 3.9168691624185117, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 57, label: 'PV5->PT5', delay: 4.3115019518701843, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 45, label: 'PV5->PT5', delay: 4.3513110013880079, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 47, label: 'PV5->PT5', delay: 3.0370315513890369, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.28, preGid: 74, label: 'dTC->PT5', delay: 1, sec: 'Adend1', synMech: 'AMPA'}]

sim.net.allCells[24].conns
[{loc: 0.5, hNetcon: None, weight: 0.005, preGid: 2, label: 'PT5->PT5', delay: 4.6836000831170708, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 38, label: 'PT5->PT5', delay: 4.4406083045901585, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 8, label: 'PT5->PT5', delay: 3.1289108838493664, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 9, label: 'PT5->PT5', delay: 4.0688585763495393, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 34, label: 'PT5->PT5', delay: 4.2041511786619594, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 18, label: 'PT5->PT5', delay: 3.8140932317689442, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 19, label: 'PT5->PT5', delay: 2.5455464896190652, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 20, label: 'PT5->PT5', delay: 3.9554710225987302, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 23, label: 'PT5->PT5', delay: 4.0590856452659558, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 25, label: 'PT5->PT5', delay: 4.565525651941166, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 27, label: 'PT5->PT5', delay: 3.2408561606808801, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.005, preGid: 28, label: 'PT5->PT5', delay: 3.2352584635663324, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 58, label: 'PV5->PT5', delay: 3.6357847915591783, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 52, label: 'PV5->PT5', delay: 4.7069153256003382, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 61, label: 'PV5->PT5', delay: 3.7537288999149867, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0016, preGid: 55, label: 'PV5->PT5', delay: 4.8431821583193102, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.28, preGid: 88, label: 'dTC->PT5', delay: 1, sec: 'Adend1', synMech: 'AMPA'}]

netParams.cellParams
ConnParams([('PT5->PT5',
             {'convergence': 12,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PT5'},
              'preConds': {'pop': 'PT5'},
              'sec': 'basaldend',
              'synMech': 'NMDA',
              'weight': 0.005}),
            ('PT5->PV5',
             {'convergence': 2,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PV5'},
              'preConds': {'pop': 'PT5'},
              'sec': 'soma',
              'synMech': 'AMPA',
              'weight': 0.5}),
            ('PV5->PT5',
             {'convergence': 4,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PT5'},
              'preConds': {'pop': 'PV5'},
              'sec': 'soma',
              'synMech': 'GABAB',
              'weight': 0.0016}),
            ('PV5->PV5',
             {'convergence': 12,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PV5'},
              'preConds': {'pop': 'PV5'},
              'sec': 'soma',
              'synMech': 'GABAA',
              'weight': 0.002}),
            ('dTC->PT5',
             {'connList': [[0, 0],
               [1, 1],
               [2, 2],
               [3, 3],
               [4, 4],
               [5, 5],
               [6, 6],
               [7, 7],
               [8, 8],
               [9, 9],
               [10, 10],
               [11, 11],
               [12, 12],
               [13, 13],
               [14, 14],
               [15, 15],
               [16, 16],
               [17, 17],
               [18, 18],
               [19, 19],
               [20, 20],
               [21, 21],
               [22, 22],
               [23, 23],
               [24, 24],
               [25, 25],
               [26, 26],
               [27, 27],
               [28, 28],
               [29, 29],
               [30, 30],
               [31, 31],
               [32, 32],
               [33, 33],
               [34, 34],
               [35, 35],
               [36, 36],
               [37, 37],
               [38, 38],
               [39, 39],
               [40, 40]],
              'delay': 1,
              'loc': 0.5,
              'postConds': {'pop': 'PT5'},
              'preConds': {'pop': 'dTC'},
              'sec': 'Adend1',
              'synMech': 'AMPA',
              'weight': 0.28}),
            ('dTC->PV5',
             {'connList': [[41, 0],
               [42, 1],
               [43, 2],
               [44, 3],
               [45, 4],
               [46, 5],
               [47, 6],
               [48, 7],
               [49, 8],
               [50, 9],
               [51, 10],
               [52, 11],
               [53, 12],
               [54, 13],
               [55, 14],
               [56, 15],
               [57, 16],
               [58, 17],
               [59, 18],
               [60, 19],
               [61, 20],
               [62, 21],
               [63, 22]],
              'delay': 1,
              'loc': 0.5,
              'postConds': {'pop': 'PV5'},
              'preConds': {'pop': 'dTC'},
              'sec': 'dend',
              'synMech': 'AMPA',
              'weight': 0.075})])

Checking: it didn't insert AMPA on E->E, and GABAA from I->E. 

* 09-22-17

fixed insertion of AMPA and GABAA.

used list in the synmech params, and added weight factor params.

ratio needs to be a list of proportion of the 2 mechs. from 0 to 1. e.g. [0.2,0.8]

for prePop,ipre in excL5.iteritems():
      for postPop,ipost in excL5.iteritems():
          ruleLabel = prePop+'->'+postPop
          netParams.connParams[ruleLabel] = {
              'preConds': {'pop': prePop},
              'postConds': {'pop': postPop},
              'synMech': ESynMech, #'NMDA',
              'weight': cfg.EEgain, #[cfg.EEgain*cfg.ratiobdend,cfg.EEgain],
              'synMechWeightFactor': cfg.ratiobdend,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'convergence': 12,
              'loc': 0.5,
              'sec': ['Bdend1','Bdend2']}#'basaldend'}

ConnParams([('PT5->PT5',
             {'convergence': 12,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PT5'},
              'preConds': {'pop': 'PT5'},
              'sec': ['Bdend1', 'Bdend2'],
              'synMech': ['AMPA', 'NMDA'],
              'synMechWeightFactor': [0.25, 0.75],
              'weight': 0.006}),
            ('PT5->PV5',
             {'convergence': 2,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PV5'},
              'preConds': {'pop': 'PT5'},
              'sec': 'soma',
              'synMech': 'AMPA',
              'weight': 0.5}),
            ('PV5->PT5',
             {'convergence': 4,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PT5'},
              'preConds': {'pop': 'PV5'},
              'sec': 'soma',
              'synMech': ['GABAA', 'GABAB'],
              'synMechWeightFactor': [0.7, 0.3],
              'weight': 0.004}),
            ('PV5->PV5',
             {'convergence': 12,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'loc': 0.5,
              'postConds': {'pop': 'PV5'},
              'preConds': {'pop': 'PV5'},
              'sec': 'soma',
              'synMech': 'GABAA',
              'weight': 0.002}),
            ('dTC->PT5',
             {'connList': [[0, 0],
               [1, 1],
               [2, 2],
               [3, 3],
               [4, 4],
               [5, 5],
               [6, 6],
               [7, 7],
               [8, 8],
               [9, 9],
               [10, 10],
               [11, 11],
               [12, 12],
               [13, 13],
               [14, 14],
               [15, 15],
               [16, 16],
               [17, 17],
               [18, 18],
               [19, 19],
               [20, 20],
               [21, 21],
               [22, 22],
               [23, 23],
               [24, 24],
               [25, 25],
               [26, 26],
               [27, 27],
               [28, 28],
               [29, 29],
               [30, 30],
               [31, 31],
               [32, 32],
               [33, 33],
               [34, 34],
               [35, 35],
               [36, 36],
               [37, 37],
               [38, 38],
               [39, 39],
               [40, 40]],
              'delay': 1,
              'loc': 0.5,
              'postConds': {'pop': 'PT5'},
              'preConds': {'pop': 'dTC'},
              'sec': 'Adend1',
              'synMech': ['AMPA', 'NMDA'],
              'synMechWeightFactor': [0.999, 0.001],
              'weight': 0.28}),
            ('dTC->PV5',
             {'connList': [[41, 0],
               [42, 1],
               [43, 2],
               [44, 3],
               [45, 4],
               [46, 5],
               [47, 6],
               [48, 7],
               [49, 8],
               [50, 9],
               [51, 10],
               [52, 11],
               [53, 12],
               [54, 13],
               [55, 14],
               [56, 15],
               [57, 16],
               [58, 17],
               [59, 18],
               [60, 19],
               [61, 20],
               [62, 21],
               [63, 22]],
              'delay': 1,
              'loc': 0.5,
              'postConds': {'pop': 'PV5'},
              'preConds': {'pop': 'dTC'},
              'sec': 'dend',
              'synMech': 'AMPA',
              'weight': 0.075})])

[[./gif/traces_newcon10.png]]
[[./gif/raster_newcon10.png]]
cfg.EEgain = 0.0075   # basal dend 
cfg.IEgain = 0.004  #PV to exc 
cfg.IIgainPV1 = 0.002  # PV to PV
cfg.EIgain1 = 0.5 # exc to PV
cfg.ratioapical = [0.999, 0.001] #AMPA/NMDA ratio for apical dendrite
cfg.ratiobdend = [0.25, 0.75] #AMPA/NMDA
cfg.weightLong = 0.28   # to PT5 
cfg.weightLongInh = 0.075 # to PV5

sim.net.allCells[10].conns
[{loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 0, label: 'PT5->PT5', delay: 3.6064185807778366, 
sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 0, label: 'PT5->PT5', 
delay: 3.6064185807778366, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 36, label: 'PT5->PT5', delay: 3.2526212479866743, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, 
hNetcon: None, weight: 0.005625, preGid: 36, label: 'PT5->PT5', delay: 3.2526212479866743, sec: 'Bdend1', 
synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 37, label: 'PT5->PT5', 
delay: 3.5697925271124502, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, 
preGid: 37, label: 'PT5->PT5', delay: 3.5697925271124502, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, 
hNetcon: None, weight: 0.001875, preGid: 39, label: 'PT5->PT5', delay: 4.0345947192501121, sec: 'Bdend1', 
synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 39, label: 'PT5->PT5', 
delay: 4.0345947192501121, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 8, label: 'PT5->PT5', delay: 3.7351531858642528, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: 
None, weight: 0.005625, preGid: 8, label: 'PT5->PT5', delay: 3.7351531858642528, sec: 'Bdend1', synMech: 
'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 9, label: 'PT5->PT5', delay: 3.829656245170574, 
sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 9, label: 'PT5->PT5', 
delay: 3.829656245170574, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 11, label: 'PT5->PT5', delay: 2.6102531796454413, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, 
hNetcon: None, weight: 0.005625, preGid: 11, label: 'PT5->PT5', delay: 2.6102531796454413, sec: 'Bdend1', 
synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 13, label: 'PT5->PT5', 
delay: 2.3809665764195751, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, 
preGid: 13, label: 'PT5->PT5', delay: 2.3809665764195751, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, 
hNetcon: None, weight: 0.001875, preGid: 14, label: 'PT5->PT5', delay: 3.8057576677155547, sec: 'Bdend1', 
synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 14, label: 'PT5->PT5', 
delay: 3.8057576677155547, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 18, label: 'PT5->PT5', delay: 2.5637655739106116, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: 
None, weight: 0.005625, preGid: 18, label: 'PT5->PT5', delay: 2.5637655739106116, sec: 'Bdend1', synMech: 'NMDA'}, 
{loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 19, label: 'PT5->PT5', delay: 3.6426805139525138, sec: 
'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 19, label: 'PT5->PT5', 
delay: 3.6426805139525138, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 31, label: 'PT5->PT5', delay: 3.8314983188185421, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, 
hNetcon: None, weight: 0.005625, preGid: 31, label: 'PT5->PT5', delay: 3.8314983188185421, sec: 'Bdend1', 
synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.0028, preGid: 56, label: 'PV5->PT5', 
delay: 3.9168691624185117, sec: 'soma', synMech: 'GABAA'}, {loc: 0.5, hNetcon: None, weight: 0.0012, 
preGid: 56, label: 'PV5->PT5', delay: 3.9168691624185117, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, 
hNetcon: None, weight: 0.0028, preGid: 57, label: 'PV5->PT5', delay: 4.3115019518701843, sec: 'soma', 
synMech: 'GABAA'}, {loc: 0.5, hNetcon: None, weight: 0.0012, preGid: 57, label: 'PV5->PT5', 
delay: 4.3115019518701843, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0028, 
preGid: 45, label: 'PV5->PT5', delay: 4.3513110013880079, sec: 'soma', synMech: 'GABAA'}, {loc: 0.5, 
hNetcon: None, weight: 0.0012, preGid: 45, label: 'PV5->PT5', delay: 4.3513110013880079, sec: 'soma', 
synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0028, preGid: 47, label: 'PV5->PT5', 
delay: 3.0370315513890369, sec: 'soma', synMech: 'GABAA'}, {loc: 0.5, hNetcon: None, weight: 0.0012, 
preGid: 47, label: 'PV5->PT5', delay: 3.0370315513890369, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, 
hNetcon: None, weight: 0.27972, preGid: 74, label: 'dTC->PT5', delay: 1, sec: 'Adend1', 
synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.00028000000000000003, preGid: 74, label: 
'dTC->PT5', delay: 1, sec: 'Adend1', synMech: 'NMDA'}]

sim.net.allCells[24].conns
[{loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 2, label: 'PT5->PT5', delay: 4.6836000831170708, 
sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 2, label: 'PT5->PT5', 
delay: 4.6836000831170708, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 38, label: 'PT5->PT5', delay: 4.4406083045901585, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, 
hNetcon: None, weight: 0.005625, preGid: 38, label: 'PT5->PT5', delay: 4.4406083045901585, sec: 'Bdend1', 
synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 8, label: 'PT5->PT5', 
delay: 3.1289108838493664, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, 
preGid: 8, label: 'PT5->PT5', delay: 3.1289108838493664, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, 
hNetcon: None, weight: 0.001875, preGid: 9, label: 'PT5->PT5', delay: 4.0688585763495393, sec: 'Bdend1', 
synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 9, label: 'PT5->PT5', 
delay: 4.0688585763495393, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 34, label: 'PT5->PT5', delay: 4.2041511786619594, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: 
None, weight: 0.005625, preGid: 34, label: 'PT5->PT5', delay: 4.2041511786619594, sec: 'Bdend1', synMech: 
'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 18, label: 'PT5->PT5', delay: 3.8140932317689442, 
sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 18, label: 'PT5->PT5', 
delay: 3.8140932317689442, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 19, label: 'PT5->PT5', delay: 2.5455464896190652, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, 
hNetcon: None, weight: 0.005625, preGid: 19, label: 'PT5->PT5', delay: 2.5455464896190652, sec: 'Bdend1', 
synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 20, label: 'PT5->PT5', 
delay: 3.9554710225987302, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, 
preGid: 20, label: 'PT5->PT5', delay: 3.9554710225987302, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, 
hNetcon: None, weight: 0.001875, preGid: 23, label: 'PT5->PT5', delay: 4.0590856452659558, sec: 'Bdend1', 
synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 23, label: 'PT5->PT5', 
delay: 4.0590856452659558, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 25, label: 'PT5->PT5', delay: 4.565525651941166, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: 
None, weight: 0.005625, preGid: 25, label: 'PT5->PT5', delay: 4.565525651941166, sec: 'Bdend1', synMech: 'NMDA'}, 
{loc: 0.5, hNetcon: None, weight: 0.001875, preGid: 27, label: 'PT5->PT5', delay: 3.2408561606808801, sec: 
'Bdend1', synMech: 'AMPA'}, {loc: 0.5, hNetcon: None, weight: 0.005625, preGid: 27, label: 'PT5->PT5', 
delay: 3.2408561606808801, sec: 'Bdend1', synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.001875, 
preGid: 28, label: 'PT5->PT5', delay: 3.2352584635663324, sec: 'Bdend1', synMech: 'AMPA'}, {loc: 0.5, 
hNetcon: None, weight: 0.005625, preGid: 28, label: 'PT5->PT5', delay: 3.2352584635663324, sec: 'Bdend1', 
synMech: 'NMDA'}, {loc: 0.5, hNetcon: None, weight: 0.0028, preGid: 58, label: 'PV5->PT5', 
delay: 3.6357847915591783, sec: 'soma', synMech: 'GABAA'}, {loc: 0.5, hNetcon: None, weight: 0.0012, 
preGid: 58, label: 'PV5->PT5', delay: 3.6357847915591783, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, 
hNetcon: None, weight: 0.0028, preGid: 52, label: 'PV5->PT5', delay: 4.7069153256003382, sec: 'soma', 
synMech: 'GABAA'}, {loc: 0.5, hNetcon: None, weight: 0.0012, preGid: 52, label: 'PV5->PT5', 
delay: 4.7069153256003382, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0028, 
preGid: 61, label: 'PV5->PT5', delay: 3.7537288999149867, sec: 'soma', synMech: 'GABAA'}, {loc: 0.5, 
hNetcon: None, weight: 0.0012, preGid: 61, label: 'PV5->PT5', delay: 3.7537288999149867, sec: 'soma', 
synMech: 'GABAB'}, {loc: 0.5, hNetcon: None, weight: 0.0028, preGid: 55, label: 'PV5->PT5', 
delay: 4.8431821583193102, sec: 'soma', synMech: 'GABAA'}, {loc: 0.5, hNetcon: None, weight: 0.0012, 
preGid: 55, label: 'PV5->PT5', delay: 4.8431821583193102, sec: 'soma', synMech: 'GABAB'}, {loc: 0.5, 
hNetcon: None, weight: 0.27972, preGid: 88, label: 'dTC->PT5', delay: 1, sec: 'Adend1', synMech: 'AMPA'}, 
{loc: 0.5, hNetcon: None, weight: 0.00028000000000000003, preGid: 88, label: 'dTC->PT5', delay: 1, 
sec: 'Adend1', synMech: 'NMDA'}]


changing delay to 1ms in all the connectivity doesn't alter why cell 24 is so active.
all cells have similar intrinsic properties. 
gridSpacing does not alter the output.

bill suggested to check network trough the netconlist method:

on init.py:
sim.create(simConfig = cfg, netParams= netParams)

then:
python -i init.py
from neuron import h

then:
ncl=h.List("NetCon")

ncl is the netconlist and it can be explore according to this:
http://neuron.yale.edu/neuron/static/docs/neuronpython/modelspec/programmatic/network/netcon.html

example: x.weight[0] for x in ncl if ncl.postcell == 24

other way to explore a netconlist:
cvode = h.CVode()
ncl2=cvode.netconlist('','','') #(precell, postcell, target)

http://neuron.yale.edu/neuron/static/docs/neuronpython/simctrl/cvode.html#CVode.netconlist

then bill:
did you try just using a diff wiring/drive randomization -- maybe this is just a random result and you wn't see it with any other network you work with

I haven't tried working with seeds. 

on netPyne:

cfg.seeds = {'conn': 4321, 'stim': 1234, 'loc': 4321} 

ideal: 25 seeds. 5 conn x 5 stim.

* 09-25-17
goal: explore seeds.

seed: 
cfg.seeds = {'conn':4123, 'stim': 1234, 'loc': 3214}
cfg.EEgain = 0.007  # basal dend 
cfg.IEgain = 0.0039  #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.3 # exc to PV
cfg.ratioapical = [0.999, 0.001] #AMPA/NMDA ratio for apical dendrite
cfg.ratiobdend = [0.25, 0.75] #AMPA/NMDA
cfg.weightLong = 0.28   # to PT5 
cfg.weightLongInh = 0.075 # to PV5
cfg.noiseLong = 0.3  # firing rate random noise
cfg.ratesLong = {'dTC':[80, 100]}
[[./gif/traces_newcon11.png]]
[[./gif/raster_newcon11.png]]
[[./gif/traces_newcon11_bdend.png]]

bill:
so no evidence of plateuas
1:13
could try that too but don't expect to see much without setting it up to generate
1:13
perhaps should put another set of netstims into 1 of the bas dends in order to get those plats -- can get params from joe
sergio
1:15 PM
I tried before to insert the netstim on the basal dend as a long connectivity, but srdjan suggested to use the long connectivity inputs into the apical dendrites
joe
1:16 PM
I think we just want to generate some plateaus using NMDAeee.
1:17
Where the connectivity to activate plateaus comes from is secondary at this point…
sergio
1:18 PM
ok
1:18
let me start to work with NMDAeee
joe
1:18 PM
Let me know if you need anything.
sergio
1:19 PM
sure

plan: start using NMDAeee, change netstim to bdend.

joe parameters: Cdur = 1.0 and Beta = 0.0015 (I made these the default values in NMDAeee.mod).  The ratioAMPANMDA = 0.2

connected netstims to basal dend2 and E->E to apical dend3.

cfg.EEgain = 0.002   # basal dend 
cfg.IEgain = 0.0035   #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2 # exc to PV
cfg.ratioapical = [0.8, 0.2] #AMPA/NMDA ratio for apical dendrite * 4.0
cfg.ratiobdend = [0.166, 0.834] # 0.2 * AMPA/NMDA 
cfg.Cdur = 1.0
cfg.Beta = 0.0015 
cfg.weightLong = 0.07    # to PT5 
cfg.weightLongInh = 0.075 # to PV5
[[./gif/traces_newcon12.png]]
[[./gif/traces_newcon12_bdend.png]]
[[./gif/raster_newcon12.png]]

disconnected cells:
[[./gif/tracesnewcon12_nocon.png]]
[[./gif/raster_newcon12_nocon.png]]

disconnected cells, AMPA/NMDA ratio = 4.0:
[[./gif/traces_newcon12_nocon_AMPA.png]]
[[./gif/raster_newcon12_nocon_AMPA.png]] 
no activity.

disconnected cells, AMPA/NMDA ratio = 4.0, increased weight to 0.1:
[[./gif/traces_newcon12_nocon_highAMPA.png]]
[[./gif/raster_newcon12_nocon_highAMPA.png]]

Connected cells, AMPA/NMDA ratio = 4.0, increased weight to 0.1:
[[./gif/traces_newcon12_con_highAMPA.png]]
[[./gif/raster_newcon12_con_highAMPA.png]]

* 09-26-17

plot connectivity of last network:
[[./gif/path3688.png]]

matrix connectivity:
[[./gif/plotConn_newcon12.png]]

2D plot connectivity
[[./gif/plot2Dnet_newcon12.png]]

** meeting:
incresase the noise
ratio AMPA/NMDA -> 10/1
netstim apical dend, but 10 percent to basal dend  
E->E: to apical dend

disconnected cells:
cfg.weightLong =  0.14   # to PT5 
cfg.weightLongInh = 0.075 # to PV5
cfg.noiseLong = 0.8 
[[./gif/traces_newcon13.png]]
[[./gif/raster_newcon13.png]]

connected cells:
[[./gif/traces_newcon13_con.png]]
[[./gif/raster_newcon13_con.png]]
[[./gif/traces_newcon13_con_bdend.png]]
cfg.EEgain = 0.012  # basal dend 
cfg.IEgain = 0.0032  #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2 # exc to PV
cfg.ratioapical = [0.8, 0.2] #AMPA/NMDA ratio for apical dendrite * 4.0
cfg.ratiobdend = [0.666,0.334] # 2.0
cfg.noiseLong = 0.8 
cfg.weightLong =  0.17   # to PT5 
cfg.weightLongInh = 0.075

with aditional netstims to basal dends: 
[[./gif/tr_trace_newcon_addnetstim_Bdend1.png]]
[[./gif/tr_trace_newcon13_addnetsim_soma.png]]
[[./gif/raster_newcon13_addnetstim.png]]
[[./gif/tr_trace_newcon13_addnetstim_Bdend2.png]]
cellList = [2, 5, 11, 24, 28, 40] #list of PT5 with netstim to basal dend
cfg.weightLongBdend = 0.012 

ratio: 0.72
[[./gif/traces_newcon13_ratio072.png]]
[[./gif/raster_newcon13_ratio072.png]]

ratio 10.0
[[./gif/traces_newcon13_ratio10.png]]
[[./gif/raster_newcon13_ratio10.png]]

* 09-28-17

read bono 2017.

/u/sergioangulo/papers/bono2017.pdf

shared and discussed with group.

bill, to explore the network, should I create a netconlist and work in an interactive python session?
billl
5:32 PM
that might work well to start with
5:32
till you have some idea of what you want to explore in depth
5:32
for starters i think just need to have 1 cell that you are going to bring up to a plateau
5:32
using params from joe
5:33
can start with netstim-netcon onto all the cells but just manipulate one and then several

plan: start netstim-netcon

* 09-29-17

goals: explore network

cells tags and gids:

for cell in sim.net.cells: cell.tags
for cell in sim.net.cells: cell.gid

sim.net.cells # all cell objects

idea is to get netcon. from http://www.neuron.yale.edu/neuron/static/py_doc/modelspec/programmatic/network/netcon.html

syntax:


len(h.List("NetCon"))
1514

len(h.List("NetStim"))
0

still don't know  how to access to the netcons 

* 10-02-17

goal: access to netcons and netstims

salva:

sim.net.cells[0].conns[0]['hNetCon']


sim.net.cells[0].stims[0]['hNetStim']

but dicts are empty:

>>> sim.net.cells[0].conns[0]['hNetCon']
NetCon[0]

>>> sim.net.cells[0].stims
[]

accesing individual cells:

>>> sim.net.allCells[10]['hNetCon'] 
{}

>>> sim.net.allCells[10]['hNetStim']
{}

>>> sim.net.cells[0].conns[0]
{delay: 3.2449364099327829, loc: 0.5, hNetCon: {}, sec: 'Bdend1', synMech: 'AMPA', weight: 0.007992, hNetcon: NetCon[0], preGid: 35, label: 'PT5->PT5'}


solution: 
sim.net.cells[0]['hNetcon'] # with lowercase "c" for netcon. 
 
to access to a parameter, just do :
sim.net.cells[0]['hNetcon'].delay

to iterate over all the connectivity of the cell:
for i in range(len(sim.net.cells[0].conns)): sim.net.cells[0].conns[i]['hNetcon']
 
or

for i in range(len(sim.net.cells[0].conns)): sim.net.cells[0].conns[i]['hNetcon'].delay

now compare 2 cells:

cell 33 vs. cell 24

cell33 = [[0 for i in range(5)] for j in range(34)]

for i in range(len(sim.net.allCells[33].conns)): cell33[i][0]=sim.net.allCells[33].conns[i].preGid
for i in range(len(sim.net.allCells[33].conns)): cell33[i][1] = sim.net.allCells[33].conns[i].label
for i in range(len(sim.net.allCells[33].conns)): cell33[i][2] = sim.net.allCells[33].conns[i].synMech
for i in range(len(sim.net.allCells[33].conns)): cell33[i][3] = sim.net.allCells[33].conns[i].sec
for i in range(len(sim.net.allCells[33].conns)): cell33[i][4] = sim.net.allCells[33].conns[i].weight

>>> cell33
[[1, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [1, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [36, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [36, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [37, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [37, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [39, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [39, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [14, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [14, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [20, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [20, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [21, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [21, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [26, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [26, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [27, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [27, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [28, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [28, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [50, 'PV5->PT5', 'GABAA', 'soma', 0.00224], [50, 'PV5->PT5', 'GABAB', 'soma', 0.00096], [60, 'PV5->PT5', 'GABAA', 'soma', 0.00224], [60, 'PV5->PT5', 'GABAB', 'soma', 0.00096], [54, 'PV5->PT5', 'GABAA', 'soma', 0.00224], [54, 'PV5->PT5', 'GABAB', 'soma', 0.00096], [97, 'dTC->PT5', 'AMPA', 'Adend1', 0.136], [97, 'dTC->PT5', 'NMDA', 'Adend1', 0.034], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]

>>> cell24 = [[0 for i in range(5)] for j in range(34)]
for i in range(len(sim.net.allCells[24].conns)): cell24[i][0] = sim.net.allCells[24].conns[i].preGid
for i in range(len(sim.net.allCells[24].conns)): cell24[i][1] = sim.net.allCells[24].conns[i].label
for i in range(len(sim.net.allCells[24].conns)): cell24[i][2] = sim.net.allCells[24].conns[i].synMech
for i in range(len(sim.net.allCells[24].conns)): cell24[i][3] = sim.net.allCells[24].conns[i].sec
for i in range(len(sim.net.allCells[24].conns)): cell24[i][4] = sim.net.allCells[24].conns[i].weight

>>> cell24
[[33, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [33, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [6, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [6, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [39, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [39, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [9, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [9, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [10, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [10, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [13, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [13, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [19, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [19, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [20, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [20, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [30, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [30, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [31, 'PT5->PT5', 'AMPA', 'Bdend1', 0.007992], [31, 'PT5->PT5', 'NMDA', 'Bdend1', 0.004008], [56, 'PV5->PT5', 'GABAA', 'soma', 0.00224], [56, 'PV5->PT5', 'GABAB', 'soma', 0.00096], [58, 'PV5->PT5', 'GABAA', 'soma', 0.00224], [58, 'PV5->PT5', 'GABAB', 'soma', 0.00096], [47, 'PV5->PT5', 'GABAA', 'soma', 0.00224], [47, 'PV5->PT5', 'GABAB', 'soma', 0.00096], [88, 'dTC->PT5', 'AMPA', 'Adend1', 0.136], [88, 'dTC->PT5', 'NMDA', 'Adend1', 0.034], [131, 'dTC->PT5_2', 'AMPA', 'Bdend2', 0.07992], [131, 'dTC->PT5_2', 'NMDA', 'Bdend2', 0.04008], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]


exc33 = 0
for i in range(len(sim.net.allCells[24].conns)):
... 	if sim.net.allCells[24].conns[i].synMech == "AMPA": exc33 = exc33+1

exc24 =0
for i in range(len(sim.net.allCells[24].conns)):
... 	if sim.net.allCells[24].conns[i].synMech == "AMPA": exc24 = exc24+1

inh33 = 0
for i in range(len(sim.net.allCells[33].conns)):
... 	if sim.net.allCells[33].conns[i].synMech == "GABAA": inh33 =inh33+1

inh24=0
>>> for i in range(len(sim.net.allCells[24].conns)):
... 	if sim.net.allCells[24].conns[i].synMech == "GABAA": inh24 = inh24+1

df = pd.DataFrame(cell33)
>>> df.to_csv("cell33.csv")

df2 = pd.DataFrame(cell24)
>>> df2.to_csv("cell24.csv")

The 2 cells have almost the same inputs. but cell 24 have an extra drive from netstim.

* 10-02-17

compare currents  NMDA btw cells:
[[./gif/traces_newcon13_iNMDA_Bdend1.png]]

compare currents GABAA btw cells:
[[./gif/traces_newcon13_GABAA_soma.png]]

voltage soma:
[[./gif/traces_newcon13_v_soma.png]]

voltage bdend1:
[[./gif/traces_newcon13_v_bdend1.png]]

currents GABAAslow:
[[./gif/traces_newcon13_GABAAslow_soma.png]]


** meeting:

reduced input to cells to subthreshold, and then add stim to produce plateau.

only netstim to apical dend
[[./gif/tr_trace_V_somaaces_newcon14.png]]
[[./gif/raster_newcon14.png]]
cfg.weightLong =  0.15

bill: dec 
let's bring it way down

reduced weight to netstim to apical dend
[[./gif/tr_trace_V_somaaces_newcon15.png]]
[[./gif/raster_newcon15.png]]
cfg.EEgain = 0.012  # basal dend 
cfg.IEgain = 0.0032  #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2

bill:
ok let's go from there
looks like 40 pyrs?  let's take 5 of them and put them into plateaut at t=500 ?

added netstin to basaldend 2:
cfg.NetStim2 = {'pop':'PT5','sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':500,'interval': 50,'noise':0.1,'number': 10,'weight':[0.1, 0.1],'delay': 1}
{'cellList': [5, 11, 24, 35, 40]}
cfg.ratiobdend = [0.666,0.334]

* 10-04-17

goal: replicate joe's plateaus and then incorporate them in the network.

first disconect cells and no bkg stim:
[[./gif/tr_trace_V_somaaces_newcon16.png]]
netstim: weight: 0.25
duration similar to joe's and penny's

disconected cells but with bkg stim:
[[./gif/tr_trace_V_somaaces_newcon16_bkg.png]]
netstim: weight: 0.19
cfg.weightLong =  0.07 #bkg activity  

connected cells, no E-E.
[[./gif/tr_trace_V_somaaces_newcon16_bkg_con_inh.png]]
cfg.EEgain = 0  # basal dend 
cfg.IEgain = 0.0032   #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2 # exc to PV
netstim: weight: 0.19
cfg.weightLong =  0.07 #bkg activity
inh drive, decrease plateau duration

connected cells, increased netstim weight
[[./gif/tr_trace_V_somaaces_newcon16_bkg_con_inh2.png]]
netstim: weight: 0.25
incresed weight produced the plateau

IE balanced, decreased Inh anf Exc.
[[./gif/tr_trace_V_somaaces_newcon16_bkg_con_inh3.png]]
cfg.Glutw = 0.21  
cfg.EEgain = 0  # basal dend 
cfg.IEgain = 0.001   #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2

problem:
induced the plateau with E-E but can't spread to other cells
[[./gif/tr_trace_V_somaaces_newcon16_bkg_exc_inh.png]]
[[./gif/raster_newcon16_con_ecx_inh.png]]
cfg.EEgain = 0.041 # basal dend 
cfg.IEgain = 0.0044  #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2 # exc to PV
cfg.Glutw = 0.3 

if E->E is increased, network is hypersynchronized and induced hyperpolarization block:
[[./gif/raster_newcon16_db.png]]
[[./gif/tr_trace_V_somaaces_newcon16_db.png]]
cfg.EEgain = 0.0415  # basal dend 
cfg.IEgain = 0.0044  #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2

next: what could happen if more cells are stimulated?

* 10-05-17

shared figs at slack

bill:

why do they start at such diff times?

so let's set up to get the plats -- guess need to look at that basaldend too ?

shared v_bdend2:

[[./gif/tr_trace_Bdend2aces_newcon16.png]]

bill: 

looks right

[11:00] 
so they are plats -- good ; but still why diff times?


[11:01] 
you say 500 ms but 2 of htese are starting up at >600 ??

ut why starting so late? -- so 1 cell goes up and fires and then turns off all the others?? -- it's quite interesting actually


[11:14] 
don't mess with the params till you understsand what you have so far


[11:14] 
what's going on here?

sergio
11:16 AM
let me check the preGids for each cells
11:16
*cell
billl
11:17 AM
so you need a hypo
11:17
what is your hypo?
sergio
11:18 AM
sorry, what is a hypo?
billl
11:19 AM
hypothesis
11:19
or hypodermic needle
11:19
but in this case the former
sergio
11:20 AM
ohh ok
11:22
my hypo is that the first stim induced a NMDA and calcium influx (I’m bias here) that remains for a long time. The second stim from others (need to check where the inputs are coming from) will induce the plateau
billl
11:23 AM
1st stim induced a plateau in 1 cell??
11:24
and that one cell was strong enough to trigger plateau in others?
11:24
and the others all followed the 1at the same time?
sergio
11:25 AM
that’s one possibility but I need to prove it
11:26
cell #40 is the earliest to fire
billl
11:31 AM
yeah so check that that's true
sergio
11:40 AM
ok

check NMDA currents at Bdend1 and Bdend2:
[[./gif/tr_trace_i_NMDA_Bdend2aces.png]]
[[./gif/tr_trace_i_NMDA_Bdend1aces.png]]

cell5 = [[0 for i in range(5)] for j in range(34)]
for i in range(len(sim.net.allCells[5].conns)): cell5[i][0] = sim.net.allCells[5].conns[i].preGid
for i in range(len(sim.net.allCells[5].conns)): cell5[i][1]= sim.net.allCells[5].conns[i].label
for i in range(len(sim.net.allCells[5].conns)): cell5[i][2]= sim.net.allCells[5].conns[i].synMech

realized that cell 24 and 35 have depolarization block:
[[./gif/tr_trace_V_somaaces_newcon16_5cells.png]]

also number of E-E is different for every cell:
cell 5 = 9
cell 24 = 10
cell 40 = 11
cell 11 = 9
cell 35 = 10
match with cells with db and longest plateau

Salva fixed the problem for the convergence. Number of pre Cells assigned did not correspond to the one ran by the sims.

comparing netstims:

>>> sim.net.allCells[5].stims
[{hRandom: None, noise: 0.1, start: 500, hNetStim: None, number: 1, source: 'NetStim2', rate: 1.0, seed: 1234, type: 'NetStim'}, {hRandom: None, noise: 0.1, start: 500, hNetStim: None, number: 1, source: 'NetStim2', rate: 1.0, seed: 1234, type: 'NetStim'}]

>>> sim.net.allCells[40].stims
[{hRandom: None, noise: 0.1, start: 500, hNetStim: None, number: 1, source: 'NetStim2', rate: 1.0, seed: 1234, type: 'NetStim'}, {hRandom: None, noise: 0.1, start: 500, hNetStim: None, number: 1, source: 'NetStim2', rate: 1.0, seed: 1234, type: 'NetStim'}]

different starting times was problem at netstim param:
cfg.NetStim2 = {'pop':'PT5','sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':500,'interval': 1.0,'noise':1.0,'number': 1,'weight':[0.1, 0.1],'delay': 1.0}
[[./gif/tr_trace_V_somaaces_newcon16_disconnected.png]]

interval does not behave as a inter-stimulus interval, example interval 1000ms, noise 1.0:
[[./gif/tr_trace_V_somaaces_newcon17_1000int.png ]]

example as previous sim, int 1000 ms, noise 0.1:
[[./gif/tr_trace_V_somaaces_newcon17_1000int_noise01.png]]

example int 1 ms, noise 0.1:
[[./gif/tr_trace_V_somaaces_newcon17_1int_noise 0.1.png]]

joe uses noise 0.0.
[[./gif/tr_trace_V_somaaces_newcon17_1int_noise00.png]]
weight: 0.22

* 10-06-17

goal: sim plateaus with fix convergence and stim.

sim with bkg stim, weight 0.05. stim weight: 0.2, disconnected cells.
[[./gif/tr_trace_V_somaaces_newcon17_bkg.png]]

* 10-09-17

sim bkg stim, and connected cells:

[[./gif/tr_trace_V_somaaces_newcon17_con.png]]
[[./gif/raster_newcon17_con.png]]

Bill wanted to know if there was a bug on netpyne or neuron.

ran simulation to test is interval was the problem. 
Set noise to 0, and interval to 1000
[[./gif/tr_trace_V_somaaces_newcon17_1000int_noise00.png]]
setting noise to 0, makes start always to be at the params setting (500 ms)

ran sim with noise set to 1.0:
[[./gif/tr_trace_V_somaaces_newcon17_1000int_noise 10.png]]
reproduce starting times at different times but longer.

salvadord [1:09 PM] 
if interval = 1 sec, then noise=1.0 means the 1st spike can start in any interval from start:start+1sec — I think a desirable feature, otherwise noise has no effect


[1:09] 
if interval=1msec, then noise has little room affect spk timing


sergio [1:16 PM] 
Salva, in the case of 1000 ms, noise -1.0, there are some cells with a start time longer than start+interval (500+1000), is that ok?


salvadord [1:18 PM] 
not sure, would need to check algorithm


salvadord [1:26 PM] 
also note one thing is the netstim spks and a different thing is when the pt cell starts firing — netstim spk may have arrived before but not triggered cell firing


sergio [1:31 PM] 
ok, thanks salva


Bill:
we want no noise and 1e3 interval -- that's what we talked about sergio


[3:30] 
please explain the logic to sergio joe

added stim to different number of cells:

cfg.sampleList = 5

if cfg.sampleList == 5:  #
	cfg.stimList = [5, 11, 24, 35, 40]
if cfg.sampleList == 10:  #
	cfg.stimList = [5, 11, 24, 35, 40, 1, 7, 14, 28, 32]
if cfg.sampleList == 15:  # 
	cfg.stimList = [5, 11, 24, 35, 40, 1, 7, 14, 28, 32, 9, 18, 22, 30, 38]
if cfg.sampleList == 20:  # 
	cfg.stimList = [5, 11, 24, 35, 40, 1, 7, 14, 28, 32, 9, 18, 22, 30, 38, 3, 12, 16, 20, 25]
if cfg.sampleList == 25:  # 
	cfg.stimList = [5, 11, 24, 35, 40, 1, 7, 14, 28, 32, 9, 18, 22, 30, 38, 3, 12, 16, 20, 25, 6, 10, 19, 27, 36]
if cfg.sampleList == 30:  # 
	cfg.stimList = [5, 11, 24, 35, 40, 1, 7, 14, 28, 32, 9, 18, 22, 30, 38, 3, 12, 16, 20, 25, 6, 10, 19, 27, 36, 2, 15, 21, 33, 37]
if cfg.sampleList == 41:  # 
	cfg.stimList = [5, 11, 24, 35, 40, 1, 7, 14, 28, 32, 9, 18, 22, 30, 38, 3, 12, 16, 20, 25, 6, 10, 19, 27, 36, 2, 15, 21, 33, 37, 0, 4, 8, 13, 17, 23, 26, 29, 31, 34, 39]

on batch.py:
 
def ensemble():
	params = specs.ODict()

	params['Glutw'] = [0.05, 0.1, 0.15, 0.2]
	params['sampleList'] = [5, 10, 15, 20, 30, 41]

	b = Batch(params=params, netParamsFile='netParams.py', cfgFile='cfg.py')

	grouped = []  # list of params that are grouped (vary together)
	for p in b.params:
		if p['label'] in grouped: p['group'] = True
	return b


* 10-10-17	

I-E balance:

cfg.EEgain = 0.0107   # basal dend 
cfg.IEgain = 0.00072   #PV to exc 
cfg.IIgainPV1 = 0.003  # PV to PV
cfg.EIgain1 = 0.2 # exc to PV

stim to all the cells:
[[./gif/traces_newcon18_allstim.png]]
[[./gif/raster_newcon18_allstim.png]]
cfg.Glutw = 0.1
A stim with low weight to start the plateau, induced long plateaus if all the cells are stimulated.  

stim to 5 cells:
[[./gif/traces_newcon18_5stim.png]]
[[./gif/raster_newcon18_5stim.png]]
cfg.Glutw = 0.2
needs higher weight to induce plateaus. No synchronization with other cells.

stim to 10 cells:
[[./gif/traces_newcon18_stim10.png]] 
[[./gif/raster_newcon18_stim10.png]]
cfg.Glutw = 0.18
longer plateaus, less stim weight.

stim to 15 cells:
[[./gif/traces_newcon18_stim15.png]]
[[./gif/raster_newcon18_stim15.png]]
cfg.Glutw = 0.15

stim to 20 cells:
[[./gif/traces_newcon18_stim20.png]]
[[./gif/raster_newcon18_stim20.png]]
cfg.Glutw = 0.14

stim to 30 cells:
[[./gif/traces_newcon18_stim30.png]]
[[./gif/raster_newcon18_stim30.png]]
cfg.Glutw = 0.1

** meeting

*** need to define plateaus
*** check volt at bdend; current NMDA at bdend; signature spiking
*** check if I can sim plateau with no spikes
*** suggested to work without connectivty and bkg stim. Only bdend stim to induce plateaus.
*** try multiple cells, and in every cell different stim parameter. Look for plateau with no spikes.

created a different dir for the simulations with single cell:
/u/sergioangulo/projects/sergeee/eee/sim/singlecell/

Just 5 cells, no bkg, no connectivity.

netstim for every cell:

cfg.glutw = [0.15, 0.175, 0.2, 0.225, 0.25]  # total weight for netstim, ratio depends of cfg.ratio.bdend 

 			   ## pop, cellList, sec, loc, synMech, start, interval, noise, number, weight, delay
cfg.NetStim0 = {'pop':'PT5','cellList':[0],'sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[0],'delay': 1.0}
cfg.NetStim1 = {'pop':'PT5','cellList':[1],'sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[1],'delay': 1.0}
cfg.NetStim2 = {'pop':'PT5','cellList':[2],'sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[2],'delay': 1.0}
cfg.NetStim3 = {'pop':'PT5','cellList':[3],'sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[3],'delay': 1.0}
cfg.NetStim4 = {'pop':'PT5','cellList':[4],'sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}

sim for stim:
[[./gif/traces_singlecell2.png]]
[[./gif/raster_singlecell1.png]]
there is no possibility to induce plateaus withput spikes

maybe check
netParams.cellParams.PT5_reduced.secs.soma.mechs.nax.gbar

* 10-11-17

asked bill about the ossibility to reduce the sodium conductanced and he aggree on it.

In [2]: netParams.cellParams.PT5_reduced.secs.soma.mechs.nax.gbar
Out[2]: 0.0345117294903

In [3]: netParams.cellParams.PT5_reduced.secs.Bdend1.mechs.nax
Out[3]: {gbar: 0.00345117294903, sh: 0.0, _repr_mimebundle_: {}}

In [4]: netParams.cellParams.PT5_reduced.secs.Adend1.mechs.nax
Out[4]: {gbar: 0.00345117294903, sh: 0.0, _repr_mimebundle_: {}}

In [5]: netParams.cellParams.PT5_reduced.secs.axon.mechs.nax
Out[5]: {gbar: 0.1725586474515, sh: 0.0, _repr_mimebundle_: {}}

added control for nax:
cfg.naxgbar

it is factor that mulplies for the value of gbar at every section:

netParams.cellParams.PT5_reduced.secs.soma.mechs.nax.gbar = 0.0345117294903*cfg.naxgbar
netParams.cellParams.PT5_reduced.secs.Bdend1.mechs.nax.gbar = 0.00345117294903*cfg.naxgbar
netParams.cellParams.PT5_reduced.secs.Bdend2.mechs.nax.gbar = 0.00345117294903*cfg.naxgbar
netParams.cellParams.PT5_reduced.secs.Adend1.mechs.nax.gbar = 0.00345117294903*cfg.naxgbar
netParams.cellParams.PT5_reduced.secs.Adend2.mechs.nax.gbar = 0.00345117294903*cfg.naxgbar
netParams.cellParams.PT5_reduced.secs.Adend3.mechs.nax.gbar = 0.00345117294903*cfg.naxgbar
netParams.cellParams.PT5_reduced.secs.axon.mechs.nax.gbar = 0.1725586474515*cfg.naxgbar

reduction of sodium conductance by 0.2:
[[./gif/batch_nax_1_traces.png]]
no spikes elicited 
there is a slow repolarization. In Srdjan experiments, the repolarization is faster.
[[./gif/ttx_plateau.png]]

Also, in same paper, there is not plateaus without spikes.
[[./gif/plateau_dur_amp_spikes.png]]

* 10-12-17

bill: suggested that plateaus were not generated, because at sims with no sodium conductance, the memb potential tends to decay.
[[./gif/traces_singlecell_nax02.png]]
[[./gif/traces_singlecell_fullnax.png]]

bill:
so we don't see the plateua without spikes?
sergio 9:09 AM
the other possibility is to hyperpolarize the cells to -80, -90, -100 mV
billl 9:10 AM
why? -- is that what srdjan did?
9:10
@joe -- have you had any success getting your plateaus back?  maybe you 2 should work on that together since using same cells
sergio 9:11 AM
no in the last publications, but let me check again
billl 9:12 AM
you showed a fig with no hyperpol so what we are trying to do (and what joe succeeded in doing previously) is to replicate the basic plateau form
9:13
seems like we've gotten moved over to some other parameter sets when perhaps we should have started with the working sets and then made small changes (or for the network perhaps no changes) from that point
sergio 9:17 AM
I haven’t done sims varying the RMP, but if I’m not wrong Penny has done some sim to bring the cell the RMP up.
9:17
I can work with Joe, or move back to the network
sergio 9:19 AM
billl 9:20 AM
ok why don't you move back to network for no
9:20
the hype result would be good too but main thing is the form of the plateua
sergio 9:21 AM
ok bill
billl 9:22 AM
the ones you show in the fig seem to tail off?  maybe can show a single one -- hard to see
sergio 9:22 AM
ok let me do that
sergio 9:46 AM
sergio 9:47 AM
billl 9:48 AM
yeah that's what i feared -- so it's a gradual slope down -- no plat there
9:49
did we ever have plat?  at one point i swear that joe showed us a plat?  and then thought you took that plat and were working with it?
9:49
maybe try penny's params?  she seems to have nice plats;  would have to readjust for the different Rin of the smaller cell or could readjust the small cell to get a comparable Rin
sergio 9:51 AM
ok Bill, let me work with Joe and Penny to readjust the Rin
billl 9:53 AM
maybe try the params 1st
9:53
and see if need to readjust
9:53
do you have them (penny's) ?   or joe's old ones?
9:53
you have no Rin problem at present
sergio 9:54 AM
no I don’t have penny’s params but let me look for them
billl 9:55 AM
@penny ?
joe 9:56 AM
Sorry guys, busy morning. Renovating my mom’s house, and today we’ve got concrete guys jack-hammering and digging and pouring.
9:57
I won’t be able to work on plateaus for another few hours.
9:57
In the meantime, could you post your parameter values, Sergio?
billl 9:59 AM
at this point we all have the same NMDA, same NMDA/AMPA ratio, what else are we missing that we ahve to agree on?
joe 10:00 AM
Good question, but something seems to have changed.
sergio 10:02 AM

cfg.NetStim4 = {'pop':'PT5','cellList':[4],'sec':'Bdend2','loc':0.5,'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}

sergio 10:02 AM
the AMPA/NMDA ratio is  2.0
billl 10:03 AM
you prob need to give him access to your whole file -- there are a lot more parts that are relevant to getting the plateau
sergio 10:04 AM
my repo is at /u/sergioangulo/projects/eee
10:05
files for sim are located at /u/sergioangulo/projects/eee/sim/singlecell/
penny 10:06 AM
Just finish reading all the message :grin:what params should I give u Sergio?
joe 10:06 AM
Thanks Sergio. I’ll take a look when I have a chance.
billl 10:06 AM
seems like we should all be using mostly same params except that will need adjust either rin or weight for the small vs large cell
10:07
show him params that give a nice plateau; show the plateau too so he can adjust to get similar
10:07
this again would be something that would be quickest if you can do interactively sergio
penny 10:08 AM
Sure. but we are using different cells, would that be the major difference?
10:10
Sergio, here is the link to the latest experiment file: https://bitbucket.org/peng_gao_penny/eee_detailed_model/src/7a66ffaac76f90e5e820824a76a4e0ef00d2b79b/Experiment_10_04.py?at=master&fileviewer=file-view-default
Bitbucket is a Git and Mercurial based source code management and collaboration solution in the cloud. Bitbucket is simple and powerful, enables code collaboration for teams, works with the tools that matter, and is easy to use even for teams new to Git and Mercurial
billl 10:11 AM
diff cells - yes may need to adjust to get same Rin
sergio 10:13 AM
thanks Penny
penny 10:13 AM
I used 8 (AMPA + NMDA - same weights) synapses, distributed evenly from basal location 0.4-0.7. Then I added another 8 NMDAR to represent extrasyanptic NMDAR, also distributed evenly from 0.4-0.7.
billl 10:15 AM
are you using netpyne or straight NEURON?
penny 10:16 AM
I am using it from NEURON.
10:17
For gmax, AMPA gmax = 0.2; NMDA gmax = 0.1, or AMPA gmax = 0.1; NMDA gmax = 0.05, give me better results now
billl 10:53 AM
@sergio - maybe 1st task is to convert penny's code to netpyne so we can be sure we can set the same params; then will be easier to put in joe's sim
10:53
joe's cell
sergio 10:56 AM
ok bill, I’m going to start working on that with penny

moving peeny's model to netpyne.

model cloned at:
/u/sergioangulo/projects/eee_detailed_model

working on dir:
/u/sergioangulo/projects/sergeee/eee/sim/detailedCell/

added cell to eee/sim/cells/CA229.py

copy mod folder from penny.

compiled with compile.py

mod files from penny's original model don't work properly on netpyne:
[[./gif/tr_trace_V_somaaces_detailedcell_mod1.png]]
iclamp: 0.4 nA, 1000ms, start at 40ms

modified cell and using mod files from central repo:
sim/cells/CA229_PFC_sa.py
included: nax, kdr, kap, kapin, cat, cal, cadad, IKsin
[[./gif/tr_trace_V_somaaces_detailedcell_mod2.png]]
no iclamp, fire spontaneusly.

* 10-13-17
goal: tune detailed cell
 
bill comments about plateau sim with no sodium:
yeah that's pretty square -- i'm guessing that these square ones are due to heading up slowly towards another spike but not reaching thresh before the plat ends
also never see squares when have Na block? ; yeah ok so would be cool to get that squaring sometime (and could find out if our explanation is correct) but not a critical feature

penny:
Yes yes, I had that problem before... Salva couldn't figure out why either. It was solved by the switching to the developer version of NetPyne in the end. Mysterious...

checking netpyne on my neurosim.

no% nrniv -python
NEURON -- VERSION 7.5 master (0388d94) 2017-08-09
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016
See http://neuron.yale.edu/neuron/credits

>>> import netpyne; print netpyne.__file__
/usr/site/nrniv/local/python/netpyne/netpyne/__init__.pyc


according to salva, it should be:
/usr/site/nrniv/local/python/netpyne 

to clone git repo from penny:
git clone https://slanguloc@bitbucket.org/peng_gao_penny/eee_detailed_model.git


joe spotted one error on the implementation for the gmax:


10:34
You’re still handling the AMPA/NMDA ratio by putting in different weights, but Bill added gmax to the mod files to handle the ratio.
sergio 10:36 AM
yep, I haven’t done the change. So basically, I need to set the weight  to 1, and then modify the gmax?

From my cfg.py:

cfg.NMDAgmax       = 1.0

cfg.ratioAMPANMDA  = 2.0

From my netParams.py:

h.gmax_NMDA = cfg.NMDAgmax

h.gmax_AMPA = cfg.ratioAMPANMDA * cfg.NMDAgmax

And then, yeah, you put the same weight into AMPA and NMDA.

Modified this in model.

added line to netParams: from neuron import h

conductace for Na reduced by 0.2
[[./gif/traces_singlecell3.png]]

full conductance:
[[./gif/traces_singlecell4.png]]

* 10-16-17

check mod files for penny's model

>>> sim.net.cells[0].secs.soma_2.mechs
{pas: {e: -65.0, g: 4e-05}, na: {gbar: 900.0}, ca: {gbar: 2.0}, it: {vh1: 56.0, v12m: 45.0, ah: 30.0, am: 3.0, v12h: 65.0, vh2: 415.0, vshift: 10.0, gbar: 0.0008, vm2: 125.0, vm1: 50.0}, kap: {gkabar: 0.008}, kv: {gbar: 40.0}, vmax: {}, cad: {}}

cad was empty. Changed by cadad:
>>> sim.net.cells[0].secs.soma_2.mechs
{pas: {e: -65.0, g: 4e-05}, na: {gbar: 900.0}, ca: {gbar: 2.0}, it: {vh1: 56.0, v12m: 45.0, ah: 30.0, am: 3.0, v12h: 65.0, vh2: 415.0, vshift: 10.0, gbar: 0.0008, vm2: 125.0, vm1: 50.0}, kap: {gkabar: 0.008}, kv: {gbar: 40.0}, vmax: {}, cadad: {taur: 5.0, depth: 1.0, kt: 0.0, cainf: 0.00024, kd: 0.0}}
same voltage trace


commented put parameters on it:
>>> sim.net.cells[0].secs.soma_2.mechs
{pas: {e: -65.0, g: 4e-05}, na: {gbar: 900.0}, ca: {gbar: 2.0}, it: {vh1: 46.0, v12m: 50.0, ah: 85.0, am: 3.0, v12h: 78.0, vh2: 405.0, vshift: 0.0, gbar: 0.0008, vm2: 100.0, vm1: 25.0}, kap: {gkabar: 0.008}, kv: {gbar: 40.0}, vmax: {}, cadad: {taur: 5.0, depth: 1.0, kt: 0.0, cainf: 0.00024, kd: 0.0}}
same voltage trace

changed kv by kdr:
>>> sim.net.cells[0].secs.soma_2.mechs                                      
{pas: {e: -65.0, g: 4e-05}, na: {gbar: 900.0}, ca: {gbar: 2.0}, it: {vh1: 46.0, v12m: 50.0, ah: 85.0, am: 3.0, v12h: 78.0, vh2: 405.0, vshift: 0.0, gbar: 0.0008, vm2: 100.0, vm1: 25.0}, kap: {gkabar: 0.008}, kdr: {gbar: 40.0, sh: 0.0, vhalfn: 13.0}, vmax: {}, cadad: {taur: 5.0, depth: 1.0, kt: 0.0, cainf: 0.00024, kd: 0.0}}
different voltage trace, no spike.
[[./gif/tr_trace_V_somaaces_detailedcell_mod3.png]]

changed na by nax:
>>> sim.net.cells[0].secs.soma_2.mechs
{pas: {e: -65.0, g: 4e-05}, ca: {gbar: 2.0}, it: {vh1: 46.0, v12m: 50.0, ah: 85.0, am: 3.0, v12h: 78.0, vh2: 405.0, vshift: 0.0, gbar: 0.0008, vm2: 100.0, vm1: 25.0}, kap: {gkabar: 0.008}, kdr: {gbar: 40.0, sh: 0.0, vhalfn: 13.0}, vmax: {}, nax: {gbar: 900.0, sh: 0.0}, cadad: {taur: 5.0, depth: 1.0, kt: 0.0, cainf: 0.00024, kd: 0.0}}
too many spikes:
[[./gif/tr_trace_V_somaaces_detailedcell_mod4.png]]

back na:
>>> sim.net.cells[0].secs.soma_2.mechs
{pas: {e: -65.0, g: 5e-05}, na: {gbar: 2250.0}, ca: {gbar: 2.0}, it: {vh1: 56.0, v12m: 45.0, ah: 30.0, am: 3.0, v12h: 65.0, vh2: 415.0, vshift: 10.0, gbar: 0.0008, vm2: 125.0, vm1: 50.0}, kap: {gkabar: 0.008}, kdr: {gbar: 0.12, sh: 0.0, vhalfn: 13.0}, vmax: {}, cadad: {taur: 5.0, depth: 1.0, kt: 0.0, cainf: 0.00024, kd: 0.0}}
[[./gif/tr_trace_V_somaaces_detailedcell_mod5.png]]
manual tuning. gbar, and gkdr.

cell with mod files from central repository:
>>> sim.net.cells[0].secs.soma_2.mechs
{pas: {e: -70.0, g: 5e-05}, cat: {gcatbar: 3.5326682685760005e-10}, kap: {vhalfn: 11.0, gbar: 0.008, sh: 0.0, vhalfl: -56.0, tq: -40.0}, kdr: {gbar: 0.12, sh: 0.0, vhalfn: 13.0}, cal: {gcalbar: 8.831670671440001e-07}, nax: {gbar: 0.0495, sh: 0.0}, cadad: {taur: 5.0, depth: 1.0, kt: 0.0, cainf: 0.00024, kd: 0.0}}
[[./gif/tr_trace_V_somaaces_detailedcell_mod6.png]]

* 10-17-17

goal: meeting 

added stim to basal dend 34, 8 synaptic + 4 extra synaptic
[[./gif/tr_trace_V_somaaces_detailed_stim025.png]]
[[./gif/tr_trace_Bdend34aces_detailed_stim025.png]]
weight: 0.25
slight decrease of vm. need to increase k conductance 

then increased weight to 0.5:
[[./gif/tr_trace_V_somaaces_detailed_stim05.png]]
[[./gif/tr_trace_Bdend34aces_detailed_stim05.png]]

** meeting:
*** resolve penny's model import to netpyne
*** meeting tomorrow to follow up
 
iclamp with Penny's NEURON model:
[[./gif/Figure_1.png]]
iclamp amp: 0.2 nA

** Salva found the error in netpyne.



** check last update on netpyne:
from netpyne import sim; print sim.gitChangeset()

>>> print sim.gitChangeset()
commit ba331e3335e2d1bc4cf90b32743fe1102c8808f7
Author: salvadord <salvadordura@gmail.com>
Date:   Tue Oct 17 16:37:14 2017 -0400
    Fixed bug in replaceDictODict() that lead to wrong results when importing ce
...skipping...
commit ba331e3335e2d1bc4cf90b32743fe1102c8808f7
Author: salvadord <salvadordura@gmail.com>
Date:   Tue Oct 17 16:37:14 2017 -0400

sim with 0.2 nA
[[./gif/traces_detailedcell_mod7.png]]

** then simulation with 12 netstims distributed along the basal dend:
loc = list(np.linspace(0.5, 0.7, 8))
loc2 = list(np.linspace(0.4, 0.7, 4)) 

cfg.NetStim0 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[0],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim1 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[1],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim2 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[2],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim3 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[3],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim4 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[4],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim5 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[5],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim6 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[6],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim7 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc[7],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim8 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc2[0],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim9 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc2[1],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim10 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc2[2],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}
cfg.NetStim11 = {'pop':'PT5','cellList':[0],'sec':'basal_34','loc':loc2[3],'synMech':['AMPA','NMDA'],'start':200,'interval': 1000.0,'noise': 0.0,'number': 1,'weight': cfg.glutw[4],'delay': 1.0}

** sim with stim to basal dend:
weight: 0.05
cfg.ratiobdend = [0.5,0.5]
[[./gif/tr_trace_V_somaaces_detailedcell_netstim005.png]]
[[./gif/tr_trace_Bdend34aces_detailedcell_netstim005.png]]

** penny's model params
cdur: 1
beta: 0.03
gmax AMPA: 0.1
gmax NMDA: 0.05
weight: 0.05
[[./gif/tr_trace_V_somaaces_detailedcell_pennysparams.png]]
 
** batch simulation:
[[./gif/batch_detailedCell_2_2_traces_trace_V_soma.png]]
cdur: 50
beta: 0.03
gmax AMPA: 0.1
gmax NMDA: 0.05
weight: 0.5*0.5


* 10-18-17

** removed ratiobasal, it decreases weight by 0.5
[[./gif/tr_trace_V_somaaces_detailedCell_stim03.png]]
cdur: 30
beta: 0.03
gmax AMPA: 0.1
gmax NMDA: 0.05
weight: 0.3


** conevrsation with bill, joe and penny about the project.
bill:
ok so do we have a cell? :)
12:02
reason i want to keep meeting is partly just so you 2 guys work together
12:02
as well as keeping me on top of things
12:03
so the original cell you had joe?  is that working?  what was that cell called S7?
12:04
you guys still there?
12:04
hello?
sergio 12:04 PM
yes here
billl 12:04 PM
so please answer?  :)
12:04
joe you here too?
sergio 12:05 PM
I’m working with the last cell that Joe developed
12:06
the eee7.py
joe 12:06 PM
Here, sorry.
billl 12:06 PM
eee7 -- ok -- so what does that one look like?  how similar is it to the data that srdjan jus tsetn?
12:06
how similar is it to the traj's of penny's model?
12:07
the thing i'm confused about is that seemed we had a good model but the more recent figs from joe have looked different from what i remembered but maybe just my misrememb??
12:07
have a current trace?  with some comparisons
joe 12:08 PM
The cell that Sergio is working with has the good plateaus that we’ve been seeing for some time.
billl 12:08 PM
sergio can you show me one of those?
12:09
can we superimpose that on penny's?  on data?
12:09
can you start wit hthat one joe and then start changing the pattern of the stim based on the different spine density?
sergio 12:09 PM
sure, let me look for one trace
joe 12:09 PM
In my latest cell (where I added a few glutamate dynamics params) the plateaus aren’t as good anymore.  I’m hoping to figure out why today (seems to be the spatiotemporal spreading of glutamate reduces the plateaus).
billl 12:10 PM
ok if you can figure out why but often easier to just start with the one that works and then make small changes rather than trying to jump straight to your objective
12:10
that way can see where it is that things went awry
joe 12:10 PM
billl 12:11 PM
the problem with dynmics is that often hard/impossible to figure stuf oiut since so many factors with things causeing other things cyclically
joe 12:11 PM
Yeah, what I’m thinking is set the dynamics to the same as when had good plateaus, then see if we can tweak without losing good output.
billl 12:11 PM
i was about to say that that looks great! -- then i noticed that that was expt :)
12:12
@joe -- ok so let's revisit this in about an hour or so with some prelim results?
billl 12:12 PM
@sergio -- so i'm lost again (due to my poor memory) -- we had some problem that we were addressing by loading penny's files -- what was that problem??
1 reply
Today at 12:13 PM View thread
joe 12:12 PM

graham-mac% eee; ipython

In [1]: import numpy as np; import matplotlib.pyplot as plt; import batch_analysis; import batch_utils

In [2]: data1, time1, traces1 = batch_utils.import_excel("../data/srdjan_20171017/B_73_004.xlsx")

In [3]: data2, time2, traces2 = batch_utils.import_excel("../data/srdjan_20171017/B_461_001 sw 8.xlsx")

In [4]: data3, time3, traces3 = batch_utils.import_excel("../data/srdjan_20171017/B_461_002 sw 01.xlsx")

In [5]: plt.figure()

In [6]: plt.plot(time1, traces1)

In [7]: plt.figure()

In [8]: plt.plot(time2, traces2)

In [9]: plt.figure()

In [10]: plt.plot(time3, traces3)

In [11]: plt.show()

To get Srdjan’s data into Python, function is batch_utils.import_excel
billl 12:13 PM
oh ok so just a single builtin?
sergio 12:13 PM
replied to a thread:
@sergio -- so i'm lost again (due to my poor memory) -- we had some problem that we were addressing by loading penny's files -- what was that problem?…
1 reply
https://neurosim.slack.com/archives/C2C7K1JKE/p1508272877000310
Salvador Dura-Bernal
fixed issue importing cell — it was due to an obscure bug resulting from using `isinstance()` instead of `type()` (isinstance takes into account inherited classes, so was applied to wrong objects and messed up imported structures)
From a thread in #eee-theoryYesterday at 4:41 PM
sergio 12:13 PM
Salva found a bug on netpyne
12:13
but now is working
billl 12:13 PM
yes i saw that
12:14
what was wrong with joe's cells?
sergio 12:15 PM
last discussion was related to the plateau of the plateau. It has some decay, which it can be seen in the experimental data
billl 12:16 PM
yeah so what was wrong with joe's cells?  why do we need penny's cells?
sergio 12:17 PM
one of the ideas to work with penny’s cell was to replicate her condition of the stim and induction of plateaus
billl 12:17 PM
why?
12:17
what was wrong with joe's condition of the stim and induction of plateaus
12:17
?
sergio 12:19 PM
I don’t see anything wrong on joe’s conditions
billl 12:19 PM
so why are we importing penny's cell?
sergio 12:20 PM
I think it was not explicit but to implement her model on netpyne was a goal
12:20
and in that way we compare models
12:20
*we can compare
billl 12:20 PM
ok that's useful
12:21
but guess we're giving up on implementing on netpyne now?  seems like will take too long and prob not useful since cna just import?
12:22
guess you wanted to implement since import wasn't working but salva has fixed that now
12:22
ok so now we're back to the network sims -- where do we stand with that
12:22
what is the plan for today?
sergio 12:23 PM
I would like to go back to the network part where I was tuning the joe’s cell in the 2 cell types  network
billl 12:24 PM
uhoh -- what do you need to tune?  so now sounds like you are not satisfied with joe's cell or with some aspect of the stim parameters??
12:24
let's look at it -- what is the sim we are discussing?
sergio 12:25 PM
let me look for the sims at that moment
sergio 12:26 PM
EEE network 18

Document from Google Drive Click to open in Google Drive
sergio 12:27 PM
at that moment I did moment last changes of the gmax for AMPA and NMDA
12:27
Joe told me how to do it
billl 12:27 PM
just put up the fig here as a png so i can see what you are talking about
12:28
@joe -- are we now on the same AMPA/NMDA ratios and gmax and weight that penny is doing?  approx==?
joe 12:29 PM
Same ratio, but I think Penny changed gmax to much lower values to get better results…
12:30
I was going to explore gmax and Penny’s values later today.
billl 12:31 PM
maybe we should do that 1st?  so sergio could have some values to work with
12:31
sergio what does your fig look like currently? -- what is worrying you?
joe 12:32 PM
Okay, I’ll look into it now.
sergio 12:32 PM
billl 12:32 PM
so that was the connected network?
sergio 12:33 PM
sergio 12:33 PM
yes
billl 12:33 PM
we had dropped back to he unconnected so could see same activity in each
12:33
don't need the rasters for now (or perhaps ever) unless you see someting of interest there?? -- guess here can just say that only the 5 stim'ed cells are firing
sergio 12:34 PM
the only difference is if I increase the number of stimulated cells
12:34
it increases the plateau duration
billl 12:35 PM
ok -- does that interest us?
sergio 12:35 PM
billl 12:35 PM
do you want to systematically explore that? -- or do you want to work with joe now to get better stim params?
sergio 12:37 PM
I can work wit Joe in better stim params and them see that in the network
billl 12:38 PM
ok so we're aiming to hear back in ~1h so i'll check in with you at 14:00 see how it's going
joe 12:38 PM
Give me a few minutes and I’ll get my repo committed and pushed.
billl 12:38 PM
joe why don't you type at sergio here so i can see if runs into any problems
joe 12:38 PM
Sounds good.
sergio 12:39 PM
perfect
billl 12:39 PM
maybe the 2 of you figure out 2 diff approaches you want to explore -- guess 1 problem is that the rin of penny's cell prob much different from the eee7 -- sergio is that easy for you to check quickly (i would know how to do in neuron but would be hard for me in netpyne but for you perhaps opposite) ?
sergio 12:40 PM
sure I can check that
billl 12:41 PM
be good to check rin from soma and from the bas dend where we will be activating
12:41
use a neg stim as you would in a cell so don't get the spiking of course
12:41
do we have ih in these cells?
sergio 12:42 PM
yes on joe’s, no on penny’s
billl 12:43 PM
oh that's odd -- why doesn't @penny want ih?

** moved into penny's repo:

added init.py, netParams.py, cfg.py, and runsim

idea to run cell only

** on init.py:

import matplotlib; matplotlib.use('Agg')  # to avoid graphics error in servers
from netpyne import sim

cfg, netParams = sim.readCmdLineArgs()

#
sim.create(simConfig = cfg,
    netParams = netParams)

** on netParams:

from netpyne import specs
from neuron import h
netParams = specs.NetParams()  # object of class NetParams to store the network parameters
try:
    from __main__ import cfg  # import SimConfig object with params from parent module
except:
    from cfg import cfg
#------------------------------------------------------------------------------
#
# NETWORK PARAMETERS
#
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
# General network parameters
#------------------------------------------------------------------------------
netParams.scale = cfg.scale # Scale factor for number of cells
netParams.sizeX = cfg.sizeX # x-dimension (horizontal length) size in um
netParams.sizeY = cfg.sizeY # y-dimension (vertical height or cortical depth) size in um
netParams.sizeZ = cfg.sizeZ # z-dimension (horizontal depth) size in um
netParams.shape = 'cylinder' # cylindrical (column-like) volume
#------------------------------------------------------------------------------
# General connectivity parameters
#------------------------------------------------------------------------------
netParams.defaultThreshold = -30.0 # spike threshold, 10 mV is NetCon default, lower it for all cells
netParams.defaultDelay = 2.0 # default conn delay (ms)
netParams.propVelocity = 100.0 # propagation velocity (um/ms)
netParams.probLengthConst = 150.0 # length constant for conn probability (um)

#------------------------------------------------------------------------------
# Cell parameters
#------------------------------------------------------------------------------
layer = {'5':[0.2,0.623]} #yRange in column

cellRule = netParams.importCellParams(label='PT5_detailed', conds={'cellType': 'PT5B', 'cellModel': 'PFC_full'}, 
      fileName = 'CA229_PFC.py', cellName='MakeCA229')
h.v_init = cfg.vinit

#------------------------------------------------------------------------------
# Population parameters
#------------------------------------------------------------------------------
columnA = [50, 350] #xrange
netParams.popParams['PT5']  = {'cellModel': 'PFC_full', 'cellType': 'PT5B', 'xRange': columnA, 'yRange': layer['5'], 'numCells': 1} 


#------------------------------------------------------------------------------
# Current clamps (IClamp)
#------------------------------------------------------------------------------
if cfg.addIClamp:
  for key in [k for k in dir(cfg) if k.startswith('IClamp')]:
    params = getattr(cfg, key, None)
    cfg.analysis['plotTraces']['include'].append((params['pop'],0))  # record that pop
    #cfg.analysis['plotRaster']
    # add stim source
    netParams.stimSourceParams[key] = {
      'type': 'IClamp',
      'del': params['start'],
      'dur': params['dur'],
      'amp': params['amp']}
    # connect stim source to target
    netParams.stimTargetParams[key+'_'+params['pop']] =  {
      'source': key,
      'conds': {'pop': params['pop']},
      'sec': params['sec'],
      'loc': params['loc']}


only added import cell, pop params and iclamp.

** on cfg.py

"""
cfg.py
"""
from netpyne import specs
cfg = specs.SimConfig()
#------------------------------------------------------------------------------
#
# SIMULATION CONFIGURATION
#
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Run parameters
#------------------------------------------------------------------------------
cfg.duration = 1000 #ms
cfg.dt = 0.05 #don't do less than 0.05
cfg.hParams = {'celsius': 32} #, 'v_init': -65.0} #-67.3}
cfg.vinit = -67.3
cfg.verbose = 0
cfg.createNEURONObj = True
cfg.createPyStruct = True
cfg.cvode_active = False
cfg.cvode_atol = 1e-6
cfg.cache_efficient = True
cfg.checkErrors = False
cfg.seeds = {'conn':4123, 
            'stim': 1234, 
            'loc': 3214}
#cfg.printRunTime = 0.1
#cfg.includeParamsLabel = False
cfg.printPopAvgRates = True
cfg.scale = 1.0
cfg.sizeY = 1600
cfg.sizeX = 400
cfg.sizeZ = 300

#------------------------------------------------------------------------------
# Recording
#------------------------------------------------------------------------------
PT5 = ['PT5']

cfg.recordCells = ['all']
cfg.recordTraces = {
                    'V_soma': {'sec':'soma_2', 'loc':0.5, 'var':'v'}
                   } 

cfg.recordTraces['Bdend34'] = {'sec':'basal_34', 'loc':0.5, 'var':'v'}


cfg.recordStims = False
cfg.recordStep = 0.1 #sampling rate, orig =1.0, 1=1khz, 0.1=10khz, 0.05=20khz

#------------------------------------------------------------------------------
# Saving
#------------------------------------------------------------------------------
#cfg.simLabel = 'v11'
#cfg.saveFolder = '../../data/v10'
cfg.savePickle = False
cfg.saveJson = False
cfg.saveDataInclude = ['simData', 'simConfig', 'netParams']#, 'net']
cfg.backupCfgFile = None #['cfg.py', 'backupcfg/']
cfg.gatherOnlySimData = False
cfg.saveCellSecs = True
cfg.saveCellConns = True


#---------------------------------------------------------------------
# Current inputs (IClamp)
#------------------------------------------------------------------------------
cfg.addIClamp = 0
ampl = 0.2
durat = 800
cfg.IClamp3 = {'pop': 'PT5', 'sec': 'soma_2', 'loc': 0.5, 'start': 200, 'dur': durat, 'amp': ampl}

#------------------------------------------------------------------------------
# Analysis and plotting
#------------------------------------------------------------------------------

cfg.analysis['plotTraces'] = {'include':[('PT5', 0)],'oneFigPer':'trace','figSize': (12,8),'saveFig': 'traces',
    'showFig': True, 'ylim':[-80,60]} 

params only to run the cell, record, iclamp, and plotting

** now working from repo on eee/sim/detailedCell
 
** Bill:
asked for the path for compile.py:
/u/sergioangulo/projects/eee/sim/detailedCell/compile.py

** totally different to compile script to on eee/sim:
/u/sergioangulo/projects/eee/sim/compile

** compile.py uses nrnivmodl

We suggested to work with same mod files.

** bill: 
just import cell geometry, and work on /u/sergioangulo/projects/eee

** just changing cellName from 'MakeCA229' to 'CA229' to import only cell geometry:

cellRule = netParams.importCellParams(label='PT5_detailed', conds={'cellType': 'PT5B', 'cellModel': 'PFC_full'}, 
      fileName = 'CA229_PFC.py', cellName='CA229')

** checking on python:
>>> sim.net.cells[0].secs.soma_2.mechs
{}

>>> sim.net.cells[0].secs.soma_2
{mechs: {}, hSec: <netpyne.cell.CompartCell object at 0x7f5a3fc38e50>.soma_2, geom: {diam: 9.75, cm: 1.0, nseg: 1, L: 2.5900001525878906, Ra: 35.4, pt3d: [(-54.060001373291016, -1.659999966621399, -5.960000038146973, 11.510000228881836), (-54.060001373291016, -4.25, -5.960000038146973, 7.989999771118164)]}, topol: {childX: 0.0, parentSec: 'soma_1', parentX: 1.0}}

** change checkErrors to True

* 10-19-17 Rin calculations for reduced and detailed cells

working with bill on detailed cell:

** file to import only geometry:
/u/sergioangulo/projects/eee/sim/detailedCell/netParams.py

** netParams contains:
cellRule = netParams.importCellParams(label='PT5_detailed', conds={'cellType': 'PT5B', 'cellModel': 'PFC_full'}, 
      fileName = 'CA229_PFC.py', cellName='CA229')

** executing python -i init.py:

Creating network of 1 cell populations on 1 hosts...
  Number of cells on node 0: 1 
  Done; cell creation time = 0.02 s.
Making connections...
  Number of connections on node 0: 0 
  Done; cell connection time = 0.00 s.
  Number of stims on node 0: 0 
  Done; cell stims creation time = 0.00 s.


** on init.py run command to only create cell:

import matplotlib; matplotlib.use('Agg')  # to avoid graphics error in servers
from netpyne import sim

cfg, netParams = sim.readCmdLineArgs()

#
sim.create(simConfig = cfg,
    netParams = netParams)
    
"""

** Bill:
needs to create outline on nb to read better, also get rid of lines with no information.

** error on morphology of cell:	
billl 10:18 AM
@sergio -- i get this error -- ERROR :CellParams -> secs ('basal_31') -> 'geom' -> 'pt3D':Type error. pt3D must be an array with each array element being a 4length 4 array of floats.

original error:
ERROR:cellParams -> secs ('basal_31') -> 'geom' -> 'pt3D': Type error. pt3D must be an array/list where each element is an array/list of 4 floats.Value specified is: '(-124.28199768066406, 1.187999963760376, -17.416000366210938, 0.6399999856948853)'.

values are floats.

check hoc file and found no error.

Salva suggested to check sec with netParams.cellParams

In [3]: netParams.cellParams.PT5_detailed.secs.basal_31
Out[3]: {mechs: {}, geom: {diam: 0.6399999856948853, cm: 1.0, nseg: 5, L: 58.890580352230614, Ra: 35.4, pt3d: [(-124.28199768066406, 1.187999963760376, -17.416000366210938, 0.6399999856948853), (-127.16200256347656, 0.8579999804496765, -20.256000518798828, 0.6399999856948853), (-129.08200073242188, 0.8579999804496765, -20.256000518798828, 0.6399999856948853), (-131.6320037841797, -1.7319999933242798, -22.016000747680664, 0.6399999856948853), (-134.19200134277344, -3.3519999980926514, -24.736000061035156, 0.6399999856948853), (-138.3520050048828, -4.322000026702881, -29.736000061035156, 0.6399999856948853), (-140.5919952392578, -5.622000217437744, -32.25600051879883, 0.6399999856948853), (-143.4720001220703, -6.9120001792907715, -32.25600051879883, 0.6399999856948853), (-146.3419952392578, -6.9120001792907715, -35.35599899291992, 0.6399999856948853), (-149.2220001220703, -7.561999797821045, -37.11600112915039, 0.6399999856948853), (-152.1020050048828, -7.561999797821045, -37.93600082397461, 0.6399999856948853), (-154.02200317382812, -7.561999797821045, -37.91600036621094, 0.6399999856948853), (-157.2220001220703, -8.211999893188477, -39.19599914550781, 0.6399999856948853), (-159.78199768066406, -10.152000427246094, -39.63600158691406, 0.6399999856948853), (-162.33200073242188, -11.45199966430664, -43.11600112915039, 0.6399999856948853), (-165.8520050048828, -13.392000198364258, -44.816001892089844, 0.515999972820282), (-168.0919952392578, -14.041999816894531, -47.09600067138672, 0.4860000014305115)]}, topol: {childX: 0.0, parentSec: 'basal_30', parentX: 1.0}, _repr_mimebundle_: {}}


Found no error.

Salva reported bug on checkError function on netpyne.
	
salvadord 10:30 AM
@sidmitra - this error is showing up but seems that the values are ok? can u check please? also can u fix so shows the cellParams key, and so the tuple of values is not between quotes? thanks

** bill:
@sergio ok -- on right track now so ready to try IClamp i think? -- add that create, cell, run check voltage, and look at trace

changes on init.py

sim.initialize(
    simConfig = cfg,
    netParams = netParams)  				# create network object and set cfg and net params
sim.net.createPops()               			# instantiate network populations
sim.net.createCells()   

** inserted mechs on cell, compile.

** then run init.py

created iclamp source:
netParams.stimSourceParams['iclamp'] = {'type': 'IClamp', 'del': 60, 'dur': 800, 'amp': 0.2}

created iclamp target:
netParams.stimTargetParams['iclamp_PT5'] = {'source': 'iclamp', 'conds':{'pop': 'PT5'}, 'sec': 'soma_2', 'loc': 0.5}

set recording:
cfg.recordCells = ['all']
cfg.recordTraces = {'V_soma': {'sec':'soma_2', 'loc':0.5, 'var':'v'}} 

set plotting:
cfg.analysis['plotTraces'] = {'include':[('PT5', 0)],'oneFigPer':'trace','figSize': (12,8),'saveFig': 'traces','showFig': True, 'ylim':[-80,60]} 

add stims:
sim.net.addStims() 

add recording:
sim.setupRecording()

run sim:
sim.runSim() 

plot:
sim.analysis.plotData()

** then error:
>>> sim.analysis.plotData()  
Plotting recorded cell traces ...
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 47, in plotData
    out = func(**kwargs)  # call function with user arguments
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 820, in plotTraces
    cells, cellGids, _ = getCellsInclude(include)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 175, in getCellsInclude
    allCells = sim.net.allCells
AttributeError: 'Network' object has no attribute 'allCells'

check recording cells. 
changed to:
cfg.recordCells = [('PT5', 0)]

same error.

check with writing parameters on cfg and netparams for iclamp. And  it works. 

differences, added cfg.recordStep = 0.1.

added on cfg:

#------------------------------------------------------------------------------
# Recording
#------------------------------------------------------------------------------

cfg.recordCells = ['all']
cfg.recordTraces = {'V_soma': {'sec':'soma_2', 'loc':0.5, 'var':'v'}}
                   
cfg.recordStims = False
cfg.recordStep = 0.1 #sampling rate, orig =1.0, 1=1khz, 0.1=10khz, 0.05=20khz

#------------------------------------------------------------------------------
# Current inputs (IClamp)
#------------------------------------------------------------------------------
cfg.addIClamp = 1

cfg.IClamp3 = {'pop': 'PT5', 'sec': 'soma_2', 'loc': 0.5, 'start': 100, 'dur': 600, 'amp': 0.2}

#------------------------------------------------------------------------------
# Analysis and plotting
#------------------------------------------------------------------------------

cfg.analysis['plotTraces'] = {'include':[('PT5', 0)],'oneFigPer':'trace','figSize': (12,8),'saveFig': 'traces','showFig': True, 'ylim':[-80,60]} 

added on netParams:

#------------------------------------------------------------------------------
# Current clamps (IClamp)
#------------------------------------------------------------------------------
if cfg.addIClamp:
  for key in [k for k in dir(cfg) if k.startswith('IClamp')]:
    params = getattr(cfg, key, None)
    cfg.analysis['plotTraces']['include'].append((params['pop'],0))  # record that pop
    #cfg.analysis['plotRaster']
    # add stim source
    netParams.stimSourceParams[key] = {
      'type': 'IClamp',
      'del': params['start'],
      'dur': params['dur'],
      'amp': params['amp']}
    # connect stim source to target
    netParams.stimTargetParams[key+'_'+params['pop']] =  {
      'source': key,
      'conds': {'pop': params['pop']},
      'sec': params['sec'],
      'loc': params['loc']}

try again and work interactively.

same error

bill suggested to no to run analysis.

salva commented solution for error:
run 
sim.gatherData()

print vectors:
sim.allSimData['spkt']

run command to print dict, but appears empty:
>>> sim.allSimData['spkt']
[]

check structure for netpyne.

** ran sim.analysis.plotData() and plotted trace.

ok looks reasonable -- what's Rin?

[12:34] 
this is from soma?

sergio [12:34 PM] 
yep, but I’m not really sure that the iclamp is working


billl [12:36 PM] 
well set it to 0 and make sure that is flat


[12:36] 
if not flat then you are not starting at RMP so have to wait for 200 and start the iclamp then


[12:37] 
also when you plot make the ylims [-90,-50] so can see it

doing changes.

netParams.stimSourceParams['iclamp2'] = {'type': 'IClamp', 'del': 60, 'dur': 1000, 'amp': 0.0}
netParams.stimTargetParams['iclamp_PT5'] = {'source': 'iclamp2', 'conds':{'pop': 'PT5'}, 'sec': 'soma_2', 'loc': 0.5}
cfg.recordTraces = {'V_soma': {'sec':'soma_2', 'loc':0.5, 'var':'v'}} 
cfg.analysis['plotTraces'] = {'include':[('PT5', 0)],'oneFigPer':'trace','figSize': (12,8),'saveFig': 'traces','showFig': True, 'ylim':[-90,-50]} 

change to create iclamp from netparams and cfg.

after running init.py

sim.net.addStims() 					
sim.setupRecording()              		
sim.runSim()                      		
sim.gatherData()                  		
sim.analysis.plotData()


** accesing iclamp:
sim.net.cells[0].stims[0].hIClamp

for amp:
sim.net.cells[0].stims[0].hIClamp.amp

** access vector voltage soma:
cell.soma_2(0.5).v

>>> cell.soma_2(0.5).v
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cell' is not defined

no able to access

vectors: 
{spkt: Vector[0], spkid: Vector[1], V_soma: {cell_0: Vector[3]}, t: Vector[4]}

solution:
>>> sim.allSimData['V_soma'].cell_0[-1]
-65.0

** ran sim with iclamp amp 0.1
>>> sim.allSimData['V_soma'].cell_0[-1]
354.5932744260782

value out of physiological range.

bill suggested to run iclamp with neg values, 2 cells (joe, penny), 2 locations.

** iclamp penny's cell; mechs included 

iclamp amp = -0.1

>>> sim.allSimData['V_soma'].cell_0[-1]
-79.38284733147701

>>> sim.allSimData['Bdend34'].cell_0[-1]
-94.47736920407073

iclamp amp = 0.0

>>> sim.allSimData['V_soma'].cell_0[-1]
-67.31913677251235

>>> sim.allSimData['Bdend34'].cell_0[-1]
-67.26397213012126

** iclamp penny's cell; mechs no included 

iclamp amp 0.0:

>>> sim.allSimData['V_soma_2'].cell_0[-1]
-65.0

>>> sim.allSimData['Bdend34'].cell_0[-1]
-65.0


iclamp amp -0.1:

>>> sim.allSimData['V_soma_2'].cell_0[-1]
-695.4097807615823

>>> sim.allSimData['Bdend34'].cell_0[-1]
-701.5210568988992


** iclamp joe's cell

iclamp amp = -0.1

>>> sim.allSimData['V_soma'].cell_1[-1]
-86.51568327444308

>>> sim.allSimData['Bdend1'].cell_1[-1]
-88.83682937113126


iclamp amp = 0.0
>>> sim.allSimData['V_soma'].cell_1[-1]
-80.42785115866539

>>> sim.allSimData['Bdend1'].cell_1[-1]
-80.53201817411045

Rin calculated from iclamps:
Detailed cell (mechs incl.) soma Rin: 120.63710559 MOhm
Detailed cell (mechs incl.) basal dend Rin: 272.133970739 MOhm
Detailed cell (no mechs incl.) soma Rin: 6304.09780762 MOhm
Detailed cell (no mechs incl.) basal dend Rin: 6365.21056899 MOhm
Reduced cell soma Rin: 60.8783211578 MOhm
Reduced cell basal dend Rin: 83.0481119702 MOhm

script on python:
/u/sergioangulo/projects/eee/sim/detailedCell/Rin_cells.py

** clonning penny's repo
git clone https://slanguloc@bitbucket.org/peng_gao_penny/eee_detailed_model.git

** Syn Mechs from central repo in detailed cell model
Added NMDAeee.mod and ampa.mod to the detailedCell/mod dir

** discussion about Rin
Bill suggested to calculate Rin for reduced cell without including the mechs. Missunderstood from previous discussion and did not calculate them.

Bill: let's get both
and 2 positions; and 2 diff cell types so 2x2x2 = 8 measures"  -- not in your nb

** iclamp reduced cell no mechs

iclamp amp 0.0

>>> sim.allSimData['V_soma'].cell_1[-1]
-75.0413649414

>>> sim.allSimData['Bdend1'].cell_1[-1]
-75.0413649414

iclamp amp -0.1

>>> sim.allSimData['V_soma'].cell_1[-1]
-732.7558155059421

>>> sim.allSimData['Bdend1'].cell_1[-1]
-733.4868770353761

** calculated values for all cells + conditions

Detailed cell (mechs incl.) soma Rin: 120.63710559 MOhm
Detailed cell (mechs incl.) basal dend Rin: 272.133970739 MOhm
Detailed cell (no mechs incl.) soma Rin: 6304.09780762 MOhm
Detailed cell (no mechs incl.) basal dend Rin: 6365.21056899 MOhm
Reduced cell (mechs incl.) soma Rin: 60.8783211578 MOhm
Reduced cell (mechs incl.) basal dend Rin: 83.0481119702 MOhm
Reduced cell (no mechs incl.) soma Rin: 6577.14450565 MOhm
Reduced cell (no mechs incl.) basal dend Rin: 6577.14450565 MOhm

** discussion about Rin values with bill and joe

ok so seems like we're a little too leaky -- was expecting the opposite;  what do ypou think @joe?


joe [43 minutes ago] 
I’m really not sure… :thinking_face:


billl 
[26 minutes ago] 
well you set the gleak to these values -- if you want to get similar results to what penny is getting you may need to switch to her Rin values;  @sergio -- you want to fix that for joe?


billl [26 minutes ago] 
or do you already have good results with penny's channels and synapses joe?


sergio [24 minutes ago] 
I can work with Joe to check the Rin values


joe [22 minutes ago] 
Thanks Sergio.  Still working on it, Bill.


billl 
[20 minutes ago] 
you can change the gleak sergio to try to match up the Rins -- the Rin is eg 2x too low then you would decrease the leak (increase the resistance) by 2x (that's just an example)


billl [19 minutes ago] 
will be some interplay between the gleak in soma and bas dend which wil be different than it is in the big cell

I will work with joe to match Rins

* 10-20-17 Rin modification of reduced cell

Goal: work with joe to match Rins

** Target values to match Rin in reduced cell 

expected volt in soma reduced cell after iclamp amp -0.1: -92.4915617176
expected volt in basal reduced cell after iclamp amp -0.1: -107.745415248

original changes on volt soma after iclamp -0.1:  -86.51568327444308

** Modifying somRM on eee7.py
orig value: 18501.7540916 

changing somaRM to 50000 did not affect the volt after -0.1:

>>> sim.allSimData['V_soma'].cell_1[-1]
-86.22340869819634

somaRm is not the parameter to modify.

** checking rall on eee7.py:
orig value: 114.510490019 

test value 200:
>>> sim.allSimData['V_soma'].cell_1[-1]
-88.01365454981128

test value 300:
>>> sim.allSimData['V_soma'].cell_1[-1]
-89.01968676088262

test value 400:
>>> sim.allSimData['V_soma'].cell_1[-1]
-89.68666253133838

** checking gbar_kdmc:

orig value: 0.000447365630734

iclamp amp: -0.1
test value: 0.000447365630734*100
>>> sim.allSimData['V_soma'].cell_1[-1]
-90.6331472094311

iclamp:0.0
test value: 0.000447365630734*100
>>> sim.allSimData['V_soma'].cell_1[-1]
-86.07261626186015

it modifies resting Vm

iclamp:0.0
test value: 0.000447365630734*0.01
>>> sim.allSimData['V_soma'].cell_1[-1]
-80.25981493923187

iclamp:-0.1
test value: 0.000447365630734*0.01
>>> sim.allSimData['V_soma'].cell_1[-1]
-86.38822700801333

not a parameter to modify to change the Rin

** varying gbar_kdr

orig valu: 0.0131103978049

iclamp:0.0
test value: 0.0131103978049*0.01
>>> sim.allSimData['V_soma'].cell_1[-1]
-80.35852721836697

iclamp:-0.1
test value: 0.0131103978049*0.01
>>> sim.allSimData['V_soma'].cell_1[-1]
-86.48581808057013

no a param to modify.

** back to rall

test value: 500.0
iclamp amp: 0.0 
>>> sim.allSimData['V_soma'].cell_1[-1]
-81.71867717520492

iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-90.17822883545021

adding somaRm to 25000
iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-90.25389869811971
doesn't affect changes

no changes somaRm
adding gbar_ih (0.000140956438043 * 0.001)
iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-101.3211868634419

** testing only gbar_ih

gbar_ih = 0.000140956438043 * 0.001

iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-92.06163717634456

iclamp amp: 0.0
>>> sim.allSimData['V_soma'].cell_1[-1]
-83.40692478962836

gbar_ih = 0.000140956438043 * 0.0001

iclamp amp: 0.0
>>> sim.allSimData['V_soma'].cell_1[-1]
-83.44780549804398

iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-92.14483689055929

gbar_ih = 0.000140956438043 * 0.01

iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-91.7794722447673

iclamp amp: 0.0
>>> sim.allSimData['V_soma'].cell_1[-1]
-83.26953752026961

gbar_ih = 0.000140956438043 * 0.1

iclamp amp: 0.0
>>> sim.allSimData['V_soma'].cell_1[-1]
-82.7

iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-90.7

adding rall to 150.0
iclamp amp: -0.1
>>> sim.allSimData['V_soma'].cell_1[-1]
-92.1

iclamp amp: 0.0
-83.3

** discussion on Rin:

modify somaRm and  BdendRm at the same time

Bill commented:
if you think about the Rin of a cell you can see that changing any 1 location of leak will not be very efficacious since the current can still go over to the other part of cell and leak out there

** modyfing somaRM and BdendRM by factor(2.0):

iclamp amp: 0.0
soma
-79.0

iclamp amp: -0.1
soma
-86.2

Rin: 72.0

** modyfing somaRM and BdendRM by factor(10.0):

iclamp amp: 0.0
soma
-77.5

iclamp amp: -0.1
soma
-85.9

Rin: 84.0
 
** modyfing somaRM and BdendRM by factor(50.0):

iclamp amp: 0.0
soma
-77.1

iclamp amp: -0.1
soma
-85.8

Rin: 87.0

** modyfing somaRM, bdendRM, apicRM, and axonRM  by factor(2.0):

iclamp amp: 0.0
soma
-77.7

iclamp amp: -0.1
soma
-85.7

Rin: 80.0

** modyfing somaRM, bdendRM, apicRM, and axonRM  by factor(10.0), results (soma Rin:117, basal: 141)

iclamp amp: 0.0
soma
-72.7

iclamp amp: -0.1
soma
-84.4

soma
Rin: 117.0

iclamp amp: 0.0
basal
-72.8

iclamp amp: -0.1
basal
-86.9

basal
Rin: 141.0

Reduced cell soma Rin: 117.0 MOhm
Reduced cell basal Rin: 141.0 MOhm

values closer to the detailed cell. Still basal dend on detailed cell has higher values (272)

** discussion about Rin values

billl [2:35 PM] 
what was our target?

sergio [2:36 PM] 
added this Plain Text snippet: target values Rin
Detailed cell soma Rin: 120.63710559 MOhm
Detailed cell basal dend Rin: 272.133970739 MOhm

billl [2:36 PM] 
ok so need to go higher R in the dend still

[2:36] 
this is all with mechs right?

sergio [2:36 PM] 
yes

billl [2:37 PM] 
good -- getting close

sergio [2:37 PM] 
ok let me modify the Rm values for dend

** modifying bdend Rm values by factor 2.0 (+ prev factor 10.0)

iclamp amp = 0.0
basal
-72.6

iclamp amp = -0.1
basal
-86.8
 
Rin: 142

** modifying bdend Rm values by factor 10.0 (+ prev factor 10.0)

iclamp amp = 0.0
basal
-72.4

iclamp amp = -0.1
basal
-86.8
 
Rin: 144

No big increases only modifying bdendRM 


** modifying bdend Rm values by factor 50.0 (+ prev factor 10.0)

iclamp amp = 0.0
basal
-72.3

iclamp amp = -0.1
basal
-86.8

Rin: 145 

** discussion about values 

	
sergio 4:18 PM
I can’t get higher vaules in the basal dend, I was thinking to decrease Ih as an option
billl 4:18 PM
well penny has no ih so can try dec ih to 0 but would rather have peeny put ih back unless srdjan thinks is not there?  @penny?
4:19
@sergio - but ok let's try that just to see if that's what the difference is
sergio 4:20 PM
ok
penny 4:20 PM
He said ih channel is very low in basal dendrites. I guess it would still be better if I add some ih channel there
4:21
I am looking for a reasonable ih channel density in literature
4:21
What density are u guys using?
sergio 4:25 PM

# h-current

h.erev_ih = -37.0 # global

gbar_h = 0.000140956438043 

h_gbar_tuft = 0.00565 # mho/cm^2 (based on Harnett 2015 J Neurosci)

sergio 4:27 PM
for the basal dend in the eee7 cell, Ih is inserted and has only gbar_h specified
sergio 4:27 PM
for the apical dend is different
salvadord 4:30 PM
basal ~= 1e-6, tuft ~= 0.006 (mho/cm^2)
billl 4:31 PM
how about ih in soma? -- no sag in soma?
sergio 4:32 PM
ih is inserted in the soma also in the eee7 cell, with the same as gbar_h
salvadord 4:34 PM
soma ~= basal
penny 4:37 PM
Cool! Thanks! I will try the same value
billl 4:37 PM
how much % sag do we get from this ih value @sergio ?
4:38
the thick-tufted cells show ~20% sag but thintufted much less
sergio 4:38 PM
let me measure that

Now the plan is to check sag potential at eee7.py cell

** measuring sag potential

iclamp in soma set to  -0.2 to induce larger sag

plotting to check time where sag is larger
[[./gif/tr_trace_V_somaaces_sag.png]]

check lowest value:
x = sim.allSimData['V_soma'].cell_1
y = min(float(s) for s in x)

lowest volt value:
-99.3

volt at end of sim:
-92.4

Iclamp amp 0.0, volt end of sim:
-72.7

sag potential = 6.9 mV
total volt change = 26.6 mV

% sag potential = 25.9%

** discussion sag potential

billl [5:15 PM] 
so very big

[5:16] 
guess we should cut that down -- maybe aim for 5-10% ? -- what did srdjan think for soma injections penny?  did he happen to give us any of that in his figs? (would guess not) ; does he ahve an example easy to find in his papers?

** looking for examples on papers from srdjan 

Ih currents on maki paper model of L5 neuron.
[[./gif/maki2018.png]]
columns:
lower/upper/fullmodel

path to paper:
/u/sergioangulo/papers/maki2018.pdf

srdjan experiment and sag potential:

[[./gif/oikonomou2012.png]]
but no measurement of Ih currents.

path to paper
/u/sergioangulo/papers/oikonomou2012.pdf

** discusion of sag potentials from srdjan figure

what do u guys mean by sag potential? Sorry, I didn't follow
sergio 6:01 PM
the experiment was not aimed to study Ih or sag potentials, but he can see the sag
penny 6:02 PM
The hyperpolarization in the figure is for mg blocking, what is sag?
sergio 6:03 PM
the insert on section b labels the sag potential
6:04
sag potential is induced by the Ih current
billl 6:05 PM
~what % ?
penny 6:05 PM
I see. Thanks
billl 6:05 PM
loks pretty minimal
sergio 6:08 PM
~15-20%
6:11
but to be sure is better to ask srdjan for some data, probably he has some some cell already recorded where he can measure the sag
penny 6:14 PM
He is not here now. Yay, Lets ask him
billl 6:17 PM
you are measuring 15% off of that fig?  -- did you digitize it? -- guess pretty hard to see
sergio 6:22 PM
no, I’m doing something very very very rudimentary, taking a piece of paper over the screen and comparing the scale bar to the amplitudes of the volt traces
billl 6:24 PM
wow -- real old time
new messages
6:24
anyway seems like pretty similar to what gordon shepherd gets for the thick tufted

* 10-23-17, running eee7ps cell

Goal: start working with the eee7s cell model

** discussion about the reduced cell models

	
billl 10:14 AM
do you and joe have an agreed on cell at this point?
10:14
can you get a plateau?
sergio 10:15 AM
We need agree with joe about the cell
billl 10:16 AM
yes, until have a cell then you'll just have to repeat everything anyway -- eg could find some interesting results with different stim but might not be same in a diff model
joe 10:16 AM
eee7ps is the cell with physiologically distributes spines, and gets plateaus.
billl 10:16 AM
you were going to set up to be similar retulst to penny's using same channels
10:17
does eee7ps have that now?
10:17
also same NMDA, same AMPA
joe 10:18 AM
Just got Penny’s model and experiment replicated in Netpyne.  Right now I’m making sure all the params are set to the same values so I can compare results.
billl 10:18 AM
so what can sergio do at this point to help?
10:20
sergio -- did you fix leak, ih, rall for ee7ps?  -- use those numbers in joe's new cell?
joe 10:21 AM
I should be done with this in about an hour.  Sergio, if you want to start playing around with eee7ps parameters and exploring results, I’ll get you values as soon as I can.
billl 10:21 AM
or sergio maybe time to get back to the network sim and just try to setup the sims you want to run -- you can run for now with the current model but plan would be to set up so that could run again once get the new model?
sergio 10:21 AM
I haven’t worked with the eee7ps.py cell yet, I did it with the eee7.py cell
billl 10:21 AM
need a plan for how to demonstrate the EEE hypo in a network sim
10:21
(what does the ps stand for?  in eee7ps )
joe 10:22 AM
Physiologically-distributed spines (as opposed to eee7us — uniform spines)
10:23
I’m open to renaming.  :wink:
billl 10:25 AM
oh ok thought big difference now was having new channels in there but guess that will eventualy be in both ps and us
sergio 10:25 AM
for the network, are we going to use both cells (eee7 and eee7ps)?
billl 10:25 AM
we can just keep the prior one in versioning and not as sep files
10:25
no we will just use whatever penny and joe using
10:25
but sounds like ps is not the point here
10:25
also would include some of penny's complex cells in `hybrid network`
10:26
no reason to have new files for these cells -- just use versioning
10:26
else end up with a bunch of obsolete files in the directory which is confusing
sergio 10:28 AM
so Joe, the best is to start working with the eee7ps?
joe 10:28 AM
Yeah, start working with that.
10:28
That’s the cell model we’ll move forward with.
billl 10:28 AM
does it work at all yet joe?
joe 10:29 AM
Yeah, eee7ps should work fine.
billl 10:29 AM
k
joe 10:29 AM
Let me know if/when you have any problems, Sergio.
sergio 10:29 AM
ok

** checking the eee7ps cell model:

cell added to repo at:

/u/sergioangulo/projects/eee/sim/cells/eee7ps.py

** importing cell model in netpyne

cellRule = netParams.importCellParams(label='PT5_reduced', conds={'cellType': 'PT5B', 'cellModel': 'HH_reduced'}, 
      fileName='../cells/eee7ps.py', cellName='eee7ps')

** from joe's repo. Setting the spine number and netstim in netparams

cellRule['secLists']['alldend'] = ['Bdend1', 'Bdend2', 'Adend1', 'Adend2', 'Adend3']
cellRule['secLists']['apicdend'] = ['Adend1', 'Adend2', 'Adend3']
cellRule['secLists']['basaldend'] = ['Bdend1', 'Bdend2']
cellRule['secLists']['stimheads'] = []
cellRule['secLists']['stimnecks'] = []

numActiveSpines = cfg.glutSpread
spine_glut_delay  = np.ones(numActiveSpines)
shaft_glut_delay  = spine_glut_delay + cfg.spillDelay * np.ones(numActiveSpines)

indWeightNMDA = cfg.glutAmp / cfg.glutSpread
activeSpineNums = cfg.glutSpine + np.arange(cfg.glutSpread)
activeSpineHeads = ["head_" + str(num) for num in activeSpineNums]
activeSpineNecks = ["neck_" + str(num) for num in activeSpineNums]

spine_NMDA_weight = [indWeightNMDA for head in activeSpineHeads]
shaft_glut_weight = [indWeightNMDA * cfg.spillFraction for neck in activeSpineNecks]

if cfg.addNetStim:
    
    for nslabel in [k for k in dir(cfg) if k.startswith('NetStim')]:
        ns = getattr(cfg, nslabel, None)

        if ns['sec'] == 'spineheads':
            ns['sec']  = list(activeSpineHeads)
            cur_weight = list([cfg.glutAmp / cfg.glutSpread for head in activeSpineHeads])
            cur_loc    = 0.99999
            cur_delay  = list(spine_glut_delay)
        elif ns['sec'] == 'spinenecks':
            ns['sec']  = list(activeSpineNecks)
            cur_weight = list(shaft_glut_weight)
            cur_loc    = 0.00001
            cur_delay  = list(shaft_glut_delay)
        else:
            print("######################################################")
            print("NetStim sec needs to be 'spineheads' or 'spinenecks'")
            print("######################################################")

        # add stim source
        netParams.stimSourceParams[nslabel] = {'type': 'NetStim', 'start': ns['start'], 'interval': ns['interval'], 'noise': ns['noise'], 'number': ns['number']}

        # connect stim source to target
        for i in range(len(ns['synMech'])):
            if ns['synMech'][i] == 'AMPA': 
                cur_weight = list(np.array(cur_weight) * cfg.ratioAMPANMDA)
            for curpop in ns['pop']:
                netParams.stimTargetParams[nslabel+'_'+curpop+'_'+ns['synMech'][i]] = \
                    {'source': nslabel, 'conds': {'pop': ns['pop']}, 'sec': ns['sec'], 'synsPerConn': numActiveSpines, 'loc': cur_loc, 'synMech': ns['synMech'][i], 'weight': cur_weight, 'delay': cur_delay}

** netstim and spine number params from cfg.py

###############################################################################
# Parameters
###############################################################################

cfg.NMDAAlphaScale = 1.0 # Scales original value of 4.0
cfg.NMDABetaScale  = 1.0 # Scales original value of 0.0015

# DMS NMDA params
cfg.CdurNMDAScale = 1.0   # Scales original value of 1.0
cfg.CdurNMDAesScale = 1.0 # Scales original value of 1.0

cfg.CmaxNMDAScale = 1.0
cfg.CmaxNMDAesScale = 1.0

# Other params
cfg.ratioAMPANMDA = 2.0
cfg.glutAmp = 0.1 

# glutLoc should be a spine number (0 to 255)
# glutSpread should be the number of spines to spread to 
#  (starts at glutLoc spine and increases; shouldn't come to > spine 255)
cfg.glutSpine     = 50
cfg.glutSpread    = 1

#cfg.recordTraces['V_spine'] = {'sec': 'head_'+str(cfg.glutSpine), 'loc': 0.5, 'var': 'v'}

# spillDelay is time to reach dendritic shaft in ms
# spillFraction is the percentage of weight reaching the dendritic shaft
cfg.spillDelay    = 10.0
cfg.spillFraction = 0.0

#------------------------------------------------------------------------------
# NetStim inputs 
#------------------------------------------------------------------------------
cfg.addNetStim = 1

cfg.NetStim1 = {'pop': ['eee7us'], 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 200, 'interval': 1000, 'noise': 0.0, 'number': 1, 'weight': [cfg.glutAmp/cfg.glutSpread, cfg.glutAmp*cfg.ratioAMPANMDA/cfg.glutSpread], 'delay': 1.0}

cfg.NetStim2 = {'pop': ['eee7ps'], 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 200, 'interval': 1000, 'noise': 0.0, 'number': 1, 'weight': [cfg.glutAmp/cfg.glutSpread, cfg.glutAmp*cfg.ratioAMPANMDA/cfg.glutSpread], 'delay': 1.0}

** error message running sim, eee7s needs batch_utils

/u/sergioangulo/projects/sergeee/eee/sim/cells/eee7ps.py in <module>()
      9 from math import exp,log
     10 import numpy as np
---> 11 from batch_utils import getspineLocs
     12 
     13 Vrest       = -88.5366550238

ImportError: cannot import name getspineLocs

I will ask Joe for it

** Ih mod files comparissons 
	
penny 11:40 AM
@salvadord Hey Salva, for the ih channel, are we using the mod file from migliore? h_migliore.mod?
salvadord 11:41 AM
I am for M1, but not sure if you need for yours — I discussed with joe a while ago
penny 11:44 AM
Let me check what is Joe using
billl 11:45 AM
he's using the old one we had
11:46
maybe we should all update to the new one so can test some of those TASK effects later (was just discussing with salva wihat TASK is -- still not so clear to me  but anyway idea is that has a voltage independnt component of varying size)
11:47
@joe - think he went running but can check with him when he comes back;  @sergio - maybe give a try with that channel and see if makes any difference; prob won't since by default that TASK part is tunred off anyway

simulation with h_kole  (Rm factor =1.0):
amp 0.4, start 100ms, dur 800ms
[[./gif/tr_trace_V_somaaces_ihkole.png]]

h_migliore path:
/usr/site/nrniv/local/mod/h_migliore.mod

copied file to mod dir on wd.

name on mod file:
THREADSAFE SUFFIX hd

added to parameter.multi:
DEFAULT h_migliore

h_migliore parameters for eee7.py
erev as ehd
gbar_h as gbar_hd

compiled and check running sim with iclamp (Rm factor =1.0)

amp 0.4, start 100ms, dur 800ms
[[./gif/tr_trace_V_somaaces_ihmigliore.png]]

same number of spikes, slightly higher fre  on h_kole 

** discussion Ih mechs --decision to use h_migliore as the Ih model for eee

	
salvadord 1:01 PM
h_migliore depends a lot on the params you use
1:02
you can tweak to move fI curve around
sergio 1:02 PM
I used the same ones as for the h_kole
billl 1:02 PM
not sure fi curve so useful (for anyone but surely not for us)
salvadord 1:02 PM
I’ve ran many sims to find a compromise between fI curves and the ih effects on spiking we wanted to reproduce
billl 1:02 PM
in any case the diff in the migliore model is completely turned off
1:02
not an issue not -- something we could insert now to use later
1:03
mostly want to use it for consistency across our models so when later we want to reconcile findings across models will be less difficult
1:03
same reason i wanted all 3 of us EEE models to use same mechs
salvadord 1:04 PM
sounds good
sergio 1:04 PM
ok

joe 1:20 PM
Okay, so @sergio, @penny, and @joe should all switch to the h_migliori mod file for ih?

sergio
only depends if h_milgliore has some advantages over the h_kole
billl 1:34 PM
yes has advantage -- uses associated TASK
billl 1:35 PM

joe 1:42 PM
Okay, so let’s all switch to `/usr/site/nrniv/local/mod/h_migliore.mod`
1:42
This mod uses `SUFFIX hd`, so be sure to change that in your code.
billl 1:44 PM
also maybe differences in other params so perhaps can just generate the netpyne line for this for everyone to use
salvadord 1:48 PM
netpyne imports from the cell file (eg. PTcell.hoc) so just need to use right channel (‘hd’) there
1:48
if want to modify params can do directly in cell file, or in netpyne after import
penny 1:57 PM


** importing eee7ps error part 2, (solved)

should I move batch_utils in the dir where I run the sims?
joe 1:14 PM
Hmmm…  I used to create a symlink to `batch_utils` and `batch_analysis` wherever I needed them.
sergio 1:14 PM
ok let me try that
joe 1:15 PM
But recently, I added the eee/sim dir to my Python path, which makes it much easier.
1:16
In my .tcshrc file:
1:16
setenv PYTHONPATH /u/graham/projects/eee/sim:$PYTHONPATH
1:16
So now I can import batch_utils and batch_analysis from anywhere.

now, I'm going to setup path on pythonpath 

check python path:
>>> os.environ['PYTHONPATH'].split(os.pathsep)
['/u/sergioangulo/projects/eee/sim', '/usr/site/nrniv/local/python/netpyne', '/usr/site/python', '/usr/site/nrniv/local/python/netpyne', '/usr/site/../arch/nrn/lib/python', '/usr/site/../arch/nrn/share/nrn/lib/python/neuron', '/usr/site/nrniv/local/python']

Joe suggested to check echo $PYTHONPATH

Bill, also suggested to do in python:
import sys
sys.path

Dir is part of the pythonpath

check if batch_utils is in dir:

it is there.

Bill suggested to create a test file in dir, only needs to have:
print "hello"

opened python, imported test file, and it is working.

joe suggested to do only import batch_utils on eee7ps.py

get different error message

Joe checked the repo.

Opened python and imported batch_utils. It is importing fine.

Then Joe suggested to add __init__.py to eee/sim

added but have same error.

tried import batch_utils at home dir and worked

created a new dir and copied all files from sim/detailedCell

Tried again to run batch_utils and worked.

I have a copy of batch_utils in the local dir, and it was the problem.

deleted this file in singlecell and now runs fine. 

** eee7ps cell model

Running cell with parameters from joe:

[[./gif/tr_trace_V_somaaces_eee7ps.png]]
cfg.NMDAAlphaScale = 1.0 # Scales original value of 4.0
cfg.NMDABetaScale  = 1.0 # Scales original value of 0.0015

cfg.CdurNMDAScale = 1.0   # Scales original value of 1.0
cfg.CdurNMDAesScale = 1.0 # Scales original value of 1.0

cfg.CmaxNMDAScale = 1.0
cfg.CmaxNMDAesScale = 1.0

cfg.ratioAMPANMDA = 2.0
cfg.glutAmp = 0.1 

cfg.glutSpine     = 50
cfg.glutSpread    = 1

cfg.spillDelay    = 10.0
cfg.spillFraction = 0.0

cfg.NetStim1 = {'pop': ['PT5_reduced'], 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 200, 'interval': 1000, 'noise': 0.0, 'number': 1, 'weight': [cfg.glutAmp/cfg.glutSpread, cfg.glutAmp*cfg.ratioAMPANMDA/cfg.glutSpread], 'delay': 1.0}

* 10-24-17

** meeting

*** joe showing sims with temp at 32C and 34C of the detailed model. depol block occurs at 34C.
*** at the discusion, we are going to use 32C for the rest of the sims.
*** bill and mh pointed out that q10 is not an adequate parameter to model kinetics changes affected by temp.
*** srdjan suggested to use smaller gmax, like penny's values
*** srdjan suggested to study the cdur on a single compartment cell
*** srdjan suggested not to include the ih in the detailed cell
*** joe asked about stim param from penny's model, cdur changes 100 times after weight. Check this for future sims. 

** adding h_migliore to eee7ps cell model

h.ehd_hd = -37.0
gbar_hd = 0.000140956438043 

[[./gif/tr_trace_V_somaaces_eee7s_hmigliore.png]]


** setting parameters from joe's sim

looking for params from joe.

weight: 0.08
[[./gif/model_output_traces_weight008.png]]

weight: 0.07
[[./gif/model_output_traces_weight007.png]]


** include new changes for detailed model for q10

kadist q10  was changed 
updated repo from penny.

** ih will be removed from the reduced cell

Bill and Joe discussed, and Ih wont be added to ee7ps model

** check values for Rin on eee7ps

*** ih included

iclamp amp: -0.1
soma
-86.0

iclamp amp: 0.0  
soma
-80.1

Rin soma: 59 


iclamp amp: -0.1
bdend
-88.1

iclamp amp: 0.0
bdend
-80.1

bdend
Rin: 80.0

*** removing ih

iclamp amp = 0.0 
bdend
-84.0

iclamp amp = -0.1
bdend
-92.1

Rin bdend = 81

iclamp amp = 0.0
soma
-84.2

iclamp amp = -0.1
soma
-90.3

Rin soma = 61

*** removed ih and increased Rm by factor of 10.0

iclamp amp = 0.0
soma
-79.4

iclamp amp =-0.1
soma
-91.3

Rin soma = 119

iclamp = 0.0
bdend
-79.2

iclamp = -0.1
bdend
-93.0

Rin basal = 138

Basal dend is too different from detailed model

** checking stim with new Rin and Ih. Increasing Rin longer plateaus

sim with increased Rin (soma: 119, basal: 138), no ih, T 34C,  glut weight 0.07
[[./gif/model_output_traces_weight007_highRin_noIh.png]]

sim high Rin, ih, T34C, glut weight 0.07 
[[./gif/model_output_traces_weight007_highRin_Ih.png]]

sim normal Rin, no ih, T 34C, weight 0.07
[[./gif/model_output_traces_weight007_T34C_noih.png]]

sim normal Rin, ih, T 34C, weight 0.07
[[./gif/model_output_traces_weight007_T34C.png]]

increasing Rin, induced longer plateaus
removing Ih, shortened the plateaus

* 10-25-17 change stim to spine by loc and added spillover

goal: get params for stim similar between reduced and detailed cell

** modification of NMDA gmax to 0.05

NMDA gmax was modified to 0.05 and AMPA/NMDA ratio was set to 2.0
Weight to induce a plateau was 0.06
Sims were run at 34C, no Ih, high Rin.
[[./gif/model_output_traces_weight006_gmax005.png]]

** checking stim params from the detailed model on netpyne by Joe

on eee joe's repo path:

/u/graham/projects/eee/sim/penny/eee_detailed_model/netpyne/batch_params/cfg.py
/u/graham/projects/eee/sim/penny/eee_detailed_model/netpyne/batch_params/netParams.py

*** changes on cfg.py

# glutamate and spillover parameters for Penny's model
cfg.syn_num        = 8 
cfg.syn_weight     = 1.0
cfg.syn_startloc   = 0.5
cfg.syn_endloc     = 0.7
cfg.syn_delay      = 10.0

cfg.exsyn_num      = 8
cfg.exsyn_weight   = cfg.syn_weight
cfg.exsyn_startloc = 0.4
cfg.exsyn_endloc   = 0.7
cfg.exsyn_delay    = 10.0

cfg.syn_locs   = list(np.linspace(cfg.syn_startloc, cfg.syn_endloc, cfg.syn_num))
cfg.exsyn_locs = list(np.linspace(cfg.exsyn_startloc, cfg.exsyn_endloc, cfg.exsyn_num))

cfg.addNetStim = 1

# Synaptic glutamate (NMDA and AMPA)
cfg.NetStim1 = {'pop': 'PT5', 'synsPerConn': cfg.syn_num, 'loc': cfg.syn_locs, 'sec': 'basal_34', 'synMech': ['NMDA','AMPA'], 'start': 100, 'interval': 10, 'noise': 0.0, 'number': 1, 'weight': [cfg.syn_weight, cfg.syn_weight], 'delay': cfg.syn_delay}

# Extrasynaptic glutamate (NMDA)
cfg.NetStim2 = {'pop': 'PT5', 'synsPerConn': cfg.exsyn_num, 'loc': cfg.exsyn_locs, 'sec': 'basal_34', 'synMech': ['NMDA'], 'start': 100, 'interval': 10, 'noise': 0.0, 'number': 1, 'weight': [cfg.exsyn_weight], 'delay': cfg.exsyn_delay}

*** changes on netParams:

if cfg.addNetStim:
    
    for nslabel in [k for k in dir(cfg) if k.startswith('NetStim')]:
        ns = getattr(cfg, nslabel, None)

        # add stim source
        netParams.stimSourceParams[nslabel] = {'type': 'NetStim', 'start': ns['start'], 'interval': ns['interval'], 'noise': ns['noise'], 'number': ns['number']}

        # connect stim source to target
        for i in range(len(ns['synMech'])):
            netParams.stimTargetParams[nslabel+'_'+ns['pop']+'_'+ns['synMech'][i]] = \
                {'source': nslabel, 'conds': {'pop': ns['pop']}, 'sec': ns['sec'], 'synsPerConn': ns['synsPerConn'], 'loc': ns['loc'], 'synMech': ns['synMech'][i], 'weight': cfg.syn_weight, 'delay': ns['delay']}

*** dicussion about activation of spines in the eee7ps model (using spine number for sim until here)

if implemented on eee7ps, needs to active a number of spine for the synaptic, and the shaft for the extrasynatic
 
asked about in the slack eee channel:

Joe, in the eee7ps cell model,  can you modify the location of the spine along the basal dend?
billl 1:01 PM
1 spine?  thought many spines?
sergio 1:01 PM
many spines
joe 1:02 PM
255 spines.
billl 1:02 PM
ah; ok good
joe 1:02 PM
What do you want to do by moving spines?
billl 1:03 PM
if 255 prob pretty much filled up i would think?
joe 1:03 PM
Pretty filled up.  Basal dendrite is only 200 um long, so average interspine distance is less than a micron.
sergio 1:04 PM
just thinking about the stim in the detailed cell model, these were located in a region of the basal dend (0.4 to 0.7)
joe 1:06 PM
It’s easy to set the model such that spines between 0.4 and 0.7 are activated, without actually moving any spines.
1:07
cfg.glutLoc    = 0.3    # fraction of branch, not microns
cfg.glutSpread = 10.0   # microns, diameter of glutamate puff
sergio 1:08 PM
thanks joe
joe 1:09 PM
So to activate spines between 0.4 and 0.7, you can set cfg.glutLoc = 0.55, and cfg.glutSpread = 60 (0.3*200um)
sergio 1:10 PM
perfect!
salvadord 1:10 PM
nice
sergio 1:10 PM
I will try that
joe 1:11 PM
1:12
Be careful of:
cfg.glutDelay  = 1.0    # ms/um delay in glutamate activation
cfg.glutDecay  = 10.0   # %/um decrease in glutamate amplitude
1:12
If you want the same time/amp of stim at all spines you should set these values to zero.
sergio 1:13 PM
ok 
 
still asked joe about the spine set up

There are  255 spines in the basal dend, 0 closest to the soma, 254 the most distant to the soma

if cfg.glutSpine = 50 and cfg.glutSpread, means that only one spine is activated and it is the number 50.

to pick spine by location needs to check joe's code
To pick by location, you can use the code in batch_glutdyn (/u/graham/projects/eee/sim/batches/batch_glutdyn/).  Settings are in cfg.py and the implementation is in netParams.py.

** spine by location

*** modifications on cfg.py

#------------------------------------------------------------------------------
# Parameters Sodium and potassium conductance scaling
#------------------------------------------------------------------------------
cfg.dendNaScale = 1.0 # Scales dendritic Na conductance
cfg.dendKScale  = 1.0 # Scales dendritic K  conductance
cfg.allNaScale  = 1.0 # Scales all Na conductances (overrides dendNaScale if not commented)
cfg.allKScale   = 1.0 # Scales all K  conductances (overrides dendKScale  if not commented)

#------------------------------------------------------------------------------
# Parameters AMPA, NMDA, AMPA/NMDA ratio
#------------------------------------------------------------------------------
# DMS NMDA params
cfg.NMDAAlphaScale = 1.0 # Scales original value of 4.0
cfg.NMDABetaScale  = 1.0 # Scales original value of 0.0015
cfg.CdurNMDAScale  = 1.0 # Scales original value of 1.0
cfg.CmaxNMDAScale  = 1.0 # Scales original value of 1.0
cfg.NMDAgmax       = 0.05
cfg.ratioAMPANMDA  = 2.0

# glutamate stim parameters
cfg.glutAmp    = 0.1  # weight supplied to NMDAr and AMPAr
cfg.glutLoc    = 0.55    # fraction of branch, not microns
cfg.glutSpread = 20.0   # microns, diameter of glutamate puff
cfg.glutDelay  = 0.0    # ms/um delay in glutamate activation
cfg.glutDecay  = 0.0   # %/um decrease in glutamate amplitude 
 

# spillover params
cfg.spillDelay    = 10.0 # (ms) time to reach dendritic shaft
cfg.spillFraction = 0.0  # (%)  percent of glutamate weight that reaches shaft

cfg.NetStim2 = {'pop': ['PT5_reduced'], 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 200, 'interval': 1000, 'noise': 0.0, 'number': 1, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}

*** modifications on netparams

#------------------------------------------------------------------------------
# NetStim inputs
#------------------------------------------------------------------------------

if cfg.addNetStim_eee7ps:  

    for nslabel in [k for k in dir(cfg) if k.startswith('NetStim')]:
        ns = getattr(cfg, nslabel, None)

        cur_pop = ns['pop'][0]

        activeSpineHeads = activeSpines[cur_pop]['activeSpineHeads']
        activeSpineNecks = activeSpines[cur_pop]['activeSpineNecks']
        numActiveSpines = len(activeSpineHeads)

        spineWeights = activeSpines[cur_pop]['spineWeight']
        spineDelays = activeSpines[cur_pop]['spineDelay']

        if ns['sec'] == 'spineheads':
            ns['sec']  = activeSpineHeads
            cur_weight = spineWeights #[cfg.glutAmp for head in activeSpineHeads]
            cur_loc    = 0.99999
            cur_delay  = spineDelays #[cfg.glutDelay for head in activeSpineHeads]
        elif ns['sec'] == 'spinenecks':
            ns['sec']  = activeSpineNecks
            cur_weight = [cfg.glutAmp * cfg.spillFraction for neck in activeSpineNecks]
            cur_loc    = 0.00001
            cur_delay  = [cfg.glutDelay + cfg.spillDelay for neck in activeSpineNecks]
        else:
            print("######################################################")
            print("NetStim sec needs to be 'spineheads' or 'spinenecks'")
            print("######################################################")

        # add stim source
        netParams.stimSourceParams[nslabel] = {'type': 'NetStim', 'start': ns['start'], 'interval': ns['interval'], 'noise': ns['noise'], 'number': ns['number']}

        # connect stim source to target
        for i in range(len(ns['synMech'])):
            netParams.stimTargetParams[nslabel+'_'+cur_pop+'_'+ns['synMech'][i]] = \
                {'source': nslabel, 'conds': {'pop': ns['pop']}, 'sec': ns['sec'], 'synsPerConn': numActiveSpines, 'loc': cur_loc, 'synMech': ns['synMech'][i], 'weight': cur_weight, 'delay': cur_delay}

        print
        print("===============================================")
        print("cur_pop   = %s" % (cur_pop))
        print("glutAmp   = %f" % (cfg.glutAmp))
        print("glutLoc   = %f" % (cfg.glutLoc))
        print("numSpines = %f" % (numActiveSpines))
        print
        zipped = zip(activeSpineHeads, cur_weight, cur_delay)
        zipped.sort(key = lambda x: x[0])
        for spine, weight, delay in zipped:
            print(spine)
            print("  weight (%%) = %f" % (100*weight/cfg.glutAmp))
            print("  delay (ms) = %f" % (delay))
        print("===============================================")

*** running sims 

modified NMDA gmax to 0.05
cfg.glutAmp    = 0.1  
cfg.glutLoc    = 0.55   
cfg.glutSpread = 10.0   
cfg.glutDelay  = 0.0   
cfg.glutDecay  = 0.0  
[[./gif/model_output_traces_spinebyloc_weight01_loc055_sprd10_gmax005.png]]


changed cfg.glutSpread to 60.0, to match penny's experiments.
glutAmp = 0.017
[[./gif/model_output_traces_spinebyloc_sprd60.png]]
89 spines were activated

cfg.glutAmp    = 0.105#0.017  # weight supplied to NMDAr and AMPAr
cfg.glutLoc    = 0.55    # fraction of branch, not microns
cfg.glutSpread = 60.0   # microns, diameter of glutamate puff
cfg.glutDelay  = 1.0    # ms/um delay in glutamate activation
cfg.glutDecay  = 10.0   # %/um decrease in glutamate amplitude 
[[./gif/model_output_traces_spinebyloc_sprd60_glutdelay1_glutdecay10.png]]


*** added  NMDA stim to basal dend shaft 

added 4 netstim to the shaft of the basal dend with only NMDA (loc 0.4 to 0.7)
setting glut delay and decay to 0.0
glut amp: 0.005 
[[./gif/model_output_traces_spinebyloc_spillover.png]]
it produces better plateau


* 10-26-17

** discussion about spillover on eee slack
	
sergio 5:47 PM
Joe, another question, how do the params for glut spread work?
5:48
I mean the extrasynatic
joe 6:02 PM
There are two parameters that control the spillover glutamate:
6:02
# spillover params
cfg.spillDelay    = 10.0 # (ms) time to reach dendritic shaft
cfg.spillFraction = 0.0  # (%)  percent of glutamate weight that reaches shaft
6:03
The spillFraction is the percent of glutamate (syn weight) that reaches the dendritic shaft (set at zero, there is no spillover).
6:04
The spillDelay is an additional delay (on top of delay to reach spine) to reach the dendritic shaft.
joe 6:05 PM
commented on sergio’s file glut loc 0.55, spread 60
This is interesting in that Srdjan was looking for a “plateau within a plateau” at the beginnings of a plateau that he sometimes sees experimentally…
sergio 6:09 PM
nice! so for our model, we normally keep the spillFraction at 0 or close to 0?
joe 6:13 PM
Good question.  I haven’t had much time to explore spillover yet, and I’m not totally sure what a reasonable value would be.
6:14
It’d be good to get suggested values from Srdjan and Penny.
sergio 6:18 PM
ok
penny 7:24 PM
I don't have much insight either. I am using same amount of NMDA on dendritic shaft and on spines for now. Let me ask him tomorrow
Today
billl 9:27 AM
spill should be high for the activated dend -- that's what makes it activated; spill would be 0 for the other basilar dends

** included recording of spine head and reduced spillover weight by 0.3

[[./gif/model_output_traces_spinebyloc_spillover03.png]]
glut amp 0.0055
spillover reduced by 0.3

** review literature for spillover

/u/sergioangulo/papers/hires2008.pdf

check notes on:  
/u/sergioangulo/papers/papers.dol
header: hires 2008


** discusion about tau memb during plateau


billl [3:39 PM] 
added this Perl snippet: urgent query from srdjan -- tau_memb during plateau
We here reconsider current theories of neural ensembles in the context of recent discoveries about neuronal dendritic physiology. Our central hypothesis is that synaptically-evoked dendritic plateau potentials (a plateau), mediated by NMDA receptors, lead to an activated, prepared, state of a neuron that favors spike generation. The plateau both depolarizes the cell towards spike threshold, and provides faster response to inputs through a shortened membrane time constant. The key physiological observation is that the dendritic plateau potential produces sustained somatic depolarizations. Our hypothesis relates this cellular change to changes in ensemble dynamics and in network information flow. The plateau provides the Prepared state with a time window of 200-500 ms. During this time a neuron can tune into ongoing network activity and synchronize spiking with other neurons to provide a coordinated Active state which would permit "binding" of signals through coordination of neural activity across a population. The transient Active ensemble is embedded in the longer-lasting Prepared ensemble of neurons. We hypothesize that "embedded ensemble encoding" may be an important organizing principle in networks of neurons.
​
​
I am no longer certain that dendritic plateau potential shortens membrane time constant thus serving synaptic inputs impinging on neighboring dendrites. Bill, could you determine in a model if this idea about TAU is true or false? If false, we need to delete membrane time constant from discussions.

sergio [3:48 PM] 
so for membrane time constant, we need to modify Rm and Cm, right?

billl [3:49 PM] 
no

joe 
[3:49 PM] 
Time constant = Cm * Rin

billl [3:49 PM] 
he's asking for tau_memb during plateau compared to tau_memb at rest

[3:49] 
test Rin and taumemb both with brief neg current inj

[3:50] 
time constant != Cm*Rm during plateau

[3:50] 
(you mean Rm i think)

joe [3:51 PM] 
Whoops.

billl [3:51 PM] 
np -- main point is that we need to test even at rest not Cm*Rm since have other channels there that have vdepend so changes apparent Rin and taumemb

[3:52] 
eg esp ih thought we took that out for now

joe 
[3:52 PM] 
We took out ih.

[3:55] 
time constant != Cm*Rm during plateau

[3:56] 
But how do we measure effect of current injection during plateau?


billl [3:57 PM] 
multiple brief neg current inj

[3:57] 
at RMP and then during plateau

[3:57] 
we measure; we don't calculate -- can calc too out of curiosity and compare

[3:58] 
note that taum != Rm*Cm in presence of dends -- have higher order corrections -- taum doesn't even exist really since not a single exponential

[3:58] 
but we still measure it

joe [3:59 PM] 
I’m heading out to lunch, but I’ll give it a go when I get back.

billl [4:04 PM] 
thx

sergio [4:04 PM] 
what we are going to measure is not a real taum, but an aprox to it?

billl [4:05 PM] 
there is no real taum - it's a fiction

[4:06] 
it implies a single exponential

sergio [4:06 PM] 
ok

[4:06] 
let me start working on it

billl [4:06 PM] 
great

** measuring tau membrane at RMP and during plateau

*** plateau 
run sim for 450 ms
plateau stim start at 200 ms
iclamp start at 225 ms

iclamp amp -0.3 nA
soma
-99.8

iclamp amp -0.4 nA
soma
-106.7

rin soma plateau: 69 

iclamp amp -0.3 nA
basal dend
-106.3

iclamp amp -0.4 nA
basal dend
-113.9

Rin basal dend plateau: 76 

*** no plateau
iclamp amp -0.1 nA
basal dend
-92.7

iclamp amp 0.0
basal dend
-79.1

Rin basal at RMP: 136

iclamp amp -0.1
soma
-90.9

iclamp amp 0.0
soma
-79.2

Rin soma at RMP: 117 

*** tau memb results
Reduced cell ee7ps
soma Rin at RMP: 117.0 MOhm
basal Rin at RMP: 136.0 MOhm
soma Rin during plateau: 69.0 MOhm
basal Rin during plateau: 76.0 MOhm
soma memb time constant at RMP: 209.2 us
basal memb time constant at RMP: 258.1 us
soma memb time constant during plateau: 123.4 us
basal memb time constant during plateau: 144.2 us
 
*** discussion

bill was expenting measuring the memb decay constant, but not using taum = Rm*Cm
now working with joe to get the results.

* 10-27-17

** checking repo for Rachel

cloning repo on ~/projects/test
compiling 
running sim on eee/sim/detailedCell
worked
updated README.txt

explained to Rachel how to clone, compile and change .tchrc 
she is working at neurosim.


** working with joe to measure Taum

joe wrote code to control ih and rm from cfg and netParams.

now controls ih from  cfg.py with:

cfg.ihScale     = 0.0 # Scales ih conductance

and RM scale factor:

cfg.RmScale    = 10.0

set Vrest to -75 mV. Original value: -88.5366550238 

no spillover
change firing of the cell:
[[./gif/model_output_traces_Vrest75.png]]
glut amp: 0.015

going back to -88 mV
[[./gif/model_output_traces_Vrest88.png]]
glutamp: 0.015

checking parameters with stim to only one head
[[./gif/model_output_traces_onehead_glutamp007_noih_lowRin.png]]
Temp = 34C
cfg.NMDAAlphaScale = 1.0 # Scales original value of 4.0
cfg.NMDABetaScale  = 1.0 # Scales original value of 0.0015
cfg.CdurNMDAScale  = 1.0 # Scales original value of 1.0
cfg.CmaxNMDAScale  = 1.0 # Scales original value of 1.0
cfg.NMDAgmax       = 1.0 #0.05
cfg.ratioAMPANMDA  = 2.0

cfg.glutAmp    = 0.07 #0.015   # weight supplied to NMDAr and AMPAr
cfg.glutLoc    = 0.28    # fraction of branch, not microns (0.28 head number 55)
cfg.glutSpread = 0.7   # microns, diameter of glutamate puff (0.7 only one head)
cfg.glutDelay  = 0.0    # ms/um delay in glutamate activation
cfg.glutDecay  = 0.0   # %/um decrease in glutamate amplitude 

replicating resuts from joe
gmax to 0.05
 
* 10-30-17

Goal: find taum

** checking methods to measure taum with IClamp

injecting neg current 

amp -0.01
[[./gif/model_output_traces_iclamp001.png]] 

amp -0.05
[[./gif/model_output_traces_iclamp005.png]]

if negative current appplied to the system
V(t) = V*e(-t/taum)
taum = 0.63*vmax

if positive:
V(t) = V*(1-e(-t/taum))

idea: fit exponential decay, get max and then 0.63.

** taum at RMP (RMfactor = 1.0), 15.5 ms

checking structure of data:
>>> import pandas as pd
>>> df = pd.DataFrame(some_list, columns=["colummn"])
>>> df.to_csv('list.csv', index=False)

vector for voltage
sim.allSimData['V_soma']['cell_0']

vector for time
sim.allSimData['t']

converted to pandas data frame:

>>> v = sim.allSimData['V_soma']['cell_0'][2250:6000]
>>> t = sim.allSimData['t'][2250:6000]
>>> import pandas as pd
>>> df = pd.DataFrame({'time':t, 'volt': v})
>>> df.to_csv('iclamp.csv', index=False)

needs to define function:

dV = max(v) - min(v)

if taum == t
then:
Vt = max(v) - (dV*(1-np.exp(-1))) 

then taum = t(Vt) - t(start)

Rm scale 1.0
taum for soma at resting =  15.5 ms

** taum during plateau (RMfactor = 1.0), wrong method

stim to induce a plateau:
[[./gif/model_output_traces_plateau_AP.png]]
cfg.glutAmp    = 1.5   # weight supplied to NMDAr and AMPAr
cfg.glutLoc    = 0.28    # fraction of branch, not microns (0.28 head number 55)
cfg.glutSpread = 0.7   # microns, diameter of glutamate puff (0.7 only one head)
cfg.glutDelay  = 0.0    # ms/um delay in glutamate activation
cfg.glutDecay  = 0.0   # %/um decrease in glutamate amplitude 
cfg.NMDAgmax       = 0.05

plateau with no sodium:
[[./gif/model_output_traces_plateau_blockedNa.png]]

plateau plus and iclamp:
[[./gif/model_output_traces_plateau_blockedNa_iclamp02.png]]
iclamp amp: 0.2
iclamp start: 250
 
select 250 to 300ms


>>> v = sim.allSimData['V_soma']['cell_0'][2500:3000]
>>> t = sim.allSimData['t'][2500:3000]
>>> import pandas as pd
>>> df = pd.DataFrame({'time':t, 'volt': v})
>>> df.to_csv('iclamp_platau_rmhigh.csv', index=False)
>>> dV = max(v) - min(v)
>>> import numpy as np
>>> Vt = max(v) - (dV*(1-np.exp(-1)))

V(tm) = -53.91

taum at plateau: 4.9 ms

** taum during plateau (RMfactor = 10.0), wrong method

[[./gif/model_output_traces_plateau_blockedNa_iclamp02_Rm10.png]]

V(tm) = -48.96

taum at platau: 3.7 ms

it appears that this  value is an artifact

** taum at RPM (RMfactor = 10.0), 89.8-101.3 ms

iclamp: -0.05
[[./gif/model_output_traces_RMP_iclamp005_Rm10.png]]
V(tm) = -100.53
taum: 89.8 ms

iclamp: -1.0
[[./gif/model_output_traces_RMP_iclamp1_Rm10.png]]
V(tm) = -411.26
taum: 101.3

iclamp: -1.5
[[./gif/model_output_tracesRMP_iclamp15_rm10.png]]
V(tm) = -574.7
taum: 101.3

** taum at plateau, RMfactor 10.0, 108-105.2 ms  

iclamp: -1.0
[[./gif/model_output_traces_plateau_noNa_Rm10.png]]
V(tm) = -393.4
taum at plateau: 108.0 ms

iclamp: -1.5
[[./gif/model_output_traces_plateau_iclamp15_Rm10.png]]
V(tm) = -555.6
taum at plateau: 105.2 ms


** tau, at plateau, RMfactor 1.0, 19.6-17.5 ms 

iclamp: -1.0
[[./gif/model_output_traces_plateau_noNa_Rm1.png]]
V(tm) = -136.5
taum at plateau: 19.6 ms  

iclamp: -1.5
[[./gif/model_output_traces_plateau_iclamp15_rm1.png]]
V(tm) = -167.8
taum at plateau: 17.5 ms  

** taum, at RMP, RMfactor 1.0,  15.7ms
iclamp: -0.05
[[./gif/model_output_traces_RMP_iclamp005_Rm1.png]]
V(tm) = -91.0
taum at RPM: 15.7

iclamp: -1.0
[[./gif/model_output_traces_RMP_iclamp1_Rm1.png]]
V(tm) = -150.4
taum at RPM: 15.7

iclamp: -1.5
[[./gif/model_output_traces_RMP_iclamp15_rm1.png]]
V(tm) = -181.7
taum at RPM: 15.7

** summarizing 1st part

taum at RMP (Rm factor: 1.0) = 15.7 ms
taum at RMP (Rm factor: 10.0) = 89.8 ms

taum at plateau (Rm factor: 1.0) = 19.6 ms
taum at plateau (Rm factor: 10.0) = 108.0 ms

** discussion with joe

suggested different iclamp amps and times.

** iclamp starting at 300ms, plateau, Rm factor 10.0, 106.7-105.1 ms
 
iclamp amp: -1.0
[[./gif/model_output_traces_plateau300_iclamp1_rm10.png]]
V(tm) = -393.7
taum at RPM: 106.7

iclamp amp: -1.5
[[./gif/model_output_traces_plateau300_iclamp15_rm10.png]]
V(tm) = -555.6
taum at RPM: 105.1

** iclamp starting at 300ms, plateau, Rm factor 1.0, 18.8-17.2 ms

iclamp amp: -1.0
[[./gif/model_output_traces_plateau300_iclamp1_rm1.png]]
V(tm) = -136.7
taum at RPM: 18.8


iclamp amp: -1.5
[[./gif/model_output_traces_plateau300_iclamp15_rm1.png]]
V(tm) = -168.1
taum at RPM: 17.2


** Summarizing 2nd part, 

iclamp amp: -0.05
taum at RMP (Rm factor: 1.0) = 15.7 ms
taum at RMP (Rm factor: 10.0) = 89.8 ms

iclamp amp: -0.1
taum at RMP (Rm factor: 1.0) = 15.7 ms
taum at RMP (Rm factor: 10.0) = 101.3 ms

iclamp amp: -0.15
taum at RMP (Rm factor: 1.0) = 15.7 ms
taum at RMP (Rm factor: 10.0) = 101.3 ms

iclamp amp: -0.1; iclamp starts 50ms after stim
taum at plateau (Rm factor: 1.0) = 19.6 ms
taum at plateau (Rm factor: 10.0) = 108.0 ms

iclamp amp: -0.15; iclamp starts 50ms after stim
taum at plateau (Rm factor: 1.0) = 17.5 ms
taum at plateau (Rm factor: 10.0) = 105.2 ms

iclamp amp: -0.1; iclamp starts 100ms after stim
taum at plateau (Rm factor: 1.0) = 18.8 ms
taum at plateau (Rm factor: 10.0) = 106.7 ms

iclamp amp: -0.15; iclamp starts 100ms after stim
taum at plateau (Rm factor: 1.0) = 17.2 ms
taum at plateau (Rm factor: 10.0) = 105.1 ms

** Taum values are stable at RMP and Rm factor of 1.0

* 10-31-17

goal: taum in the detailed cell model and presenting data in meeting

** taum at RPM with the detailced cell model, 21 ms

iclamp amp: -1.0
[[./gif/model_output_traces_detailed_RPM_iclamp1.png]]
V(tm) = -160.1
taum = 21.1 ms

iclamp amp: -1.5
[[./gif/model_output_traces_detailed_RPM_iclamp15.png]]
V(tm) = -207.3
taum = 21.0 ms

** taum at plateau with the detailed cell model starting at 300ms

plateau
[[./gif/model_output_traces_detailed_netsim_AP.png]]
cfg.syn_num        = 8 
cfg.syn_weight     = 0.06
cfg.syn_startloc   = 0.5
cfg.syn_endloc     = 0.7
cfg.syn_delay      = 0.0

cfg.exsyn_num      = 4
cfg.exsyn_weight   = cfg.syn_weight
cfg.exsyn_startloc = 0.4
cfg.exsyn_endloc   = 0.7
cfg.exsyn_delay    = 0.0

blocked Na:
[[./gif/model_output_traces_detailed_netstim_noAP.png]]

iclamp amp: -1.0
iclamp start at 300 ms
[[./gif/model_output_traces_detailed300_plateau_iclamp1.png]]
V(tm) = -154.3
taum = 23.3 ms

iclamp amp: -1.5
iclamp start at 300 ms
[[./gif/model_output_traces_detailed300_plateau_iclamp15.png]]
V(tm) = -201.4
taum = 21.8 ms

** taum at plateau detailed cell start at 350, 21.6-22.9 ms

iclamp amp: -1.0
iclamp start at 350 ms
[[./gif/model_output_traces_detailed350_plateau_iclamp1.png]]
V(tm) = -154.7
taum = 22.9 ms

iclamp amp: -1.5
iclamp start at 350 ms
[[./gif/model_output_traces_detailed350_plateau_iclamp15.png]]
V(tm) = -201.8
taum = 21.6 ms

** summarizing detailed cell

taum at RMP: 21 ms
taum at plateau: 21.6-23.3 ms

the taum  doesn't change drastically during plateau

** meeting

*** bill suggested to inject smaller neg currents during plateaus
*** srdjan asked why we didn't inject positve currents
*** commented that need to present 2 posters at the sfn

** taum with detailed cell model at plateau

iclamp amp -0.1, iclamp start at 350
[[./gif/model_output_traces_detailed350_plateau_iclamp01.png]]
analyzed region from 350 to 400ms
V(tm) = -56.4
taum = 6.5 ms


iclamp amp -0.1, iclamp start at 350, end at 400 ms
[[./gif/model_output_traces_detailed350_plateau_iclamp01_dur50.png]]
V(tm) = -56.4
taum = 6.5 ms

pre and post plateau iclamp:
[[./gif/model_output_traces_pre_post_plateau_iclamp01.png]]
iclamp pre plateau started at 100 ms, dur: 150 ms, amp -0.1
plateua starts at 450 ms
iclamp during plateau startes at 600ms, dur 50 ms, amp -0.1

taum is faster at plateau

** taum during plateau smaller iclamp  amp with the reduced cell model

iclamp amp -0.2, starts at 250 ms, dur 30 ms
[[./gif/model_output_traces_reduced_plateau_iclamp02.png]]
V(tm) = -53.7
taum = 4.1 ms


iclamp amp -0.2
pre plateau starts at 100ms, dur 100 ms, 
plateau starts at 400
during plateau iclamp starts at 450, dur 30ms
[[./gif/model_output_traces_reduced_plateau_pre_post_iclamp02.png]]

** discussion

bill suggested to do a third a step during the plateau with similar amplitude, change v_init to RMP
and present data to Srdjan
[[./gif/model_output_traces_reduced_1pre_2post_iclamp02.png]]

v_init was modified from netParams:

for cell_label, cell_params in netParams.cellParams.iteritems():

    activeSpines[cell_label] = {}
    activeSpines[cell_label]['activeSpineNecks'] = []
    activeSpines[cell_label]['activeSpineHeads'] = []
    activeSpines[cell_label]['spineDelay']  = []
    activeSpines[cell_label]['spineWeight'] = []

    for secName,sec in cell_params['secs'].iteritems(): 
        sec['vinit'] = -88.12656642859307 #-75.0413649414  # set vinit for all secs

V_init value was used from RMP measured at 0 iclamp or stim.

** taum dring plateau positive current injection

iclamp amp: 0.2
iclamp start: 550
iclamp dur: 30
V(tm)= -50.1
taum = 2.1 ms

** plan for find params to do stim and get plateaus

** get to start in the posters

** message from srdjan about the experiments

Hi Sergio,

Could you please do me a big favor and test only one negative current injection before plateau and one negative current injection during the plateau maintenance phase, 50 ms after the plateau initiation? Both current injections should be 100 ms long.
Together with the whole trace (as displayed in your current figure), could you also please superimpose the before and after voltage transients resulting from these current injections, so that we can compare them visually?

Could you please test only one positive current injection before plateau and one positive current injection during the plateau maintenance phase, 50 ms after plateau initiation? Both current injections should be 100 ms long. Together with the whole trace (as displayed in your current figure), could you also please superimpose the before and after voltage transients resulting from these current injections, so that we can compare them visually? 

Many thanks,
Srdjan

* 11-01-17

goal: network and stim params for sfn

** working on plan for Srdjan

save data to json file:

cfg.simLabel = 'detailed_model_pos'
cfg.saveFolder = 'data'
cfg.savePickle = False
cfg.saveJson = True

creates json file of all the data and save at '/data' with name 'detailed_model_pos'

run sim under 3 conditions:
only plateau
plateau + postive current injection
plateau + negative current injection

saved data.

Created "analize.py' to read and plot data.

vector were open with:

with open('data/detailed_model.json') as json_data:
    d = json.load(json_data)
    
with open('data/detailed_model_neg.json') as json_data:
    d1 = json.load(json_data)
   
with open('data/detailed_model_pos.json') as json_data:
    d2 = json.load(json_data)

time = d['simData']['t'] 
time1 = d1['simData']['t'] 
time2 = d2['simData']['t'] 

plateau = d['simData']['V_soma']['cell_0'] 
plateau_neg = d1['simData']['V_soma']['cell_0'] 
plateau_pos = d2['simData']['V_soma']['cell_0'] 

then plot figs:

[[./gif/plateau_neg_pos.png]]
[[./gif/plateau_pos.png]]
[[./gif/plateau_neg.png]]

** added code to measure taum at analyze.py

after importing vectors, it is easier to measure taus.

neg_plat = dict(zip(time1,plateau_neg))
pos_plat = dict(zip(time2,plateau_pos))

# negative
def neg_current(tstart = 100, tend = 200):
	v = plateau_neg[tstart*10:tend*10]
	dV = max(v)- min(v)
	Vt = max(v)-(dV*(1-np.exp(-1)))
	z = min(v, key=lambda x:abs(x-Vt)) #find closest value in list
	#print "Voltage at taum: "+str(z)
	for t, v in neg_plat.iteritems():
	    if v == z:
	    	taum = Decimal(t-tstart)
	        print "taum after negative current: "+str(round(taum,1))+" ms"

def pos_current(tstart = 100, tend = 200):
	v = plateau_pos[tstart*10:tend*10]
	dV = max(v)- min(v)
	Vt = min(v)+(dV*(1-np.exp(-1)))
	z = min(v, key=lambda x:abs(x-Vt)) #find closest value in list
	#print "Voltage at taum: "+str(z)
	for t, v in pos_plat.iteritems():
	    if v == z:
	    	taum = Decimal(t-tstart)
	        print "taum after positive current: "+str(round(taum,1))+" ms"


analyzed region at plateaus:
450-480 ms

results:

RMP taum values:
taum after negative current: 15.3 ms
taum after positive current: 13.4 ms
 
plateau taum values:
taum after negative current: 4.0 ms
taum after positive current: 1.9 ms

** Rin values for every iclamp, table with results

Bill suggested to measure Rin values for every iclamp and present them to srdjan

added Rin = dV/iclamp_amp to analyze.py 

RMP, taum and Rin values:
taum after negative current: 15.3 ms
Rin after negative current: 96.7 MOhm
taum after positive current: 13.4 ms
Rin after positive current: 88.5 MOhm
 
plateau, taum and Rin values:
taum after negative current: 4.0 ms
Rin after negative current: 25.1 MOhm
taum after positive current: 1.9 ms
Rin after positive current: 16.0 MOhm

http://orgmode.org/manual/Built_002din-table-editor.html#Built_002din-table-editor

table was copied from bill:

|             | Rin (Mohms) | taum (ms) |
| RMP neg     |       96.7  |      15.3 |
| RMP pos     |       88.5  |      13.4 |
| plateau neg |       25.1  |       4.0 |
| plateua pos |       16.0  |       1.9 |

** network sim

updating singlelayer model with eee7ps cell model

added Ih control
added new AMPA and NMDA gmax params
added netstim params

running sim

keeping ratiobdend and ratioapical. 
control ratio AMPA/NMDA for basaldend and apical dend different. 
For singlecell model easier to the ratio with differents gmax, 
but this affect all the connections.

*** for the network, NMDA and AMPA will be equal and will change weight ratios for different secs 

change netstim to basal dend but is not working. checking configuration

checking weights for network

* 11-02-17

goal: set params for network

working on V10
label: network 19 

** seeting netstim to PT5 cells

*** checking if netstim inserted in head_55:

netParams.cellParams.PT5_reduced.secs.head_55

{_repr_mimebundle_: {}, mechs: {pas: {e: -70.0, g: 5.882352941176471e-05}}, geom: {nseg: 1, diam: 1.0, L: 1.0, cm: 1.0, Ra: 105.0}, topol: {childX: 0.0, parentSec: 'neck_55', parentX: 1.0}, vinit: -88.12656642859307}

AMPA/NMDA was not inserted

found error at netstim target params:
synMech': synWeight, #ns['synMech'][i]

synMech should iterate between 'AMPA' and 'NMDA'
synWeight is the weight for either AMPA or NMDA

added:
if ns['synMech'][i] == 'AMPA':
              syn_weight = cfg.glutAmp*cfg.ratiobdend[0]
elif ns['synMech'][i] == 'NMDA':
              syn_weight = cfg.glutAmp*cfg.ratiobdend[1]

now working...

*** netstim params

setting stim params to stim basal dend spine, in the presesence of bkg activity (noise level) and  no connectivity

stim to only 5 cells
glutAmp: 3.7  
[[./gif/traces_network19_eee7ps.png]]

** setting connectivity weights for network

*** inh bkg

no netstim to basaldend PT5 cells

cfg.weightLongInh = 1.0
leads to bkg activity in the inh network of 4 Hz

[[./gif/raster_network19_longInh1.png]]


*** stim to all PT5 

glutAmp set to 3.0
[[./gif/traces_network19_PT5stim3.png]]
[[./gif/raster_network19_PT5stim3.png]]
cfg.EEgain = 0.2   # basal dend 
cfg.IEgain = 0.014   #PV to exc s
cfg.IIgainPV1 = 0.05 # PV to PV
cfg.EIgain1 = 2.0  # exc to PV

good base to work with it.

*** modifying inh connectivity

increasing EI to 3.0
[[./gif/traces_networ19_EI3.png]]
[[./gif/raster_network19_EI3.png]]
Results: longer activity

now decreasing II to 0.01
[[./gif/traces_network19_II001.png]]
[[./gif/raster_network19_II001.png]]
results: increase inhibitory drive.

checking params stim for the inhibitory network should not change because similar mod files to previous version

trying previous params for inh network.
[[./gif/traces_network19_old_inhparams.png]]
[[./gif/raster_network19_old_inhparams.png]]
cfg.EEgain = 0.2
cfg.IEgain = 0.00072
cfg.IIgainPV1 = 0.003 
cfg.EIgain1 = 3.0
Results: Hypersaturated network

increasing Inh to Exc input:
[[./gif/traces_network19_IE0001.png]]
[[./gif/raster_network19_IE0001.png]]
IE: 0.001
Results: still too active network

*** modifying EE connectivity

reducing EE inputs
[[./gif/traces_network19_EE15.png]]
[[./gif/raster_network19_EE15.png]]
EE: 0.15 
Results: better network activation, but plateaus are still not good enough

*** reduced IE input

IE input to 0.00072
[[./gif/traces_network19_IE0001_2.png]]
[[./gif/raster_network19_IE0001_2.png]]
Results: better plateaus 


*** check EE and stim to basal dend

EE increased to 0.2
netstim to basal dend reduce to 2.5
[[./gif/traces_network19_EE02_stim25.png]]
[[./gif/raster_network19_EE02_stim25.png]]
Results: better plateaus, long duration 

*** IE weight increased
IE increased to 0.0012
[[./gif/tracesnetwork19_IE00012.png]]
[[./gif/raster_network19_IE00012.png]]
Results: better plateaus, only fading at the end

*** netstim increased
netstim increased to 2.7
[[./gif/traces_network19_stim27.png]]
[[./gif/raster_network19_stim27.png]]
Result: longer depolarization and more apmlitude of plateau
cfg.EEgain = 0.2
cfg.IEgain = 0.0012 
cfg.IIgainPV1 = 0.003 
cfg.EIgain1 = 3.0 

*** high inh and stronger netstim
IE increased to 0.004, and netstim set to 4.5
[[./gif/traces_network19_stim45_IE004.png]]
[[./gif/raster_network19_stim45_IE004.png]]
results: plateaus depolarization is higher and clear end.

** discussion of network sim 

bill:
general pic we want to get is something like what mainen and sejnowski showed with their repeated noise stim


[9:12] 
one dend spine? -- that's enough to get a plat? -- doesn't seem realistic but main point here is to get the plat


[9:13] 
so maybe now for other bas dend would do 'frozen noise' as in M&S

how is the ‘frozen noise’?


billl [9:14 PM] 
fast random small epsps


[9:14] 
* nat382:363.pdf
@article{mainen96,
  author =    "Mainen, ZF and Sejnowski, TJ",
  title =    "Influence of dendritic structure on firing pattern in model neocortical
    neurons",
  journal =    "Nature",
  year =    "1996",


[9:14] 
/u/billl/articles/nat382:363.pdf

woiuld want identical noise to cells with the plateaus


[9:17] 
to get similar spiking patterns


should just be a set of several (maybe 100-500) small noisy synaptic inputs during the duration of the sim -- without the plateua need to be small enough to not have any effect; during the plateau would produce a characteristic pattern of input -- if same into all the cells wiht plateau should get very similar spiking patterns


[9:27] 
netstim .amp=small  .noise=1.0


[9:27] 
many of these with divergence to other (non plat) basal dend of set of cells or perhaps even to all cells

** Plan for tomorrow

Read paper and implement 'frozen noise'

* 11-03-17

goal: Frozen noise 


from wiki:
Another positive use of synaptic noise is by involving frozen noise. Frozen noise refers to random current pulses of varying amplitudes being applied to the constant current input, and then maintaining this pattern so that it can be used to observe differences in other factors. Frozen noise allows researchers to reveal whether or not part of a neuron's response is dependent on a given stimulus because the other interfering conditions are held constant.[14]

reference to:
/u/sergioangulo/papers/ermentrout2008.pdf

bill refered to this paper:
/u/sergioangulo/papers/mainen1996.pdf

sthocastic resonance will amplify weak signals.

** modifying network to use only one netstim

noise: 1.0
weight: 0.5
[[./gif/traces_network19_1netstim.png]]
[[./gif/raster_network19_1netstim.png]]
same noise to all the cells. more similar firing pattern

** varying background weight

background weight: 0.05
[[./gif/traces_network19_bkg005.png]]
[[./gif/raster_network19_bkg005.png]]
pattern of plateau more similar between cells, but doesnt look good

background weight: 0.1
[[./gif/traces_network19_bkg01.png]]
[[./gif/raster_network19_bkg01.png]] 
more spikes, synchronized

background weight: 1.0
[[./gif/
[[./gif/


background weight: 1.5
[[./gif/traces_network19_bkg15.png]]
[[./gif/raster_network19_bkg15.png]]
better noise amplitude

** discussion about noise 
bill: 
increase noise weight
set noise different for inh cell 
turn off stim platau and connectivity

** running sim of only noise
turned off stim to plateau
turned off internal connectivity

noise weight: 1.5
[[./gif/traces_network19_bkg15_nostim.png]]
[[./gif/raster_network19_bkg15_nostim.png]]

** discussion noise

too slow
4:36
what's the spectrum?
sergio 4:36 PM
80-100 Hz
billl 4:36 PM
hmm that's not 80-100
4:37
i see a lot of 10 hz there
4:37
let's look at the PSPs -- maybe is too drastically filtered here which would be part of our point
4:38
may need to mix EPSP and IPSP? -- how have other people done it?
4:38
how many netstims?
sergio 4:39 PM
for this one, it is one netstim to apical dendrite of PT5 cells (AMPA/NMDA, ratio of 4.0)
billl 4:39 PM
ouch we talked yesterday about 100-500;   1<<100 and also 1<<500 -- ok i'm being sarcastic here but i fear your not paying attention :(
4:40
you need to copy all of my briliant insights into your nb -- you can also copy those that are not brilliant if you want
4:40
and if something seems not brilliant to the point of being stupid then ask me please
4:41
we have i fear lost another day with a deadline looming only a few days away
4:41
are you working on this this weekend?
sergio 4:41 PM
sorry, my bad, I thought you were referring to something else, but  not freq
4:41
tomorrow
billl 4:41 PM
i was not referring to frequency -- i was referring to netstims
4:41
also if i am brilliant but unclear you must ask me to clarify
4:42
sometimes us brilliant people can be very hard to understand
4:42
i see where what i said yesterday was very badly phrased and could be considered uncomprehensible -- my apologies
4:42
culpa mea
sergio 4:43 PM
np
4:43
I’m running one with 100-500 Hz
billl 4:43 PM
maybe se if someone has a modeldb that does the frozen noise trick and see how they did it?
4:43
no not 100-500 hz
4:43
500 netstims
sergio 4:44 PM
ok ok
billl 4:44 PM
i'm not sure about the best rates
4:44
or if all should be EPSPS
sergio 4:44 PM
let me look for it
billl 4:44 PM
should all be ampa though -- no NMDA
4:44
we want fast noise -- NMDA is slow
sergio 4:44 PM
ok
billl 4:45 PM
might even do a faster tau2 for the EPSP -- or since using DMS it's beta
sergio 4:47 PM
so for the beta, that would affect the NMDA. Let me try first only AMPA
billl 4:49 PM
alpha and beta are part of DMS aren't they
4:49
nothing to do with NMDA
4:50
eg Beta    = 0.02    (/ms)        : backward (unbinding) rate
4:50
oh you're thinking of the Mg B (B for block) B = 1 / (1 + Exp1(0.062 (/mV) * -v) * (mg / 3.57 (mM)))
sergio 4:52 PM
ic, I was confused with the beta from the NMDA
billl 4:52 PM
AMPA and NMDA now are both using the same parameterization right?
4:52
so have same params except for that B
sergio 4:55 PM

PARAMETER {

  Cmax  = 1   (mM)    : max transmitter concentration

  Cdur  = 1   (ms)    : transmitter duration (rising phase)

  Alpha  = 4   (/ms /mM) : forward (binding) rate (4)

  Beta  = 0.0015 (/ms)   : reverse (unbinding) rate

  e    = 0   (mV)    : reversal potential

  mg   = 1   (mM)    : external magnesium concentration

  fracca = 0.13  : fraction of current that is ca ions; Spruston et al 95

  gmax = 1   (uS)   

sergio 4:56 PM
I see the B for block on the NMDAeee
billl 4:56 PM
yeah ok but we're not putting in NMDA here anyway

*** conclussion: not the stim that bill was expecting, a faster noise

 
*** next discussion about model for synaptic noise from Destexhe and Sejnowski

sergio 5:01 PM
https://senselab.med.yale.edu/modeldb/ShowModel.cshtml?model=64259
5:02
something like this model?
billl 5:04 PM
descrip looks reasonable
5:05
is a mod file -- not sure how easy to make sure same in all cells? -- presumable has a seed?
5:06
has a set_seed() routine
5:06
sure give it a try
5:06
can just make a single sec stick it in and try it out
sergio 5:06 PM
it is mod file
billl 5:06 PM
before getting it into the full netpyne thing
5:06
yes a mod file
sergio 5:08 PM
ok

*** setting for single compartment cell model and noise generation

5:08
I’m going to start working on it
billl 5:08 PM
sure -- how about we start and end in the next 15 min or so -- this is a tiny tiny project -- just try it out in 1 section
5:09
sec=h.Section()
5:09
sec.insert('hh')
5:09
set the nafgmax to get rid of spiking
5:09
sec.insert('nameofhtisthing')
5:10
vec.record( ..... ) # want to record the output of htis thing and also the sec(0.5).v
5:10
h.run()
5:10
if any of these steps seem unfamililar please ask
sergio 5:10 PM
ok
billl 5:38 PM
any luck?  want me to try?
sergio 5:39 PM

----> 8 sec.insert('Gfluct')
ValueError: argument not a density mechanism name.

sergio 5:39 PM
I ran into that problem
billl 5:39 PM
don't exec a file until it's debugged


billl 5:40 PM
did you compile it in
5:40
where is file?
sergio 5:40 PM
yep
5:40
let me added to repo and push it
billl 5:41 PM
did the hoc they provided run?
sergio 5:43 PM
/u/sergioangulo/projects/eee/sim/mod/Gfluct.mod
5:43
that's the location of the mod file
billl 5:45 PM
i'm getting this error - -/u/sergioangulo/projects/sergeee/eee/sim/mod/x86_64/Gfluct.c:232: multiple definition of `_Gfluct_reg'
5:45
oh my fault
5:45
ok fixed
5:45
where's your .py file?
sergio 5:46 PM
/u/sergioangulo/projects/eee/sim/layersim/noise.py
billl 5:47 PM
here's the error
5:47
(if you enter linebyline you'll see errors better)
5:47
ValueError: argument not a density mechanism name.
5:48
it's     POINT_PROCESS Gfluct2
5:49
it's also not called Gfluct
5:49
gfl= h.Gfluct2(0.5,sec=sec)
>>
sergio 5:49 PM
I just realized about it
billl 5:49 PM
good
5:49
ok -- keep going
5:49
bbl
billl 5:58 PM
works?
sergio 5:58 PM

20 h.run()
AttributeError: 'hoc.HocObject' object has no attribute 'run'

sergio 5:59 PM
I cannot run the sim, I don’t know what I am missing
billl 6:09 PM
you didn't load stdrun.hoc
6:09
h.load_file('stdrun.hoc')
sergio 6:09 PM
ok, thanks!
6:11
now, it’s running
billl 6:13 PM
great
pretty tiny -- inc the conductance
6:14
i mean the control param -- whatever it is
6:14
still looks very slow -- is there a freq param?
6:14
did you run the orig hoc code -- might show you waht params are relevant
sergio 6:16 PM
gfl.std_e = 0.012        
gfl.std_i = 0.0264
billl 6:16 PM
higher am certainly
sergio 6:16 PM
these are the values that the use for the demo
billl 6:16 PM
any kind of freq control?
sergio 6:16 PM
let me check
billl 6:17 PM
tau_e    = 2.728    (ms)    : time constant of excitatory conductance
tau_i    = 10.49    (ms)    : time constant of inhibitory conductance
sergio 6:18 PM
I’m going to increase those values
billl 6:18 PM
decrease you mean, 1,3 maybe?
sergio 6:19 PM
correct, decrease
billl 6:21 PM
anyway now you know how to use it so let's get it in there and can test some of the params in the sims
sergio 6:22 PM
tau_e and tau_i multiplied by 0.1
billl 6:22 PM
great; that looks faster -- so can try that and also the orig params;  but i'm guessing will still need to be much bigger to have any effect but you know how to do that now so can try
6:23
ie this might still be invisitble in the context of the network sim
sergio 6:23 PM
ok
6:23
I’m going add this to the network
billl 6:24 PM
great

** sim for noise in single compartment 

file located at:
/u/sergioangulo/projects/eee/sim/layersim/noise.py


added mod file at:
/u/sergioangulo/projects/eee/sim/mod/Gfluct.mod

mod file is at modeldb:
https://senselab.med.yale.edu/modeldb/ShowModel.cshtml?model=8115&file=/fluct/Gfluct.mod#tabs-2

paper is at:
/u/sergioangulo/papers/destexhe2001.pdf

running sim with no modif:
[[./gif/noise.png]]

sim with increase amplitud:
[[./gif/noise2.png]]
gfl.std_e = 0.012		
gfl.std_i = 0.0264

sim with increase frequency:
[[./gif/noise3.png]]
gfl.tau_e = 2.728 * 0.1
gfl.tau_i = 10.49 * 0.1

** add noise to netstim

try to added noise mod file but run into problem

method:

cellRule['secs']['soma']['mechs']['Gfluct2'] = {'std_e': 0.012, 'std_i': 0.0264}

debug mode ran fine on ipython but does not run in sim:

ValueError: argument not a density mechanism name

* 11-03-17
 
goal: add noise

point process inserted in the soma at eee7ps.py file:
gfl= h.Gfluct2(0.5,sec=self.soma)
gfl.std_e = 0.012   
gfl.std_i = 0.0264
gfl.tau_e = 2.728 * 0.1
gfl.tau_i = 10.49 * 0.1

[[./gif/traces_noise_eee7ps.png]]

salva suggested on netParams:

cellRule['secs']['soma']['poinpts']= {'noise':{'mod':'Gfluct2', 'loc': 0.5, 'std_e': 0.012, 'std_i': 0.0264}} 

tried but was no implemented:
[[./gif/traces_cellrule_no_noise.png]]

checked on sim.net.cells[0] but dict was not there:
{ions: {na: {i: 10.0, e: 42.0, o: 140.0}, ca: {i: 5e-05, e: 132.4579341637009, o: 2.0}, k: {i: 54.4, e: -104.0, o: 2.5}}, mechs: {kBK: {tau: 1.0, caPmax: 1.0, caPmin: 0.0, caVhh: 0.002, caVhmin: -2.1899738592999967, gpeak: 5.09733585163e-05, caPh: 0.002, caPk: 1.0, k: 17.0, caVhmax: 155.67}, pas: {e: -88.5366550238, g: 5.404892936362239e-05}, kdmc: {gbar: 0.000447365630734}, ih: {aslope: 11.9, ascale: 0.00643, bscale: 0.193, gbar: 0.0, ashift: 154.9, bslope: 33.1}, kap: {tq: -52.0967985869, gbar: 0.0898600246397, sh: 0.0, vhalfl: -59.7867409796, vhalfn: 32.7885075379}, can: {gcanbar: 4.60717910591e-06}, kdr: {gbar: 0.0131103978049, sh: 0.0, vhalfn: 11.6427471384}, cal: {gcalbar: 4.41583533572e-06}, nax: {gbar: 0.0345117294903, sh: 0.0}, cadad: {taur: 99.1146852282, depth: 0.119408607923, kd: 0.0, cainf: 0.00024, kt: 0.0}}, hSec: <netpyne.cell.CompartCell object at 0x7fa2b57bcb90>.soma, geom: {nseg: 1, diam: 28.2149102762, L: 48.4123467666, cm: 1.78829677463, Ra: 114.510490019}, topol: {}, vinit: -88.12656642859307}

checked on cellParms and dict was there:
netParams.cellParams.PT5.secs.soma.poinpts
{'noise': {'loc': 0.5, 'mod': 'Gfluct2', 'std_e': 0.012, 'std_i': 0.0264}}

** discussion noise
ok that's prob the easier way
3:05
so now ready to run the network?
sergio 3:06 PM
sure, I was thinking that the RMP moves up to -60's
3:06
with the noise
3:06
should I try to keep it lower?
billl 3:06 PM
don't think so; why would you want to?
sergio 3:08 PM
just because sim on single cell are done with RMP around -80 mV
billl 3:09 PM
sure but that's with no noise; you're concerned that plateau won't occur?  i think should be ok but we'll see
3:09
(no reason to adjust stuff unless something not wokring)
sergio 3:09 PM
ok

** checked added noise
dict on soma:
pointps: {Gfluct2_0: {loc: 0.5, std_e: 0.012, g_e0: 0.0121, tau_i: 1.0490000000000002, hPointp: Gfluct2[0], tau_e: 0.27280000000000004, std_i: 0.0264, g_i0: 0.0573, E_e: 0.0, E_i: -75.0, mod: 'Gfluct2'}}

then added to netParams:
cellRule['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 'std_e': 0.012, 'g_e0': 0.0121, 'tau_i': 1.0490000000000002, 'tau_e': 0.27280000000000004, 'std_i': 0.0264, 'g_i0': 0.0573, 'E_e': 0.0, 'E_i': -75.0, 'mod': 'Gfluct2'}}

and worked!
differences was only 'pointps' instead of 'poinpts'

check sim.net.cells[0].secs.soma.pointps
{noise: {loc: 0.5, std_e: 0.012, g_e0: 0.0121, tau_i: 1.0490000000000002, hPointp: Gfluct2[0], tau_e: 0.27280000000000004, std_i: 0.0264, g_i0: 0.0573, E_e: 0.0, E_i: -75.0, mod: 'Gfluct2'}}

** now network20 on data/v10/

** running network sim with noise

disconnected cells
no long connectivity stim to PT5
added noise and stim to basal dend of PT5 cells
[[./gif/traces_network_noise_plateau.png]]
[[./gif/raster_network_noise_plateau.png]]
resuts: plateau amp is smaller

internally connected cells
no long connectivity stim to PT5
[[./gif/traces_network20_connected.png]]
[[./gif/raster_network20_connected.png]]
resuts: plateau amp is slight higher, and 


** plan for sims
bill:
we need to work with some synchrony measures; does netpyne have any sync measures builtin?
anyway can run a batch of some connected ones with diff levels of noise diff tau params while search for sync measures

salva:
Y check analysis plotStats and synclines

still not strongly synchroized -- maybe stronger?
5:12
no not stronger since already firing a lot
5:13
how about weaker and faster?
sergio 5:15 PM
ok let me try that
billl 5:15 PM
you were concerned that the plateau would be less pronounced -- looks like it is?
5:16
maybe take away the depol with an Iclamp during the whole time?
sergio 5:17 PM
ok, the other possibility is modifying the e for the inh noise. Now it is set to -75

** plateau and noise

increased glutAmp to 6.0
[[./gif/traces_network20_glutamp6.png]]
[[./gif/raster_network20_glutamp6.png]]
results: better plateau

changed e_inh to -80
[[./gif/traces_network20_einh80.png]]
[[./gif/raster_network20_einh80.png]]
results: slightly higher amp of the plateau, less spikes 

changed e_inh to -85
[[./gif/traces_network20_einh85.png]]
[[./gif/raster_network20_einh85.png]]
results: higher amplitude of plateau, RMP at -70's

** discussion about RMP
	
billl 5:30 PM
so can move them both down by 10 or 15
sergio 5:31 PM
the one for exc is set to 0 mV
5:31
ok
billl 5:32 PM
or maybe just move the i one for simplicity -- can try this out in your single cell sim (interactively if you can)


* 11-06-17

goal: get plateaus in network with stats


** set e for inh noise

*** e inh to -90
[[./gif/traces_network20_einh90.png]]
[[./gif/raster_network20_einh90.png]]
results: RMP at -70's (lower than e inh -85) and less spikes 

*** e inh to -95
[[./gif/traces_network20_einh95.png]]
[[./gif/raster_network20_einh95.png]]
results: RMP at -80, less spikes.

** increase weight netsim to basal dend

*** netstim set to 7.0
[[./gif/traces_network20_netstim7.png]]
[[./gif/raster_network20_netstim7.png]]
results: 1 more sipke, slightly more amp of plateau

*** netstim set to 8.0
[[./gif/traces_network20_netstim8.png]]
[[./gif/raster_network20_netstim8.png]]
results: more spikes, longer plateau

** check weights internal connectivity

*** increased EE to 0.5
[[./gif/traces_network20_ee05.png]]
[[./gif/raster_network20_ee05.png]]
results: longer plateaus, more spikes
plan: keep 0.2 

** check stats for netpyne

*** info from netpyne documentation
analysis.plotSpikeStats (include = [‘allCells’, ‘eachPop’], timeRange = None, graphType=’boxplot’, stats = [‘rate’, ‘isicv’], popColors = [], figSize = (6,8), saveData = None, saveFig = None, showFig = True)

Plot spike histogram. Optional arguments:

include: List of data series to include. Note: one line per item, not grouped ([‘all’|,’allCells’|,’allNetStims’|,120|,’L4’|,(‘L2’, 56)|,(‘L5’,[4,5,6])])
timeRange: Time range of spikes shown; if None shows all ([start:stop])
graphType: Type of graph to use (‘boxplot’)
stats: List of types measure to calculate stats over: cell firing rates, interspike interval coefficient of variation (ISI CV), pairwise synchrony, and/or overall synchrony (sync measures calculated using PySpike SPIKE-Synchrony measure) ([‘rate’, |’isicv’| ‘pairsync’ |’sync’|])
popColors: Dictionary with color (value) used for each population/key
figSize: Size of figure ((width, height))
saveData: File name where to save the final data used to generate the figure (None|’fileName’)
saveFig: File name where to save the figure (None|’fileName’)
showFig: Whether to show the figure or not (True|False)
Returns figure handle

*** added network stats analysis to cfg, error message, solution

cfg.analysis['plotSpikeStats'] = {'include': ['allCells', 'eachPop'],'timeRange': None, 'graphType': 'boxplot','stats': ['rate','iscicv','pairsync','sync'],'popColors': {'PT5':'red','PV5': 'blue'},'figSize': (6,8), 'showFig': False,'saveData': True, 'saveFig': 'stats'}

**** error message

Plotting spike stats...
Traceback (most recent call last):
  File "init.py", line 37, in <module>
    sim.analysis.plotData()         			# plot spike raster etc
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 43, in plotData
    out = func(**kwargs)  # call function with user arguments
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 795, in plotSpikeStats
    whis=1.5, widths=0.6, vert=False, showmeans=True, patch_artist=True)
  File "/usr/site/python/matplotlib/pyplot.py", line 2785, in boxplot
    zorder=zorder, data=data)
  File "/usr/site/python/matplotlib/__init__.py", line 1898, in inner
    return func(ax, *args, **kwargs)
  File "/usr/site/python/matplotlib/axes/_axes.py", line 3274, in boxplot
    labels=labels, autorange=autorange)
  File "/usr/site/python/matplotlib/cbook.py", line 1994, in boxplot_stats
    X = _reshape_2D(X)
  File "/usr/site/python/matplotlib/cbook.py", line 2259, in _reshape_2D
    if not hasattr(X[0], '__len__'):
IndexError: list index out of range

**** asked on slack
I have this problem running the stats for network, I’m not sure why
12:55
any ideas?
billl 1:02 PM
try calling the routine directly
sergio 1:05 PM
I tried to run only netParams.py on ipython, but I don’t have errors there
billl 1:06 PM
you are trying to graph something? -- use the routine
1:06
plotSpikeStats()


**** plot stats
>>> sim.analysis.plotSpikeStats()
Plotting spike stats...
>>> <matplotlib.figure.Figure object at 0x7f4e8d8e9e50>

it generates a plot:
[[./gif/stats_network20.png]]

only generates rate:
[[./gif/stats_network20_2.png]]

change saveFig to True to save rate and isicv.

it creates figs on data dir
[[./gif/network20_spikeStat_isicv.png]]
[[./gif/network20_spikeStat_rate.png]]

now creating overall sync

error message:
spike_sync() takes at least 2 arguments (1 given)
it is not running synchrony analysis

ask for stats to run 

** creating batch

follow Joe's method

created my_batches.py

inside running sim to change:
*** the amplitude of the stim for the PT5 cells
*** noise amp
*** noise tau
*** stim by noise amp
*** stim by noise tau
*** noise amp by tau

copies 3 files to run batches:
runmybatches
instantiate.py
batch_init.py

runing analyze.py


*** error message
1D batches:
===========
['glutAmp', 'glutAmp_noise_amp', 'noise_amp', 'noise_amp_tau', 'glutAmp_noise_tau', 'noise_tau']
2D batches:
===========
[]
Reading data...
5 files missing
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
/u/sergioangulo/projects/sergeee/eee/sim/layersim/analyze.py in <module>()
     59     start = time.time()
     60
---> 61     plot_all()
     62
     63     if makepdf:

/u/sergioangulo/projects/sergeee/eee/sim/layersim/analyze.py in plot_all()
     41
     42     for batch in batches1D:
---> 43         batch_analysis.plot_vtraces_multicell(batch, celllabel="pop")
     44
     45     for batch in batches2D:

/u/sergioangulo/projects/eee/sim/batch_analysis.pyc in plot_vtraces_multicell(batchname, cellIDs, secs, par1label, par2label, celllabel, title, filename, save, outputdir)
    653
    654     if secs is None:
--> 655         sim_data = data[data.keys()[0]]['simData']
    656         simdata_keys = data[data.keys()[0]]['simData'].keys()
    657         v_secs = [d for d in simdata_keys if str(d[0:2]) == "V_"]

IndexError: list index out of range

**** now different error
In [1]: execfile('netParams.py')
NEURON -- VERSION 7.5 master (0388d94) 2017-08-09
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016
See http://neuron.yale.edu/neuron/credits

loading membrane mechanisms from x86_64/.libs/libnrnmech.so
Additional mechanisms from files
 vecst.mod nstim.mod MyExp2SynBB.mod MyExp2SynNMDABB.mod NMDAeee.mod h_BS.mod kap_BS.mod kdmc_BS.mod kdr_BS.mod nax_BS.mod cadad.mod cat_mig.mod can_mig.mod cal_mig.mod h_kole.mod h_migliore.mod kBK.mod gabab.mod nafx.mod kdrin.mod IKsin.mod hin.mod canin.mod kapin.mod kctin.mod cadyn.mod kapcb.mod catcb.mod vecstim.mod Gfluct.mod AMPA.mod GABAA.mod
Balancing each compartment to -73 mV
['NetStim1']
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-5f137b9a3b6c> in <module>()
----> 1 execfile('netParams.py')

/u/sergioangulo/projects/sergeee/eee/sim/layersim/netParams.py in <module>()
    252   print([k for k in dir(cfg) if k.startswith('NetStim')])
    253   for nslabel in [k for k in dir(cfg) if k.startswith('NetStim')]:
--> 254         print(cur_pop)
    255         ns = getattr(cfg, nslabel, None)
    256

NameError: name 'cur_pop' is not defined

*** moved definition of cur_pop and solution

cur_pop was printed as 'P'

definition should be 'PT5'

changes cur_pop from "cur_pop = ns['pop'][0]" to "cur_pop = ns['pop']"

solved, running sim

** running batch

trying on 'my' to see if faster
ssh connection was interrupted, didn't run all the batches. 
running batches from virtual machine
it did not run batches

setting batch with batch.py

batch.py is not running the sims on virtual machine
 
both batch.py and my_batches run on ssh, but extremely slow 

** analyzing my_batches

*** running analyze.py

*** error message
665     elif cellIDs is None:
    666         cellIDs = []
--> 667         for cell in data[data.keys()[0]]['net']['cells']:
    668             cellIDs.append(cell['gid'])
    669 

KeyError: 'cells'

*** added 'net' to saved data
cfg.saveDataInclude = ['simData', 'simConfig', 'netParams', 'net']

*** error message
694         for cellindex, cellID in enumerate(cellIDs):
    695             cellLabel = "cell_" + str(cellID)
--> 696             cellType = data[data.keys()[0]]['net']['cells'][cellID]['tags']['cellType']
    697
    698             if cellLabel in sim_data[secLabel].keys():

KeyError: 'cellType'

* 11-07-17

goal: run analysis batches

** debugging analyze.py

printing tags. Looking for cellType dict

print data[data.keys()[0]]['net']['cells'][cellID]['tags']['cellType']

printed 'PT5B' and 'PV5'

modifying cellType to 'pop'

passed the error

*** error message
/u/sergioangulo/projects/sergeee/eee/sim/layersim/analyze.py in plot_all()
     41
     42     for batch in batches1D:
---> 43         batch_analysis.plot_vtraces_multicell(batch, celllabel="pop")
     44
     45     for batch in batches2D:

/u/sergioangulo/projects/eee/sim/batch_analysis.py in plot_vtraces_multicell(batchname, cellIDs, secs, par1label, par2label, celllabel, title, filename, save, outputdir)
    705         output = deepcopy(temp_output)
    706         output['autotitle'] = 'Multicell Voltage Traces'
--> 707         output['yarray'] = np.stack(cellTraces, axis=1)
    708         output['params'].append(cellparams)
    709

/usr/site/python/numpy/core/shape_base.pyc in stack(arrays, axis)
    352     shapes = set(arr.shape for arr in arrays)
    353     if len(shapes) != 1:
--> 354         raise ValueError('all input arrays must have the same shape')
    355
    356     result_ndim = arrays[0].ndim + 1

ValueError: all input arrays must have the same shape

**** ask Joe about it
**** stack overflow

https://stackoverflow.com/questions/38848759/valueerror-all-the-input-arrays-must-have-same-number-of-dimensions

*** checking figs created with batch.py no changes.

*** noise was not changed in the batch, only amp

*** ran single sim to check if noise changes, it does

** ran individual sims for the meeting

https://docs.google.com/document/d/1_0kDDU10OxxrPqiygN1XSkN3EliyVyvBiWut5rzck1A/edit?usp=sharing

** meeting

*** use previous poster versions and new figures with cell eee7ps.py 
*** label figs in gdocs
*** keep noise level of amplitude 1.0, tau 0.1
*** decrease gleak in PT5 cells 
*** compare stats between plateau and no plateau
*** do stats for synchrony comparisons 
*** srdjan: compare cells without stim with cells with stim
 
** change leak, network 21

*** RmScale = 1.0
[[./gif/network21_traces_Rm1.png]]
[[./gif/network21_raster_Rm1.png]]

*** RmScale = 10.0
[[./gif/network21_traces_Rm10.png]]
[[./gif/network21_raster_Rm10.png]]
Results: more spikes 

*** RmScale =20.0
[[./gif/network21_traces_Rm20.png]]
[[./gif/network21_raster_Rm20.png]]
results: similar to Rm10

*** RmScale =50.0
[[./gif/network21_traces_Rm50.png]]
[[./gif/network21_raster_Rm50.png]]
results: more spikes, no changes plateau  amp 

*** RmScale =100.0
[[./gif/network21_traces_Rm100.png]]
[[./gif/network21_raster_Rm100.png]]
results: less number of spikes than Rm50, no changes plateau 

*** link to gdocs

https://docs.google.com/document/d/165q2lQY-MtIj_Z8wGRS4JsonlRqNqaFuxDk8iOu8fg8/edit?usp=sharing


** modifying e for inh/exc noise
e inh -100
e exc -20

** increasing number of dendritic spine heads with AMPA/NMDA stimulus

*** 10 dend spines

**** weight 2.0
[[./gif/network21_traces_10heads_weight2.png]]
[[./gif/network21_raster_10heads_weight2.png]]
cfg.glutAmp    = 2.0 #    # weight supplied to NMDAr and AMPAr
cfg.glutLoc    = 0.3    # fraction of branch, not microns (0.28 head number 55)
cfg.glutSpread = 5.5   # microns, diameter of glutamate puff (0.7 only one head, 5.5 for 10 dendritic spines)
***** Results: better amplitude of the dend plateau 

**** weight 1.0
[[./gif/network21_traces_10heads_weight1.png]]
[[./gif/network21_raster_10heads_weight1.png]]
Results: less spikes, no plateau

**** weight 1.5
[[./gif/network21_traces_10heads_weight15.png]]
[[./gif/network21_raster_10heads_weight15.png]]
results: presence of plateau 

**** weight 1.75
[[./gif/network21_traces_10heads_weight175.png]]
[[./gif/network21_raster_10heads_weight175.png]]
results: nice plateu

* 11-08-17

goal: get poster done

** discussion anout stim with 10 dend spines

ok so that's nice


[10:35] 
and also more realistic


[10:35] 
how are we doing with the sync measure - that's the last piece we need for making the poster


[10:35] 
i have an awful sync measure but better to use a good one

** work in the sync analysis

*** error on netpyne
Creating network of 3 cell populations on 1 hosts...
Traceback (most recent call last):
  File "init.py", line 24, in <module>
    sim.net.createCells()              			# instantiate network cells based on defined populations
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 76, in createCells
    newCells = ipop.createCells() # create cells for this pop using Pop method
  File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 58, in createCells
    cells = self.createCellsFixedNum()
  File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 130, in createCellsFixedNum
    cells.append(self.cellModelClass(gid, specs.Dict(cellTags))) # instantiate Cell object
  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 1258, in __init__
    self.params = deepcopy(self.tags.pop('params'))
  File "/usr/lib/python2.7/copy.py", line 182, in deepcopy
    rv = reductor(2)
TypeError: 'Dict' object is not callable

**** fixed by salva
maybe should be self.tags.pop['params'] salvador?? -- seems related to what we were just looking at
sergio 11:14 AM
same error on 'my'
billl 11:14 AM
what's the gitchangeSet?
11:15
sim.gitChangeset()
sergio 11:15 AM
let me check
billl 11:16 AM
Date:   Wed Nov 8 10:49:10 2017 -0500
11:16
@salvador -- think need to roll back
11:16
something broke
11:16
'    made tags of type Dict so can be accessed via dot notation'
11:16
@salvadord
salvadord 11:18 AM
oh funny, in that case seems like the attribute ‘pop’ took preference over the function ’pop()` so yielded error
11:18
guess I’ll take back that change
billl 11:19 AM
odd -- seems like overloading should pick up on the presence of the () to identify
salvadord 11:20 AM
ok, put back prev version
sergio 11:20 AM
thanks Salva!
salvadord 11:21 AM
lots of netpyne bugs are a result of using these modified dict classes to enable dot notation :disappointed: … guess nothing comes for free


*** pairsync

cfg.analysis['plotSpikeStats'] = {'include': ['all'],'timeRange': [100,200], 'graphType': 'boxplot','stats': ['pairsync'],'popColors': {'PT5':'red','PV5': 'blue'},'figSize': (6,8), 'showFig': False,'saveData': False, 'saveFig': True}
[[./gif/network21_spikeStat_pairsync_all.png]]

include: [PT5,PV5]
time 200-800
[[./gif/network21_spikeStat_pairsync_plateau.png]]


**** sync definition 
Computes the overall spike-synchronization value of all pairs of
    spike-trains
http://www.scholarpedia.org/article/Measures_of_spike_train_synchrony#SPIKE_synchronization
http://jn.physiology.org/content/113/9/3432.long
/u/sergioangulo/papers/kreuz2015.pdf

*** sync

**** setting analysis

cfg.analysis['plotSpikeStats'] = {'include': ['all'],'timeRange': [100,200], 'graphType': 'boxplot','stats': ['sync'],'popColors': {'PT5':'red','PV5': 'blue'},'figSize': (6,8), 'showFig': False,'saveData': False, 'saveFig': True}

**** error message

Plotting spike stats...
Traceback (most recent call last):
  File "init.py", line 37, in <module>
    sim.analysis.plotData()         			# plot spike raster etc
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 43, in plotData
    out = func(**kwargs)  # call function with user arguments
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 776, in plotSpikeStats
    syncMat = [pyspike.spike_sync(spkmat)]
TypeError: spike_sync() takes at least 2 arguments (1 given)

**** discussion
	
billl 11:52 AM
try calling spike_sync() directly -- takes 2 args apparently -- what are the 2 args

**** netpyne spike_sync
function call with:
sim.analysis.plotSpikeStats()

creates object:
 <matplotlib.figure.Figure object at 0x7fcdfa9cbc50>
 
but no figure

**** definition spike_sync
Computes the spike synchronization value SYNC of the given spike
    trains. The spike synchronization value is the computed as the total number
    of coincidences divided by the total number of spikes:
    .. math:: SYNC = \sum_n C_n / N.


**** version of pyspike 
***** salva version:
In [5]: import pyspike

In [6]: pyspike.__version__
Out[6]: ‘0.5.3’

***** version on my:
In [1]: import pyspike
In [2]: pyspike.__version__
Out[2]: '0.3.0'

**** updated version on neurosim by bill

**** now working and plotting analysis

**** setting analysis

cfg.analysis['plotSpikeStats'] = {'include': ['PT5','PV5'],'timeRange': [200, 1000], 'graphType': 'boxplot','stats': ['rate', 'isicv', 'sync','pairsync'],'popColors': {'PT5':'red','PV5': 'blue'},'figSize': (6,8), 'showFig': False,'saveData': False, 'saveFig': True}
[[./gif/network21_spikeStat_sync_plateau.png]]


*** compare plateau vs no plateau

pre plateau
[[./gif/network21_spikeStat_sync_noplateau.png]]
[[./gif/network21_spikeStat_pairsync_noplateau.png]]
[[./gif/network21_spikeStat_isicv_noplateau.png]]
[[./gif/network21_spikeStat_rate_noplateau.png]]

during plateau
[[./gif/network21_spikeStat_pairsync_plateau2.png]]
[[./gif/network21_spikeStat_sync_plateau2.png]]
[[./gif/network21_spikeStat_rate_plateau.png]]
[[./gif/network21_spikeStat_isicv_plateau.png]]

**** discussion

so sync is unchanged?


sergio [4:28 PM] 
it does


billl [4:28 PM] 
preplat pairwise sync -- don't see the red one?


sergio [4:29 PM] 
for the pre-plateau there is not spiking in the PT5, that’s why is not plotted


billl 
[4:29 PM] 
don't change the axes -- makes it impossible to read


sergio [4:30 PM] 
yep, needs to change the axes


billl 
[4:30 PM] 
ok so what is that line for preplat sync?


[4:31] 
can you fix axes - i'm not understanding -- or maybe just stick on 1 set of axes


[4:31] 
looks like synchrony is better preplateau!


[4:32] 
but you said there is no spiking so ...

sergio 4:34 PM
sync shouldn’t be plotted if no spikes
billl 4:34 PM
yes so why is it plotted?
sergio 4:35 PM
I’ll take the group out for the analysis if no spikes
4:37
salva, do you know how to fix the axes
billl 4:37 PM
anyway i can't see what you're trying to show me so plot with same axes and don't put in lines if not relevant or else if you can't fix the lines you can just cross out with a red X maybe
4:37
plt.xim()
4:37
xlim
4:38
['clim', 'xlim', 'ylim']
sergio 4:38 PM
ok
billl 4:39 PM
i really don't see any change -- maybe start with the fig where you think there is some change
sergio 4:40 PM
ok
salvadord 4:47 PM
added xlim argument to plotSpikeStats e.g. `sim.analysis.plotSpikeStats(stats=['sync'], xlim=[0,1])`
sergio 4:48 PM
thanks!
salvadord 4:50 PM
also made it so func returns `fig, statData` where `statData` is a list with the values plotted, so you can plot/use any way you wnt
4:52
also doesn’t make sense to measure sync of PT before vs after plateau, if there are no spikes before plateau
billl 4:52 PM
the indicator of sync will have to be the inhib cells
4:53
as a reflection of input from excit -- maybe should reduce the noise into these cells so can see better?
4:53
or can inc the stim into E cells so get some spiking before plat
sergio 4:53 PM
ok

**** saveData error
File "init.py", line 37, in <module>
    sim.analysis.plotData()         			# plot spike raster etc
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 43, in plotData
    out = func(**kwargs)  # call function with user arguments
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 918, in plotSpikeStats
    _saveFigData(figData, saveData, 'spikeStats_'+stat)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 72, in _saveFigData
    fileName = sim.cfg.filename+'_'+type+'.pkl'
NameError: global name 'sim' is not defined

**** fixed

**** data saved as pickle
sim.analysis.plotSpikeStats(saveData=True)
Plotting spike stats...
Saving figure data as ../../data/v10/network21_spikeStats_rate.pkl ...
Saving figure data as ../../data/v10/network21_spikeStats_isicv.pkl ...

**** salva included xlim for plotSpikeStats
cfg.analysis['plotSpikeStats'] = {'include': ['PT5','PV5'],'timeRange': [100,200], 'graphType': 'boxplot','stats': ['rate'],#, 'isicv', 'sync','pairsync'],
		'popColors': {'PT5':'red','PV5': 'blue'},'figSize': (6,8), 'showFig': True,'saveData': False, 'saveFig': True, 'xlim':[0,50]}

*** decreasing noise inh and increase pre activity on PT5 cells 

weight long connectivity to was decreased from 1.4 to 1.0
cfg.weightLongInh = 1.0

increase weight to long connectivity on apical dend, but no  spiking on soma
 
* 11-09-17

goal: get pre-plateau activity and poster

** poster link

https://docs.google.com/presentation/d/1c4oMhjd7-94NzGmlHlhi6EnxQ-yny5xh94bDlOEZkqw/edit?usp=sharing

** preplateau activity

*** long connectivity to soma
**** weight 2.0
glutAmp: 1.0
[[./gif/network21_traces_trace_v_soma_loncon2.png]]
[[./gif/network21_raster_longcon2.png]]
***** results: no preplateau activity

**** weight 3.0
[[./gif/network21_traces_trace_v_soma_longcon3.png]]
[[./gif/network21_raster_longcon3.png]]
***** results: some preplateau activity

**** weight 4.0
[[./gif/network21_traces_trace_v_soma_longcon4.png]]
[[./gif/network21_raster_longcon4.png]] 
***** results better preplateau activity, plateau not so nice 

**** weight 4.0, glutAmp 1.5, IE 0.006
[[./gif/network21_traces_trace_v_soma_longcon4_glutamp15.png]]
[[./gif/network21_raster_loncon4_glutamp15.png]]
***** results: plateau is not clear, high exc activity 

*** joe reduced kdr by a factor of  0.2 to have faster hyperpolarizations

*** asked joe for params for the palteaus 

*** increased Rm factor to 20.0
**** long connectivity weight to 3.0
**** glutamp 1.0
[[./gif/network21_traces_trace_v_soma_Rm20_longcon3_glutamp1.png]]
[[./gif/network21_raster_rm20_longcon3_glutamp1.png]] 
***** Results: good preplateau activity, no good plateau

*** adding long connectivity to PT5 induce activity preplateau but plateau are poorly defined 

*** incresed IE weight
**** IE 0.01, long connnectivity 2.8, glutAmp 1.5
[[./gif/network21_traces_trace_v_soma_glutamp15_ie001.png]]
[[./gif/network21_raster_glutamp15_ie001.png]]
***** results: some preplateau activity better plateau

**** IE 0.01, long connnectivity 2.8, glutAmp 1.75
[[./gif/network21_traces_trace_v_soma_glutamp175.png]]
[[./gif/network21_raster_glutamp175.png]]
***** results: significantly better plateau 

**** plot for 1.5 s
[[./gif/network21_traces_trace_v_soma_15s.png]]
[[./gif/network21_raster_15s.png]]


*** xlim 
rate 0,120
isicv -0.1,2.5
pairsync 0.0,1.0
sync 0.0,1.0

*** plateau time (500,900)

*** stats plots
**** preplateau
rate
[[./gif/network21_spikeStat_rate_preplateau.png]]

isicv
[[./gif/network21_spikeStat_isicv_preplateau.png]]

pairsync
[[./gif/network21_spikeStat_pairsync_preplateau.png]]

sync
[[./gif/network21_spikeStat_sync_preplateau.png]]


**** plateau

rate
[[./gif/network21_spikeStat_rate_plateau_2.png]]

isicv
[[./gif/network21_spikeStat_isicv_plateau_2.png]]

pairsync
[[./gif/network21_spikeStat_pairsync_plateau_2.png]]

sync
[[./gif/network21_spikeStat_sync_plateau_2.png]]

*** discussion on slack

looks great
3:41
but stil not enough to talk about change in sync
sergio 3:41 PM
billl 3:41 PM
guess can just say that it is high sync
sergio 3:41 PM
the sync parameter did not change
billl 3:42 PM
why is sync such a small line?
sergio 3:42 PM
it is one number
billl 3:43 PM
oh right
sergio 3:45 PM
I will show the rate, isi cv, and pair sync in the poster
billl 3:47 PM
oh was thinking prob won't show -- nothing to see right?
sergio 3:48 PM
right
3:49
what if we show rate and isi-cv?
billl 3:49 PM
what is message?
3:49
what are you showing?
sergio 3:50 PM
I’m planning to do raster, soma volt trace, basal dend trace
billl 3:51 PM
that;s good; but was asking about rate and ISI-CV
sergio 3:51 PM
ic
billl 3:51 PM
any thoughts on what can say ?  what is interesting about those?
3:51
btw, how many different sims do you have to show?
3:52
which day is your poster?
sergio 3:52 PM
monday
billl 3:52 PM
ok so could print on sat or sun i guess
sergio 3:52 PM
rate is obvious to see from the raster
billl 3:53 PM
yes
3:54
and ISI-CV not very interpretable -- woul dbe measure of regularity
sergio 3:54 PM
ok
billl 3:54 PM
all of the cells being plateaued here
sergio 3:54 PM
yes
billl 3:55 PM
how about plateu some proportion and comparing sync of the ones in plateau from ones not in plateau at same time
sergio 3:55 PM
ok, let me do that

*** plan
 
induce plateau on a part of the PT5 pop and compare with the one that are plateaus.


** stim to cells gids 0-20

*** EE 0.2
[[./gif/network21_traces_trace_v_soma_plateauhalf.png]]
[[./gif/network21_raster_plateauhalf.png]]
**** resuts: no alll the cells got plateau with stim, no sync with cell no stim 

*** sim Label: network 22 

*** EE 0.5 glutAmp= 1.75
[[./gif/network22_traces_trace_v_soma_half_EE05.png]]
[[./gif/network22_raster_half_EE05.png]]
**** increasing EE, reults in higher sync, most of the cells on plateau, high exc drive.

*** EE 0.35 glutAmp= 1.75
[[./gif/network22_traces_trace_v_soma_EE035.png]]
[[./gif/network22_raster_EE035.png]]
**** less sync, same plateau 

*** EE 0.5, glutAMP 1.5
[[./gif/network22_traces_trace_v_soma_EE05_glutamp15.png]]
[[./gif/network22_raster_EE05_glutamp15.png]]
**** good sync, better plateau

*** EE 0.6, glutAmp = 1.2
[[./gif/network22_traces_trace_v_soma_EE06_glutamp12.png]]
[[./gif/network22_raster_EE06_glutamp12.png]]
**** increased sync, smaller plateau

*** EE 0.6, glutAmp = 1.4
[[./gif/network22_traces_trace_v_soma_EE06_glutamp14.png]]
[[./gif/network22_raster_EE06_glutamp14.png]]
**** nicer plateau

*** EE 0.65, glutAmp 1.4
[[./gif/network22_traces_trace_v_soma_EE065_glutamp14.png]]
[[./gif/network22_raster_EE065_glutamp14.png]]
**** increased sync

*** EE 0.65, glutAmp 1.4, 1.5s
[[./gif/network22_raster_15s.png]]
[[./gif/network22_traces_trace_v_soma_cell_5_28.png]]
[[./gif/network22_traces_trace_v_soma_7_40.png]]
[[./gif/network22_traces_trace_v_soma_plateau_cell_10_26.png]]

*** EE 0.65, glutAmp 0.0, 1.5s
[[./gif/network22_raster_EE065_glut0.png]]
[[./gif/network22_traces_trace_v_soma_EE065_glut0_cell_5_28.png]]
[[./gif/network22_traces_trace_v_soma_EE065_glut0_cell_5_40.png]]
**** increased bakcground

*** EE 0.2, glutAmp 0.0, 1,5s
[[./gif/network22_raster_EE02_glut0.png]]
[[./gif/network22_traces_trace_v_soma_EE02_glut0.png]]
**** decrased background activity

*** EE 0.2, glutAmp 1.4, 1.5s
[[./gif/network22_traces_trace_v_soma_EE02_glut14.png]]
[[./gif/network22_raster_EE02_glut14.png]]
**** nice plateau, but less activity

* 11-10-17

goal: finish poster

** plot matrix connectivity

*** cfg analysis plot 
cfg.analysis['plotConn'] = {'includePre': L5, 'includePost': L5, 'feature': 'strength', 'groupBy': 'pop', 'graphType': 'matrix','synOrConn':'syn','figSize': (10,10), 'saveFig': True}

**** error messsage
Plotting connectivity matrix...
Traceback (most recent call last):
  File "init.py", line 37, in <module>
    sim.analysis.plotData()                     # plot spike raster etc
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 43, in plotData
    out = func(**kwargs)  # call function with user arguments
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 2030, in plotConn
    if connMatrix == None:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

**** fixed by salva

*** plot conn EE 0.2
[[./gif/network22_conn_strength_EE02.png]]

*** plot conn EE 0.65
[[./gif/network22_conn_strength_EE065.png]]
**** conn matrix seems similar between EE 0.2 and EE 0.65. 

** plot rate PSD

*** plateau
[[./gif/network22_spikePSD_plateau.png]]

*** pre plateau
[[./gif/network22_spikePSD_preplateau.png]]


* SfN

** posters

*** tang 2017 166.06
hippocampal-PFC (sharp-wave ripple) SWR, 

https://www.ncbi.nlm.nih.gov/pubmed/?term=tang+2017+swr+prefrontal

/u/sergioangulo/papers/tang2017.pdf

hippocampal-PFC sync is increased during awake SWR, and during initial learning

*** ferraris 116.05
hippocampal-PFC gamma oscilation sync non linear correlation

*** sussillo 346.23
LFADS: A deep learning technique to precisely estimate neural population dynamics on single trials
deep learning to analyze network activity

*** presentation poster
**** walter francesconi 
asked about glial cells
**** jazam at allen institute
**** haroom at njit
add plasticity
memory task

*** Mayank Mehta 523.12

extracellular recording of dendritic activity
higher frequency
equal during sleep at SWR and awake

*** curto, morrison 719.15
Predicting emergent sequences from network connectivity
algorithm to analysis sequence of activation of netwrok, seems something that can be apply to netpyne.
sink and source kind of analysis

*** BBP 
 Uses coreNeuron:
https://github.com/BlueBrain/CoreNeuron

optimization for Neuron that runs on C and C++ to speed up sims.
GPU support

*** allen institute
Uses Bionet to run NEURON
https://alleninstitute.github.io/bmtk/bionet.html

examples:
https://alleninstitute.github.io/bmtk/bionet_tutorial.html

*** Ding 726.06
Dendritic plateau in the SNP neurons

experimental and model work

dendritic GABA decrease firing rate and plateau.

suggested mech: increase Mg++ block of NMDA

/u/sergioangulo/papers/du2017.pdf

* 11-20-17

goals:

start analysis for network
read paper du 2017

check review of the paper:
/u/sergioangulo/papers/papers.dol

ideas:
To explore dendritic inhbition in the basal dend.

* 11-21-17

goals: plan for next sim, meeting

** discussion of plan in slack

@sergio -- you around this week? what's the plan now -- we still don't have any good sync in those i guess -- remind me ponter to your poster so we can look at your results again
sergio 10:41 AM
ok
sergio 10:41 AM
EEE_network_SfN_2017_poster

Presentation from Google Drive Click to open in Google Drive
sergio 10:42 AM
I was about to suggest to explore synaptic inhibition to the basal dendrites
sergio 10:43 AM
billl 10:43 AM
have a pdf copy on neurosim?  -- easier to view
10:43
what is that fig from?
sergio 10:43 AM
from this paper: /u/sergioangulo/papers/du2017.pdf
billl 10:43 AM
we have our frozen noise which includes inhib -- you mean want to make erev for that I more neg?
sergio 10:45 AM
no, I was reading this paper and they suggest that the local inhibition at the site of the induction of plateaus are important to control the amplitude of the plateaus
billl 10:46 AM
so you want to get rid of the frozen noise and replace with what? - you feel you have adequately explored it and didn't work?  any idea why didn't work?
sergio 10:47 AM
no, I don’t want to get rid of the the frozen noise
10:48
I think, we should continue exploring the sync with the frozen noise
billl 10:48 AM
ok so let's work with that -- oh you mean increase then internal inhib in the network?  how about getting sync with no network connectivity ?  did we do that ?
sergio 10:48 AM
here the pdf to the poster: /u/sergioangulo/projects/sergeee/eee/gif/EEE_network_SfN_2017_poster.pdf
billl 10:49 AM
thx
sergio 10:49 AM
no, we did not run a sim without connectivity and measuring sync
billl 10:50 AM
oh but do our cells differ in any way?
sergio 10:51 AM
I don’t understand what you mean with your qs
10:52
do you mean the difference in sync between conn and no conn?
billl 10:55 AM
if cells are identical and input is identical then they will behave identically
10:55
so cells should be somewhat different from one another
10:55
ie different vrest would be simplest
sergio 11:00 AM
from the last sims, all the cells have similar internal connectivity (number of exc and inh inputs). I added netstims (1 netstim per cell) to induce spontaneous bkg activity in the exc and inh cells. The synaptic noise is the same for all the exc cells.
billl 11:06 AM
spont bg? thought that was what the noise does?
11:06
what is the spont bg for?
11:08
previously we had talked about having maybe 100netstims indep on each cell to provide bg noise but then thought we had replaced that with our new noise mod file??
sergio 11:10 AM
we did replace the the netstims with the synaptic noise. But I couldn’t get any spontaneous spike activity with only synaptic noise
billl 11:13 AM
couldn't increase the strength?
sergio 11:18 AM
I didn’t modify the amp of the noise for the last sims. Let me take out the netstims to the exc cells, and run sims with different noise amps
bill
ok can also modify the E and I parts of the noise stim independently if you think I is critical for carving out the replicable spiking
11:20
would also be nice ot make the cells slighly different?  what do you think?  otherwise can t look at an unconnected network
sergio 11:23 AM
to make the cells slightly different, I can suggest modifying the internal connectivity rules. Now the parameters of connectivity are set based on convergence, but can try by probability of connectivity
billl 11:25 AM
i was meaning the individual cells
sergio 11:26 AM
oh ok
billl 11:26 AM
ie cells in nature are all diff from each other
11:26
easiest is just to wiggle around gleak and eleak a little bit
11:27
point being that if don't do that then can't work with a disconnected network and show anything -- of course will all fire same in disconn network if all have 1. same intrsinsics; 2. same inputs;   not sure worth doing that right now; guess 1st thing is just to figure out how to get the noise to work
sergio 11:31 AM
now I understand, but probably need some help to do it. At this moment, all the intrinsic properties modifications are applied to all the cells, like for the zero Ih currents.
	
billl 11:36 AM
ok so let's put that piece off for later but just try to get the noise to work for starters

** plan

modify noise amplitude to produce background activity in the network
modify gleak and eleak between cells to produce a range of different cell behaviour.

** network 23, v13
** variation of the synaptic noise
EE = 0.2


*** noise amp factor 1.0
[[./gif/network23_traces_noise1.png]]
[[./gif/network23_raster_noise1.png]]
no bkg activity

*** noise amp factor 2.0
[[./gif/network23_traces_noise2.png]]
[[./gif/network23_raster_noise2.png]]
small bkg activity

*** noise amp factor 3.0 
[[./gif/network23_traces_noise3.png]]
[[./gif/network23_raster_noise3.png]]
more bkg activity

** discussion on noise 

got some activity anyway
2:52
so this iwth no plats
sergio 2:52 PM
the cells are connected
2:52
no plateaus
2:52
just basal activity
billl 2:53 PM
you like the amount ?
2:53
similar to what you had  before?
sergio 2:53 PM
let me look for the previous raster
billl 2:53 PM
good to keep some records of average firing rates for the different sims -- esp the relatively successful sims
2:54
ave fireing rates and other stats -- CVs etc. -- all being run automaticaly by netpyne anyway i thin?
sergio 2:57 PM
billl 2:57 PM
that an old one?
sergio 2:57 PM
yep, it’s an old one
billl 2:57 PM
stats are easier than rasters esp rasters with such tiny dots :)
sergio 2:58 PM
yep, I’m going to save the the stats also
2:58
let me look for the stats of the old one
billl 2:58 PM
looks little less firing
sergio 3:01 PM
it looks like less firing, also for the old one I ran the sim for 1500ms, while for the new one only 500ms
billl 3:02 PM
oh ic
sergio 3:05 PM
for the new one (noise amp factor=3), there is some sync between groups of cells
billl 3:08 PM
ok geuss that's good
3:08
so can do comparison of sync without any plats and sync with plats
3:09
that was problem with way we did it before that didn't have enough to look at
3:09
guess would want to really amp up the noise so have simliar rates since inc rate would give more sync?
sergio 3:10 PM
sure let me do the comparison and see the sync between plateaus and no plateaus

** plan 
compare stats between plateau and no plateau

** stats noise amp factor 3

*** raster and trace
[[./gif/network23_raster_noise3_plateau.png]]
[[./gif/network23_traces_noise3_plateau.png]]

*** plot command from interactive python 
sim.analysis.plotSpikeStats(include=('PT5','PV5'), timeRange=[0,500], popColors = {'PT5':'red','PV5': 'blue'}, stats = ['rate'], saveFig =True, xlim = [0,80])


*** no plateau
[[./gif/network23_spikeStat_pairsync_noise3_bkg.png]]
[[./gif/network23_spikeStat_sync_noise3_bkg.png]]
[[./gif/network23_spikeStat_rate_noise3_bkg.png]]
[[./gif/network23_spikeStat_isicv_noise3_bkg.png]]

*** plateau

[[./gif/network23_spikeStat_rate_noise3_plateau.png]]
[[./gif/network23_spikeStat_pairsync_noise3_plateau.png]]
[[./gif/network23_spikeStat_sync_noise3_plateau.png]]
[[./gif/network23_spikeStat_isicv_noise3_plateau.png]]

*** conclussions
rate is different
no difference in pair-sync or sync
different distribution of isicv pre plateau and during plateaus

*** discussion on slack channel
	
billl 5:47 PM
how about no plateau vs plat?
5:48
how about putting plateau into a subset of cells
5:48
and comparing one subset to another subset
sergio 5:48 PM
ok, let me do it
billl 5:51 PM
also looks like getting bursts in that cell you show -- could also ask about sync of bursts in addition to sync of spikes
sergio 5:53 PM
ok, I will need to pick the gids of the cells to compare and the time of the bursts

*** plan

run sims to to induce plateau in a subset and compare between plateau and no plateau cells


*** plateau in subset of cells sims

activated cells 0-20

analyzed 2 set:

plateau = ('PT5',range(0,20))

noPlateau = ('PT5',range(20,41))

sim.analysis.plotSpikeStats(include=(plateau, noPlateau), timeRange=[500,1000], stats = ['sync'], saveFig =True, saveData = True, xlim = [0,100])

[[./gif/network23_raster_subsetact.png]]

[[./gif/network23_traces_subsetact.png]]

data was extracted and plotted from a different file:

/u/sergioangulo/projects/sergeee/eee/sim/layersim/bp_plateau.py

plot stats:

[[./gif/plateau_noise3_stats.png]]


*** discussion about bursts on slack

billl [7:04 PM] 
dont' pick by hand -- identify bursts algorithmically


[7:04] 
never do anything by hand -- that is not reproducible


sergio [7:06 PM] 
so the idea for the burt will be to identify a train (> 3 spikes) of high freq (>100Hz)?


billl [7:07 PM] 
you have to figure out what your bursts are -- doubt they are that fast?? -- anyway 1st you woiuld have to agree with me that there are bursts -- can try the other stuff first anyway


[7:08] 
i had burst analysis in this file but prob not worth bothering with -- looks impenetable even to me! -- /usr/site/nrniv/local/hoc/adapt.hoc


[7:09] 
sam had one here -- /(/usr/site/nrniv/local/hoc/samutils.hoc:412:11) /$o1 = spike times
//$o2 = output vector[num_bursts,spikes_per_burst,inter_spike_time,inter_burst_time]
func GetBurstInfo(){ local i,lg_thresh,sm_thresh,spikes_per_burst localobj v_inter_spike,v_inter_burst,v_intervals


[7:10] 
here's anohte rone --(/usr/site/nrniv/local/hoc/spkts.hoc:126:140) //** calcspkts(flag,index)  // run after spkts() so vec contains the times, vec1 contains the  indices
proc calcspkts () { local ii,jj,flag,index,p1,p2,mn,mx  p1 = allocvecs(2,1000) p2 = p1+1  if (numarg()==0) {    print "To be run after spkts(). \Assumes times in vec, indices in vec1. \calcspkts(flag,min,max)\nflags:\t1\tspk times\n\t2\tspk freq \\t3\tburst times\n\t4\tburst freq\nset calc_ave to get averages for freqs"    return


sergio [7:17 PM] 
for netpyne, I have the data saved as ‘spkt’ and ‘spkinds’ in a json file.  I am planning to use that data with one routine to identify the bursts on python. that sounds ok?


billl [7:41 PM] 
sure


[7:42] 
but how about the other ones -- did any o fthat work?  subets?


sergio [7:42 PM] 
yep, just working on the plotting part


new messages
billl [7:43 PM] 
k

* 11-22-17

** discussion slack about noise and plateau sync

	
billl 8:23 AM
ah good -- got a pos result now
8:23
great job!
sergio 10:17 AM
ok, now I need to work on the burst analysis. For the sync analysis, netpyne uses a time range to compare between trains.  I was thinking to compare the initial 20-30 ms after the induction of plateaus in the cells with initial burst
billl 10:46 AM
ok but maybe don't need the burst analysis -- are you still seeing bursts in the example above?
10:46
unless burst analysis is easy for you maybe should move on and come back to that when really needed
sergio 10:50 AM
they are some bursts in the cells. I can come back later for the burst analysis
billl 10:56 AM
sure
10:57
so what is next manipulation? -- this is done with connected network i guess? -- yes of course
sergio 10:57 AM
yes
salvadord 10:57 AM
how are u filtering plateau vs no-plateau?
sergio 10:58 AM
I was thinking I can do either the sync profile or work on the inhibition effect  on basal dend
billl 10:58 AM
he knows which ones he is activating
10:58
are you using same period to look at plat and nonplat?
10:58
ie the period of the plat
sergio 10:59 AM
I selected the cells with plateau vs no plateau with a time range after the induction of the plateau (500-1000ms)
billl 10:59 AM
so that is ~duration of plat?  500ms?
sergio 11:00 AM
it is different for every cell
billl 11:00 AM
but ~ ?
sergio 11:01 AM
300-400 ms
billl 11:01 AM
ok so make the comparison over 400 ms
sergio 11:01 AM
cell 0 have just an initial burst
billl 11:01 AM
but anyway looks good
11:01
why does cell0 have no plat?
sergio 11:03 AM
my hypo is that it is strong inh inputs, but need to plot the GABA currents and see inputs
billl 11:04 AM
ok again not a big deal to do immediately
11:04
what is next step?
11:04
how do we demonstrate EEE theory in this network?
sergio 11:07 AM
I was thinking to use the sync profile from the paper about spike sync analysis. Trying to analysis sync profile vs time and compare the different subsets of cells.
billl 11:07 AM
ideally we would like to see sync outside of frozen noise
11:08
how can we do that?
11:08
want to have several sync subsets
sergio 11:10 AM
your idea of using 500-1000 netstim is also something that we need to try
billl 11:11 AM
not sure why -- what is wrong with current approach?
11:11
we need to move forward
11:11
we can then circle back and fill in a lot of these blanks
sergio 11:11 AM
ok
billl 11:11 AM
i have to say that i don't have any great ideas offhand so let's think about together
11:12
@joe @penny @salvadord also welcome to think! :)
sergio 11:19 AM
the other idea is to analysis the sync induce by inputs from the thalamus or hippocampus. There were some posters at the sfn studying the correlation of SWR from the hippocampus with the PFC
billl 11:27 AM
sure so independent inputs
11:27
ok so several sets of frozen noise to different subsets of sims
11:27
of cells i mean
11:27
so need to scale up maybe?
11:28
4 sets of frozen noise each to 5 cells out of a total of ?E cells?
11:28
how many ecells do we have now?
sergio 11:28 AM
ecells = 41
billl 11:28 AM
whether this comes from thal or hpc is not an issue for us at present since we don't have good models of either of those
11:29
ok so prob want to inc ecells to at least 200 so can scale by 5
sergio 11:31 AM
ok let me work scaling up the network
billl 11:32 AM
it's just 1 number in the file :)
11:32
shouldnt be much work
11:32
prob says 1 now; needs to say 5
11:33
ok i'm being obnoxious
11:33
sorry
11:33
you will then need to rearragne the inputs
11:33
yeah so not totally trivial
11:33
ok, sorry again
sergio 11:33 AM
salva, do you know how to insert different noise in different subsets of the same cell pop?
billl 11:34 AM
it's a mod file
11:34
how are you identifying the subset for putting in the plats?  -- identify as a different pop?
11:35
if so prob have to put in as diff pops for each of the noises?
sergio 11:36 AM
now, I’m inserting the noise in the cellRule, so apply to the same cell type
11:37
should I import the cell and create 4 different cell types?
salvadord 11:43 AM
y if noise is part of cellRule, then will need 4 rules (and 4 pops of course)
11:44
if noise was added via stims then could just have 1 cellRule and 4 pops
sergio 11:45 AM
yep noise is part of cellRule
salvadord 11:45 AM
instead of importing 4 times cellRule you can make copy of 1st import — check how I do it for ‘PT5B_full’ and ‘PT5B_full2’ in m1/sim/netParams_cell.py
sergio 11:46 AM
thanks!
11:46
I'll take a look of it

** plan
scale up network to 200 exc cells
5 different subset of cells with different noise  

** network 24, v14

** checking m1/sim/netParams_cell.py
if cfg.ihGbarZD is not None and 'PT5B_full2' not in loadCellParams:
    import copy
    cellRule = copy.deepcopy(netParams.cellParams['PT5B_full'].todict())
    cellRule['conds']['cellType'] = ['PT2']
    netParams.cellParams['PT5B_full2'] = cellRule

key part using copy.deepcopy

** implementation of deepcopy 

cellParamLabels = ['PT5', 'PT5_2']

if 'PT5_2' in cellParamLabels:
  import copy
  cellRule = copy.deepcopy(netParams.cellParams['PT5'].todict())
  cellRule['conds']['cellType'] = ['PT5_2']
  netParams.cellParams['PT5_2'] = cellRule      
  netParams.cellParams['PT5_2']['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 'std_e': 0.012*cfg.noise_amp, 'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp, 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2'}}


now trying to run loop:

for k,label in enumerate(cellParamLabels): #range(len(cellParamLabels)-1):  
  if k == 0:
    pass
  else:  
    import copy
    cellRule = copy.deepcopy(netParams.cellParams['PT5'].todict())
    cellRule['conds']['cellType'] = [label]
    netParams.cellParams[label] = cellRule
    netParams.cellParams[label]['secs']['soma']['pointps'] = {}      
    netParams.cellParams[label]['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 'std_e': 0.012*cfg.noise_amp, 'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp, 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2'}}

added inside loop:
noiseamp = "cfg.noise_amp_"+str(k+1)

in this way can modify noise from cfg:

cfg.noise_amp_2 = 3.0
cfg.noise_amp_3 = 3.0
cfg.noise_amp_4 = 3.0
cfg.noise_amp_5 = 3.0


but have error:

TypeError                                 Traceback (most recent call last)
<ipython-input-1-5f137b9a3b6c> in <module>()
----> 1 execfile('netParams.py')

/u/sergioangulo/projects/sergeee/eee/sim/layersim/netParams.py in <module>()
    117     noiseamp = "cfg.noise_amp_"+str(k+1)
    118     #print noiseamp
--> 119     netParams.cellParams[label]['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 'std_e': 0.012*noiseamp, 'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp, 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2'}}
    120 """
    121 if 'PT5_3' in cellParamLabels:

TypeError: can't multiply sequence by non-int of type 'float'

better to use list of values:

cfg.noise_amp = [3.0,3.0,3.0,3.0,3.0]

an iterate over the values of the keys:

netParams.cellParams[label]['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 
    'std_e': 0.012*cfg.noise_amp[k],'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp[k], 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2'}}

** adding connectivity

created 2 lists:
excL5 = ['PT5','PT5_2','PT5_3','PT5_4','PT5_5']
inhL5 = ['PV5']

for every connectivity a loop over the lists:
for prePop in excL5:
      for postPop in excL5:
          ruleLabel = prePop+'->'+postPop
          netParams.connParams[ruleLabel] = {
              'preConds': {'pop': prePop},
              'postConds': {'pop': postPop},
              'synMech': ESynMech, 
              'weight': cfg.EEgain, 
              'synMechWeightFactor': cfg.ratiobdend,
              'delay': 'defaultDelay+dist_3D/propVelocity',
              'convergence': 12,
              'loc': 0.5,
              'sec': 'Bdend2'}

Change convergence
E-E = 2
E-I = 1
I-E = 4
I-I = 12

long connectivity working for now:

cellnumber = numcellsPT5*5
  cellnumber2 = numcellsPV5
  
  cellList = [2, 5, 11, 24, 28, 40]
  
  connList = [[] for i in range(numcellsPT5)]
  connList2 = [[] for i in range(cellnumber2)]
  
  for i in range(numcellsPT5): connList[i] = [i,i]
  for i in range(cellnumber2): connList2[i] = [(i+cellnumber),i]


need list for 1 netstim per cell, for now 1 netstim drive 5 PT5 cells

** next fixing the stim parameters
created list of cells to stim:

stim20 = []
for i in range(5): stim20.extend(range(i*40,(i*40)+20)) 

** plot 

[[./gif/network24_raster_noise1to3.png]]
[[./gif/network24_traces_cell5.png]]


* 11-27-17

goals: get network with sync by noise

** plot different cells from network 24
sim.analysis.plotTraces(saveFig = True, include = [85])

*** plateau induced 

**** cell 5
[[./gif/network24_traces_cell5_.png]]

**** cell 45
[[./gif/network24_traces_cell45.png]]

**** cell 85
[[./gif/network24_traces_cell85.png]]

**** cell 125
[[./gif/network24_traces_cell125.png]]

**** cell 165
[[./gif/network24_traces_cell165.png]]

*** non plateau cells
sim.analysis.plotTraces(saveFig = True, ylim = [-100, 30], include = [25])

**** cell 25
[[./gif/network24_traces_cell25.png]]

**** cell 65 
[[./gif/network24_traces_cell65.png]]

**** cell 105
[[./gif/network24_traces_cell105.png]]

**** cell 145
[[./gif/network24_traces_cell145.png]]

**** cell 185
[[./gif/network24_traces_cell185.png]]


** PT5 cell kdr reduced g by factor of 0.2
according to modifications by joe on single cell sims

[[./gif/network24_raster_kdr02.png]]
[[./gif/network24_traces_kdr02_cell5.png]]

** discusion on slack
	
billl 1:35 PM
so this is multisubset -- how's the sync within a subset? -- can show for each susbet

*** show stats for multisubset

** stats multisubset
plateau = (('PT5_1',range(0,20)),('PT5_2',range(40,60)),('PT5_3',range(80,100)),('PT5_4',range(120,140)),('PT5_5',range(160,180)))
noPlateau = (('PT5_1',range(20,40)),('PT5_2',range(60,80)),('PT5_3',range(100,120)),('PT5_4',range(140,160)),('PT5_5',range(180,200)))

sim.analysis.plotSpikeStats(include=('PT5_1'), timeRange=[500,1000], stats = ['rate'], saveFig =True, saveData = True)

sim.analysis.plotSpikeStats(include=('PT5_1'), timeRange=[500,1000], stats = ['rate'], saveFig =True, saveData = True)

*** error message
sim.analysis.plotSpikeStats(include=('PT5_1'))
Plotting spike stats...
Traceback (most recent call last):
  File "stdin", line 1, in <module>
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 996, in plotSpikeStats
    spkts,spkinds = zip(*[(spkt, spkind) for spkt, spkind in zip(spkts, spkinds) if timeRange[0] <= spkt <= timeRange[1]])
ValueError: need more than 0 values to unpack


*** solution
'include' should be on a list
cell gids were related to the population starting at 0.
 
plateau = [('PT5_1',range(0,20)),('PT5_2',range(0,20)),('PT5_3',range(0,20)),('PT5_4',range(0,20)),('PT5_5',range(0,20))]

sim.analysis.plotSpikeStats(include= plateau, timeRange=[500,1000], stats = ['rate'], saveFig =True, saveData = True)
sim.analysis.plotSpikeStats(include= plateau, timeRange=[500,1000], stats = ['isicv'], saveFig =True, saveData = True)

*** plot
plotted with: 
/u/sergioangulo/projects/sergeee/eee/sim/layersim/boxplot.py

[[./gif/bp_plateau_subset_noise.png]]

** discussion on slack

	
billl 5:03 PM
so some are more sync than others
sergio 5:03 PM
the subset 3 is more sync than the others
5:05
that correspond to a noise factor of 2.0
billl 5:05 PM
diff noise factos in the diff subsets?
sergio 5:06 PM
yep, subset PT5_1 has noise factor of 1.0, then increments by 0.5 up to 3.0 in the subset PT5_5
billl 5:07 PM
oh interesting -- so have a peak -- let's run a few sets to see if this is consistent
5:07
and also figure out why that is
5:08
the fig about shows PT1-5 - can add 2 types of control 1. no plat;  2. a plat but all cells in the plat with diff noise
5:08
how many cells?  how many cell per group?
5:09
time to increase these? or running too slow?
sergio 5:09 PM
every subset has 40 cells, 20 with plateau, 20 without it
billl 5:10 PM
so total of 200 cells?  no uninvolved cells?  prob need those too to show idea of double embedding ;  don't expect that will change thigns
sergio 5:11 PM
total 200 cells
5:11
yep, I didn’t induce the plateau in half of every subset
5:12
I think that what you mean by uninvolved cells
billl 5:12 PM
no, not same since i assume that that group is receiving identical noise to the plat group
sergio 5:12 PM
should I induce plateau to all cells?
billl 5:14 PM
no but would be nice to increase to maybe 1e3 cells and have maybe 200 cells each with own per-cell noise then could divide the 800 into 10 groups with 40 in plat and 40 not in plat?
sergio 5:17 PM
ok, I don’t understand what is the difference between the 10 groups
billl 5:17 PM
right now you have 5 groups -- suggesting 10 groups with sep noise
5:18
you want to test 5 noise levels?  so could test 2 of each in each sim
5:18
then could run 25 sims all with diff noise, 5 diff noise seeds x 5 diff wiring
5:18
so can see if your observation of a peak of noise response holds up
5:19
writ out a brief experimental plan based on what i just said and we can agree on it (feel free to make alterations in precise numbers or etc)
sergio 5:19 PM
ok, let me do that

** plan 

1000 cells

200 cells, each cell with own noise seed

800 cells. Divided in 10 groups, each group different noise level. Each group 80 cells, 40 cells plateau and 40 cells without it.

Then batch sim, run 5 X 5, 5 diff noise seeds x 5 diff wiring seed. 

*** how to change noise seed for synaptic noise?
*** 200 cells group need to be without stim?

*** discussion about seed in the synaptic noise mod file

	
billl 5:49 PM
that's part of the mod file right?
5:49
give me ponter to mod file ; that's easier to read
sergio 5:49 PM
ok
5:49
/u/sergioangulo/projects/eee/sim/mod/Gfluct.mod
5:52
to create a new seed for the noise, there is an option with 'new_seed' procedure. For this I will need to run different seed like new_seed(1) and then new_seed(2)
billl 6:03 PM
prob could find some slightly more clever numbers but yeah
6:03
so netpyne will let you set those as a param
salvadord 6:04 PM
hmm but seems like need to call new_seed() method?
6:04
where is set_seed() func defined?
sergio 6:04 PM
line 177
salvadord 6:04 PM
how is seed initialized by default?
6:05
line 177 — that defines new_seed() func but not set_seed()
sergio 6:05 PM
oh yes
6:06
I can’t find set_seed()
billl 6:06 PM
perhaps time to move this into our shared mod dir?  since prob others will also want to use it
6:06
new_seed is a number
6:07
and a proc!
6:07
that's weird
6:07
set_seed must be an NMODL builtin?
6:08
let's nocmodl it
sergio 6:09 PM
let me check on modeldb if there is something else
billl 6:09 PM
in scoprand.c
6:10
hmm not finding
6:11
ok here it is
billl 6:11 PM

 * SCOP_RANDOM()

 *

 *	Selects a random number from the uniform distribution on

 *	the interval [0,1]. A seed number can be specified by a

 *	call to the function set_seed(seed). Otherwise, a seed

 *	of 1 will be used.

billl 6:11 PM
so that's a buitin for NMODL
sergio 6:15 PM
so I can add new_seed() to netpyne, and just select values between 0 and 1?
billl 6:16 PM
this thing looks like written wrong
6:16
but better test it first
6:16
new_seed is both a # and a new_seed() proc
6:16
neither one of them is called as part of init
6:17
we shold prob move this to local/mod and modify so it makes sense
6:17
you see the problems here?  -- i would suggest we call new_seed() as part of initial  block and that we set RANGE seed to a value eg 1 -- then make new_seed() just use seed
6:18
but if everything working now then don't worry about all that
sergio 6:20 PM
ok let me try to use it as it is, if it doesn’t work , I will move new_seed() to the inital block
billl 6:20 PM
how about just set up 1 cell (in plain old NEURON) -- 1 section; put in the mod thing and then try changing the seed
6:20
i think you did htat before when we started testing this thing
6:20
don't wast time running 1000 cells just to check if seed is working
sergio 6:21 PM
yes,  I still have that cell, let me see how it works on it

*** plan
run sunaptic noise from cell test and check seed

*** running noise.py

simple cell
/u/sergioangulo/projects/sergeee/eee/sim/layersim/noise.py

added
gfl.new_seed(10)
or
gfl.new_seed(2)

plot noise:

seed#2
[[./gif/noise_2.png]]

seed#10
[[./gif/noise_10.png]]

*** discussion on slack

	
billl 6:44 PM
look differet
sergio 6:45 PM
yes, it is different
billl 6:45 PM
maybe blow up to -66 to -64 and superipose to amke sure
6:45
but ok -- did you do via the param or the proc?
sergio 6:48 PM
the procedure I think, just add `gfl.new_seed(10)` to the cell test file
billl 6:49 PM
ok so how to do that in netpyne?  -- can create a seed param for that pop right?
sergio 6:49 PM
yep, let me try it
billl 6:49 PM
then how do you get it to make the call?
6:49
to new_seed()
sergio 6:51 PM
hm, I don’t know for netpyne
billl 6:52 PM
@salva -- how to add a call?
6:53
sergio -- do you mind if we move this to mod/  then i'll modify so just uses the param
6:53
the way it is now seems very funny since doesn't explicitly do setseed if you don't call it so then don't know what it's using
sergio 6:54 PM
sure, let’s move it to mod/
billl 6:55 PM
done -- summary:     'Gfluct.mod added'
6:56
ok try it out ** v1124 make call to set_seed obligatory [mod/Gfluct.mod] (mod)
6:56
first make sure it works same as before :)
6:56
then change param new_seed and should get different pattern
6:57
since calls: INITIAL {
    set_seed(new_seed)
sergio 6:58 PM
ok let me change to mod/Gfluct.mod
billl 6:58 PM
should just remove from parameters.multi
6:58
sorr wrong
6:58
leave in parameters.multi
6:58
but remove fle from dir
6:59
and then mkmod will find the new one and make a pointer
6:59
if doing on your machine need to also do the hg pull
sergio 6:59 PM
ok, working from ‘zn’
new messages
billl 6:59 PM
k
7:01
i get this error now -- new_seed is a PARAMETER
new_seed is a PROCEDURE
7:02
ok fixed that
7:02
and pushed
7:03
now compiles anyway
sergio 7:03 PM
ok
billl 7:03 PM
told you was a bad idea to have same name

*** plan

remove mod file from directory
compile
run again

*** run cell
 no problem

*** netpyne
tried this:

cellRule['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 'std_e': 0.012*cfg.noise_amp[0], 'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp[0], 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2', 'new_seed': 2}}

**** error 
An exception occurred during the error checking process...

Creating network of 7 cell populations on 1 hosts...
Traceback (most recent call last):
  File "init.py", line 24, in <module>
    sim.net.createCells()              			# instantiate network cells based on defined populations
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 76, in createCells
    newCells = ipop.createCells() # create cells for this pop using Pop method
  File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 58, in createCells
    cells = self.createCellsFixedNum()
  File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 130, in createCellsFixedNum
    cells.append(self.cellModelClass(gid, cellTags)) # instantiate Cell object
  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 228, in __init__
    if create: self.create()  # create cell 
  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 259, in create
    self.createNEURONObj(prop)  # add sections, mechanisms, synaptic mechanisms, geometry and topolgy specified by this property set
  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 465, in createNEURONObj
    setattr(sec['pointps'][pointpName]['hPointp'], pointpParamName, pointpParamValue)
TypeError: not assignable

**** solution
I was compiling the old file still, need to remove mod file from dir and compile again.

**** discussion on slack
I compiled again but keep having this error
billl 7:22 PM
did it work ok with just the single cell?
sergio 7:22 PM
yep
billl 7:23 PM
what's the error?
7:24
name now is     RANGE seed
sergio 7:24 PM
it can’t assign ‘new_seed’ as a param
7:24
oh ok
billl 7:24 PM
right; not newseed
7:24
you sure it worked with single cell? :)  -- couldn't work without using the correct name
sergio 7:26 PM
it did work, but probably doing something wrong, let me double check
billl 7:30 PM
so if you wanted to change the seed now you should use the seen param instead of the call to new_seed() -- the old call will still work though so that's prob what you did\
sergio 7:34 PM
now working on netpyne, I was still compiling with the old mod file.
new messages
billl 7:34 PM
ic

**** new on netpyne
on cfg:
cfg.noise_seed = [1,2,3,4,5]

for the PT5_1:
cellRule['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 'std_e': 0.012*cfg.noise_amp[0], 'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp[0], 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2', 'seed': cfg.noise_seed[0]}}

**** plots noise seed 1 per subset

[[./gif/network24_raster_seed1persubset.png]]


* 11-28-17

goals: create the new network and meeting

** meeting

presented report:
https://docs.google.com/document/d/19HG7gZsBR-0TNRPGtZR_wJM5F3CrOxAy2W_LCBPwzrI/edit?usp=sharing

*** srdjan: frequency too fast
*** improve font size in traces and raster
*** srdjan: 
in network the incoming APs may lengthen the plat
in the isolated cell the activation of gdr will reduce length of plat
so a multiscale effect
*** salva asked for the sync stats in the raster plot with different seeds.
produce this figure.

** figure stats for one subset
added to cfg:
plateau = [('PT5_1',range(0,20)),('PT5_2',range(0,20)),('PT5_3',range(0,20)),('PT5_4',range(0,20)),('PT5_5',range(0,20))]
cfg.analysis['plotSpikeStats'] = {'include': plateau,'timeRange': [500,1000], 'graphType': 'boxplot','stats': ['rate', 'isicv', 'sync','pairsync'],
		'figSize': (6,8), 'showFig': False,'saveData': True, 'saveFig': True}#,'popColors': {'PT5':'red','PV5': 'blue'},'xlim':[0.0,1.0]}

Data was saved to pickle files.
Then unpickled on bp_plateau:
 
file1 = open('../../data/v14/network24_spikeStats_rate.pkl', 'rb')
file2 = open('../../data/v14/network24_spikeStats_isicv.pkl', 'rb')
file3 = open('../../data/v14/network24_spikeStats_pairsync.pkl', 'rb')
file4 = open('../../data/v14/network24_spikeStats_sync.pkl', 'rb')

rate = pickle.load(file1)
isicv = pickle.load(file2)
pairsync = pickle.load(file3)
sync = pickle.load(file4)

ax1 = boxplot_stats(rate['statData'], ax1, 'Rate (Hz)')

*** plot
[[./gif/bp_plateau_1seedpersubset.png]]
[[./gif/traces_1seedpersubset_tau01.png]]


keep pattern one increased sync on one subset

** discussion on slack about taus in noise 
the name of the point process is Gfluct2, despite the name of the file is Gfluct.mod
12:30
is that correct?
sergio 12:30 PM
yes
mohamed.sherif 12:30 PM
ok - thanks
12:31
do you have a link to where the parameters you have used for excit and inhib neurons (I assume they are different)? Or did you use the default ones in the mod file?
sergio 12:34 PM
there are default values in the original mod file, but you can check also the params on modeldb
12:34
https://senselab.med.yale.edu/modeldb/ShowModel.cshtml?model=8115&file=/fluct/demo_gfluct.oc#tabs-2
billl 12:34 PM
but you changed eg strength in your netpyne file
sergio 12:35 PM
yep, I multiplied the original values by different factors (1.0 to 3.0)
mohamed.sherif 12:36 PM
the original values of density, right? the rest (eg. reversal potential, average conductance, ....) are the default, right?
sergio 12:38 PM

Gfluct params used for the model in eee:

'std_e': 0.012*cfg.noise_amp, 

'std_i': 0.0264*cfg.noise_amp,

'tau_i': 10.49*cfg.noise_tau, 

'tau_e': 2.728*cfg.noise_tau,  

'E_e': -20, 

'E_i': -100, 

mohamed.sherif 12:39 PM
ic - ok - thanks
sergio 12:39 PM
I changed the reversal potential values to match the RMP of the cell
12:40
if you leave the original values, the cell is going to oscillate around -65mV
mohamed.sherif 12:40 PM
ic - thanks for the tip
12:41
one more question - did you put it in all compartments, or only in the soma?
sergio 12:41 PM
at the soma
billl 12:41 PM
since have AP gen in the soma and this meant to drive APs
mohamed.sherif 12:41 PM
ic - ok
sergio 12:44 PM
for the tau, I’m using a factor of 0.1 to make it faster. After Srdjan comments, the idea will be to go back to the original value?
billl 12:44 PM
what was orig value?
sergio 12:45 PM
‘tau_i’: 10.49*cfg.noise_tau,
‘tau_e’: 2.728*cfg.noise_tau,
billl 12:45 PM
i looked at the destexhe paper and they don't show a inviv example
12:45
there value was 10ms for taui and you cahnged to 1??  2.7 you changed to 0.27?
12:46
seems very perceptive of srdjan to have noticed that we cahnged that value!
sergio 12:50 PM
at the moment, we haven’t showed plots to srdjan with original values. We had a discussion about the taus when we started implementing the mod file. I can run some sims showing the effect of the taus.
billl 12:52 PM
yeah i recall
12:52
what were the orig taus?
12:53
srdjan noticed that we cahnged the value from one that was physiologically unrealistic
sergio 12:57 PM

 tau_e = 2.728 (ms)   

 tau_i = 10.49 (ms)   

sergio 12:58 PM
I used the values from the mod file
billl 12:58 PM
oh ic

** recap
tau noise was used from original mod file
try original value

** network 25
** tau factor 1.0 plots
[[./gif/network25_raster_noisetau1.png]]
[[./gif/network25_traces_noisetau1_cell5.png]]
[[./gif/traces_noisetau1.png]]
[[./gif/bp_plateau_noisetau1.png]]

** new plot file for traces
/u/sergioangulo/projects/sergeee/eee/sim/layersim/traces.py

import json file with data and plotted 

** comparison between taus
[[./gif/noise_tau_3.png]]
[[./gif/noise_tau_2.png]]
[[./gif/noise_tau.png]]

* 11-29-17

goal: scale up network

** v15, network 27

** increasing number of subsets

cellParamLabels = ['PT5_0','PT5_1', 'PT5_2', 'PT5_3', 'PT5_4', 'PT5_5','PT5_6','PT5_7','PT5_8','PT5_9''PT5_10']

cell number:
numcellsPT5_0 = 200
numcellsPT5 = 80
numcellsPV5 = 500

for k,label in enumerate(cellParamLabels):
  if k == 0:
    netParams.popParams[label]  = {'cellModel': 'HH_reduced', 'cellType': label,  'xRange': columnA, 'yRange': layer['5'], 'numCells': numcellsPT5_0} #'gridSpacing':10}# int(p*1.0*num['E'][1])}
  else:
    netParams.popParams[label]  = {'cellModel': 'HH_reduced', 'cellType': label,  'xRange': columnA, 'yRange': layer['5'], 'numCells': numcellsPT5} #'gridSpacing':10}# int(p*1.0*num['E'][1])}


** change connectivity rules

added list
excL5 = ['PT5_0','PT5_1', 'PT5_2', 'PT5_3', 'PT5_4', 'PT5_5','PT5_6','PT5_7','PT5_8','PT5_9''PT5_10']

covergence 
Exc->Exc: 1

** added analysis list

analysisList = [() for i in range(len(PT5))]
for k,v in enumerate(PT5): analysisList[k] = (v,range(0,40))

** adding noise to 200 cells
 
*** using stimSourceParams

**** insert gfluct as a mod file
if cfg.noise:
    netParams.stimSourceParams['noise'] = {'mod': 'Gfluct2'
      }
netParams.stimTargetParams['noise'+'_'+'PT5_1'] =  {
      'source': 'noise',
      'conds': {'pop': 'PT5_0'},
      'sec': 'soma',
      'loc': 0.5,
      }
**** error

no type

**** modification to use netstim
netParams.stimSourceParams['noise_fluct'] = {'type': 'NetStim', 'number': 1, 'start': 0, 'noise': 0, 'interval':1000}
   
netParams.stimTargetParams['noise_fluct'+'_'+'PT5_0'] =  {
          'source': 'noise_fluct',
          'synMech': 'noise',
          'conds': {'pop':'PT5_0'},
          'sec': 'soma',
          'loc': 0.5,
          }

**** error netcon
netcon = h.NetCon(netstim, postTarget) # create Netcon between netstim and target
RuntimeError: hoc error

**** insert as a type worked!
netParams.stimSourceParams['noise_fluct'] = {'type': 'Gfluct2'}
netParams.stimTargetParams['noise_fluct'+'_'+'PT5_0'] =  {
          'source': 'noise_fluct',
          'conds': {'pop':'PT5_0'},
          'sec': 'soma',
          'loc': 0.5,
          }

**** adding noise params:
netParams.stimSourceParams['noise_fluct'] = {'type': 'Gfluct2','std_e': 0.012*cfg.noise_amp[0], 'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp[0], 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2', 'seed': cfg.noise_seed[0]}

sim.analysis.plotTraces(include=[0], saveFig=True)

**** looping over to create a different seed per noise inserted

for i in range(numcellsPT5_0):
        netParams.stimSourceParams['noise_fluct'] = {'type': 'Gfluct2','std_e': 0.012*cfg.noise_amp[0], 'g_e0': 0.0121, 'tau_i': 10.49*cfg.noise_tau, 'tau_e': 2.728*cfg.noise_tau, 'std_i': 0.0264*cfg.noise_amp[0], 'g_i0': 0.0573, 'E_e': cfg.e_exc_noise, 'E_i': cfg.e_inh_noise, 'mod': 'Gfluct2', 'seed': i}#cfg.noise_seed[0]} 
        netParams.stimTargetParams['noise_fluct'+'_'+'PT5_0'] =  {
          'source': 'noise_fluct',
          'conds': {'pop':'PT5_0','cellList': [i]},
          'sec': 'soma',
          'loc': 0.5,
          }

** reduced number of netstim for inh pop
number of netstim =500

added control to only stim PV5 of PT5:
cfg.longConnPT5 = 0
cfg.longConnPV5 = 1 

if cfg.longConnPT5:
    for prePop in longPops:
        for postPop in excL5:
            ruleLabel = prePop+'->'+postPop
            netParams.connParams[ruleLabel] = {
                'preConds': {'pop': prePop},
                'postConds': {'pop': postPop},
                'synMech': ESynMech,
                'weight': cfg.weightLong, 
                'synMechWeightFactor':  cfg.ratioapical,
                'delay': 1, 
                'connList': connList,
                'loc': 0.5,
                'sec': 'soma'} 

  if cfg.longConnPV5:
    for prePop in longPops:
        for postPop in PV5:
            ruleLabel = prePop+'->'+postPop
            netParams.connParams[ruleLabel] = {
                'preConds': {'pop': prePop},
                'postConds': {'pop': postPop},
                'synMech': 'AMPA',
                'weight': cfg.weightLongInh,
                'delay': 1, 
                'connList': connList2,
                'loc': 0.5,
                'sec': 'dend'} 

** last fixes

*** add recording of voltage in Bdend1
*** add plotSpikeStats
analysisList = [() for i in range(len(PT5))]
for k,v in enumerate(PT5): analysisList[k] = (v,range(0,40))

cfg.analysis['plotSpikeStats'] = {'include': analysisList,'timeRange': [500,1000], 'graphType': 'boxplot','stats': ['rate', 'isicv', 'sync','pairsync'],
		'figSize': (6,8), 'showFig': False,'saveData': True, 'saveFig': False}#,'popColors': {'PT5':'red','PV5': 'blue'},'xlim':[0.0,1.0]}

** running sim
*** error
got error at analyzing stats. Included PT5_0 in the analysis.
also netstim was not set properly, and doing stim to PT5_0

[[./gif/network27_raster_error.png]]

changed stimlist:
for i in range(10): stim40.extend(range(200+(i*80),(200+(i*80))+40)) 

also changed analysisList:
analysisList = [() for i in range(len(PT5))]
for k,v in enumerate(PT5): 
	if not k == 0: 
		analysisList[k] = (v,range(0,40))
*** running again, error stats
[[./gif/network27_raster_noise1t03.png]]

[[./gif/network27_traces_noise1to3_cell205.png]]

* 11-30-17

goal: finish large network and run batch

** sim tau 0.1

** slack question
any idea on how to measure adequacy of the Gfluct output sergio?  -- won't be identical since switching to a different randomizer; guess may just have to look at the distrib of the RV

** plotting stats interactively

sim.analysis.plotSpikeStats()

*** found error creating list of cells to analyze
at creating list of pops with cells, first element was an empty tupple.

change to this:
analysisList = [() for i in range((len(PT5))-1)]
for k,v in enumerate(PT5): 
	if not k == 0: analysisList[k-1] = (v,range(0,40)) 
*** plot again interactively
sim.analysis.plotSpikeStats(include=analysisList,timeRange=[500,1000], stats =   ['rate', 'isicv', 'sync','pairsync'], showFig= False,saveData= True, saveFig= False)

*** plot stats with bp_plateau.py
added colorList:
colorList = plt.cm.Set3(np.linspace(0, 1, 12))

[[./gif/bp_plateau_network27_noise1to3_tau01.png]] 

** plot traces

not all the traces were recorded, re-running sim

*** added 5x2 array subplot:
fig,((ax1,ax6),(ax2,ax7),(ax3,ax8),(ax4,ax9),(ax5,ax10)) = plt.subplots(5,2, sharey = False, sharex = True, figsize = (8,9))

[[./gif/traces_network27_noise1to3_tau01.png]]

** plot raster
[[./gif/network27_raster_tau01.png]]

** noise tau 1.0 sim
[[./gif/traces_tau1.png]]
[[./gif/bp_plateau_tau1.png]]
[[./gif/network27_raster_tau1.png]]

** comparisson tau 0.1 and 1


** checking batch

*** initial configuration
batch = {}
batch["label"] = "noise_seed"
batch["cfgFile"] = "cfg.py"
batch["netParamsFile"] = "netParams.py"
params = OrderedDict()
params['noise_seed'] = [range(0,11)]
params.seeds['conn'] = [4123]
batch["params"] = params
batches[batch["label"]] = batch


*** error message

Traceback (most recent call last):
  File "my_batches.py", line 98, in <module>
    params.seeds['conn'] = [4123]#,3412]
AttributeError: 'OrderedDict' object has no attribute 'seeds'

**** seeds might be in another dict

*** added cfg.seed_wiring  
cfg.seed_wiring = 4123
cfg.seeds = {'conn': cfg.seed_wiring, 
			'stim': 1234, 
			'loc': 3214}

**** sim and batch running 

**** params for batch 5x5
params['noise_seed'] = [range(0,11),range(20,31),range(40,51),range(60,71),range(80,91)]
params['seed_wiring'] = [4123,3412,1234,2341,1423]

**** error while running single sim

No more errno warnings during this execution
exp(1455.17) out of range, returning exp(700)
exp(1371.7) out of range, returning exp(700)
exp(1217.43) out of range, returning exp(700)
exp(1074.86) out of range, returning exp(700)

**** checking Gfluct files
comparing previous Gfluct (GfluctOLD) with updated version (Gfluct) and WIP (Gfluctp)
[[./gif/noise_gfluct_comparisson.png]]

**** using old Gfluct

* 12-1-17

goal: analyze the batch

** added procedure oup() to Gfluct

[[./gif/noise_gfluct_oup.png]]

** bill fixed of gfluct

[[./gif/noise_gfluct_fix.png]]

** discussion about single sim on network

sep cross group from in group sync?


sergio [12:46 PM] 
the stats are from cells with stim to induce plateau


billl [12:47 PM] 
5 groups?


sergio [12:49 PM] 
10 subsets


[12:51] 
stats are from sync inside the subset


billl [12:52 PM] 
k so also show a fww between so see that witrhin is better


sergio [12:52 PM] 
ok

** plan
show stats to compare between subset sync

analyze stats including gids list

allsubsets = []
for i in range(10): allsubsets.extend(range(200+(i*80),(200+(i*80))+40)) 

*** error message
need more than 0 values to unpack

*** asking salva

salva included a new feature in netpyne to compbyne trains from different pops

format:

include=[['E4','E2'], [1,3]] 


*** error runing single sim

/usr/lib/python2.7/importlib/__init__.pyc in import_module(name, package)
     35             level += 1
     36         name = _resolve_name(name[level:], package, level)
---> 37     __import__(name)
     38     return sys.modules[name]

/u/sergioangulo/projects/sergeee/eee/sim/cells/eee7ps.py in <module>()
     12
     13 Vrest       = -88.5366550238
---> 14 h.v_init    = -75.0413649414
     15 h.celsius   = 32.0
     16

LookupError: 'v_init' is not a defined hoc variable name.

**** fix
***** salva discussion on slack
this prob due to recent removal of call to h.load(‘stdrun.hoc’) from netpyne — try adding that line to the cell model being imported

***** stdrun.hoc added to eee7ps.py
h.load_file('stdrun.hoc')

**** running and working

*** trying salvas method
**** error message
sim.analysis.plotSpikeStats(include=[['PT5_1','PT5_2'],[1]])
Plotting spike stats...
Traceback (most recent call last):
  File "stdin", line 1, in <module>
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 1008, in plotSpikeStats
    spkts,spkinds = zip(*[(spkt, spkind) for spkt, spkind in zip(spkts, spkinds) if timeRange[0] <= spkt <= timeRange[1]])
ValueError: need more than 0 values to unpack

*** trying by gid
sim.analysis.plotSpikeStats(include=[[200,205,300,500]])
Plotting spike stats...
(<matplotlib.figure.Figure object at 0x7feaa1594810>, [[1.1219152130145094, 0.0]])

now can access data by array 
include = [[0,1,2],[3,4,5]]

*** creating array
**** all exc cells with plateau
allsubsets = [[],[],[],[],[],[],[],[]]
for i in range(10): allsubsets[0].extend(range(200+(i*80),(200+(i*80))+40))

**** half 1st pops exc cells (1 to 5)
for i in range(5): allsubsets[1].extend(range(200+(i*80),(200+(i*80))+40))

**** half 2nd pops exc cells (6 to 10)
for i in range(5): allsubsets[2].extend(range(600+(i*80),(600+(i*80))+40))

**** every 2 pops
for p in range(5):
for i in range(2): allsubsets[p+3].extend(range(200+(p*160)+(i*80),(200+(p*160)+(i*80))+40))

*** running command 
sim.analysis.plotSpikeStats(include=allsubsets,timeRange=[500,1000],stats=['rate', 'isicv', 'sync','pairsync'],showFig=False,saveData=True,saveFig=True)


*** plotting
[[./gif/bp_plateau_sync_grouped.png]]

** possible ideas
run stats stats
run spike analysis
 
* 12-04-17

goal: paper outline on latex

** discussion on slack
	
billl 9:11 AM
@sergio -- start also setting up your paper repo (copy from joe) -- and let's start selecting figures for that
joe 9:17 AM
@billl, here’s the existing gdoc with figures:
https://docs.google.com/document/d/1lx1tQutiy1Qd9iSM3HJMyghEMA5EHKr4eN9qPQdhbPQ/edit#
joe 9:17 AM
EEE Article

Document from Google Drive Click to open in Google Drive
joe 9:18 AM
I’ll pull in the figures from the SfN poster.
billl 9:19 AM
great -- ok so why dont' we move all this over to overdrive now?
9:19
prob just gets harder to move in there later
9:19
or else leave the figs here? and just put text in .tex
9:19
*overleaf
9:20
the many 5x6 panels you have here are not good for pub -- we need to find message for each of them and figure out how to convey that message
joe 9:20 AM
I haven’t worked with Overleaf too much yet, but it seems like it would be easier to play around with figures in gdocs.
billl 9:20 AM
we can do those 1 at a time
joe 9:20 AM
I’ll pull the existing text into Overleaf.
billl 9:20 AM
yeah let's keep figs in gdocs -- that's good
billl 9:20 AM
with the outline stuff you have for eg intro just make that % levels or %% .etc
5 replies
Last reply today at 9:33 AM View thread
joe 9:20 AM
So we’ll use Overleaf for text and final figures and gdocs for figure development.
billl 9:21 AM
gdocs can be final figs too since can submit with figs at end instead of inline -- can see what seems better later
joe 9:21 AM
Ohhh, good point!
sergio 10:23 AM
ok, I’m going to start working on it
joe 10:34 AM
Nice intro to Latex in Overleaf: https://www.overleaf.com/latex/learn/free-online-introduction-to-latex-part-1
overleaf.com
Free Online Introduction to LaTeX - Part 1: The Basics - Overleaf
Free online course to learn LaTeX with interactive online exercises. Learn to typeset text and equations, set up documents, and use LaTeX packages. (203 kB)
sergio 10:35 AM
perfect, I’m a newbie to latext
sergio 10:35 AM
I’ve never used it before
1 reply
Today at 11:04 AM View thread
billl 10:36 AM
easiest is to 1. copy one that's already working;  2. ask me :) -- problem is i will use a lot of little abbrevs in our neuro.tex misc.tex files that cover most things we write a lot eg \inviv\ \invit\ \etal\ \etc\
10:37
basic standard commands {\bf BOLD FACE}  {\it ITALICS}  {\em ITALICS}  -- as you see some have more than 1 command that does same thing
sergio 10:38 AM
thanks, I’m taking a look of Joe’s overleaf file, and I’ll be asking questions
billl 10:38 AM
\note{this is a note} is useful for comments
10:39
if you've ever written html it's same idea -- a markup language
sergio 10:41 AM
and neuro.tex and misc.tex are on neurosim?
joe 10:42 AM
They’re included in Salva’s Overleaf project already, so also in mine when I cloned.
billl 10:43 AM
note that you guys will be using a copy of these shared files /usr/site/config/latex/misc.tex  /usr/site/config/latex/neuro.tex so if change it will need to copy back to the main repo  -- maybe eventually figure out how to share as we do with mod files but for now this is easier just to copy back
10:44
i never heard back from the overleaf person about pricing -- i'll email her again
joe 10:44 AM
:+1:
sergio 10:44 AM
ok
billl 10:48 AM
oh btw the main point of latex is for math so very good for laying out equations -- again much easier/better to take from our prior ones rather than write from scratch -- this is mostly the methods sectoin where all the different channel equations are given

** plan

learn how to work wth overleaf
start paper layout 
start selecting figures 

** overleaf tutorial
https://www.overleaf.com/latex/learn/free-online-introduction-to-latex-part-1

** project link on overleaf

https://www.overleaf.com/12612035njxsyrmvfvwf

git

https://git.overleaf.com/12612035njxsyrmvfvwf

** outline for draft

*** Network architecture
**** Network connectivity and distribution of cells along a single cells layer
*** Small network and dendritic plateaus
**** induction of plateaus in a small network 
**** modulation by synaptic noise (amplitude by frequency)
*** Large network dendritic plateaus and synchronization of ensembles
**** synaptic noise in synchronization
**** long range inputs
**** network ensemble synchronization across subsets

* 12-05-17
goals: continue woking on manuscript/figures metting 

** overleaf repo

https://www.overleaf.com/blog/195-new-collaborate-online-and-offline-with-overleaf-and-git-beta

cloned repo to ~/projects/mncripts/12612035njxsyrmvfvwf

command:
git clone https://git.overleaf.com/12612035njxsyrmvfvwf
 
can commit, add files, and push to main project

commit:

git commit -am "message here"

push:

git push
 
** report doc for meeting
https://docs.google.com/document/d/10NGcfofFPJk_o3jZlVT9o2t5k0luQFv0l_4KQ8dRYMU/edit?usp=sharing

** Gfluct thread safe 

*** error message while compiling
"/usr/site/../arch/nrn/x86_64/bin/nocmodl" Gfluct
Translating Gfluct.mod into Gfluct.c
Notice: set_seed is not thread safe
Notice: normrand is not thread safe
Notice: normrand is not thread safe
Notice: normrand is not thread safe
Notice: normrand is not thread safe
Notice: set_seed is not thread safe
Notice: VERBATIM blocks are not thread safe
Notice: This mechanism cannot be used with CVODE
"/usr/site/../arch/nrn/share/nrn/libtool" --tag=CC --mode=compile mpicc -DHAVE_CONFIG_H -I//usr/site/nrniv/local/mod -I. -I.. -I"/usr/site/../arch/nrn/include/nrn" -I"/usr/site/../arch/nrn/x86_64/lib"      -g -O2 -c -o Gfluct.lo Gfluct.c
libtool: compile:  mpicc -DHAVE_CONFIG_H -I//usr/site/nrniv/local/mod -I. -I.. -I/usr/site/../arch/nrn/include/nrn -I/usr/site/../arch/nrn/x86_64/lib -g -O2 -c Gfluct.c  -fPIC -DPIC -o .libs/Gfluct.o

*** running time Gfluct.mod 1826s on 24 cores 'my'

*** bill on slack about Gfluct

hi Sergio - are you able to run Gfluct with threading?


[2:06] 
I keep getting error about Gfluct not being thread safe


sergio [2:14 PM] 
I haven’t done it yet, let me try it


mohamed.sherif [2:15 PM] 
ok - thanks


billl [3:05 PM] 
Gfluctp not Gfluct regular


[3:05] 
maybe try running my test program


[3:05] 
/usr/site/nrniv/local/mod/Gfluctp.mod   /u/billl/nrniv/ihM1/noise.py


sergio [3:08 PM] 
ok, I was trying still the Gfluct.mod.

*** Plan is to use Gfluctp.mod

** network 27, Gfluctp 
 
*** added Gfluctp to parameters.multi
*** compiling
*** running
**** error message
File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 465, in createNEURONObj
    setattr(sec['pointps'][pointpName]['hPointp'], pointpParamName, pointpParamValue)
LookupError: 'seed' is not a defined hoc variable name.
**** checking bill example
sec.insert('hh')
  sec.gnabar_hh = 0.0
  g=h.Gfluctp(sec(0.5),n)
  gfl.append(g)
  g.noiseFromRandom123(*seeds[3*n:3*n+3])

**** ask bill about seed
sergio 3:39 PM
about Gfluctp, is it possible to use `noiseFromRandom123` as a parameter to call different seeds?
billl 3:42 PM
you're asking a netpyne question -- seeds are params -- noise...() is a funciton
sergio 3:44 PM
yep, is it possible to call the function from netpyne?
billl 3:48 PM
how do you call other funcs from netpyne? -- part of init procedure?
sergio 3:50 PM
I only modify the values for the params on RANGE
3:51
I was using giving a different value for each seed with Gfluct.mod
billl 3:56 PM
so you have no params that belong to .py routines?
3:57
you just need to set up your file so you have some named params and then they will get called in the init routine
3:57
your own init routine i mean
3:57
or you could have the gfluct belong to the cell
3:57
then would be a cell param
3:58
mh had some suggestions about using the 3 seeds - i think said that only really need the 1 seed
3:58
let me try that now
sergio 3:58 PM
ok
new messages
billl 4:01 PM
@salvadord - basic question -- how to set up seeds in netpyne?sergio 3:39 PM
about Gfluctp, is it possible to use `noiseFromRandom123` as a parameter to call different seeds?
billl 3:42 PM
you're asking a netpyne question -- seeds are params -- noise...() is a funciton
sergio 3:44 PM
yep, is it possible to call the function from netpyne?
billl 3:48 PM
how do you call other funcs from netpyne? -- part of init procedure?
sergio 3:50 PM
I only modify the values for the params on RANGE
3:51
I was using giving a different value for each seed with Gfluct.mod
billl 3:56 PM
so you have no params that belong to .py routines?
3:57
you just need to set up your file so you have some named params and then they will get called in the init routine
3:57
your own init routine i mean
3:57
or you could have the gfluct belong to the cell
3:57
then would be a cell param
3:58
mh had some suggestions about using the 3 seeds - i think said that only really need the 1 seed
3:58
let me try that now
sergio 3:58 PM
ok

*** Gfluctp running time 1579 s 
*** plots
[[./gif/network27_raster_gfluctp.png]]
no spikes, checking traces

[[./gif/traces_gfluctp.png]]
plateaus but not spikes

** network28

*** run 100ms, plot one cell, no generation of noise 

[[./gif/traces_gfluctp.png]]



*** slack discussion about fih
	
billl 5:24 PM
@sergio -- figure out how to do fih?
5:24
i'm confused about how to set up seeds as params in constructor
sergio 5:25 PM
not yet let me try it
billl 5:26 PM
i need to go to sleep -- sorry couldn't get fixed yet -- fixed PROCEDURE noiseFromRandom123 () but not remembering how to call it
5:26
should now be able to call noiseFromRandom123()  with no args and it will use the seed1,seed2,seed3 range vars but i didn't test that yet
sergio 5:27 PM
np
5:27
ok Iet me do that
billl 5:30 PM
so sims.fih takes function names?  distinguishes the different levels of finithandlers? (@salvadord) ?

*** fih
can call function with sim.fih
fih:
https://www.neuron.yale.edu/neuron/static/docs/help/neuron/neuron/classes/finithnd.html 

sintax on netpyne:
sim.fih.append(h.FInitializeHandler(1, sim.printRunTime))

* 10-06-17
goal: implement gflutp and work on batch analysis 

** discussion on slack about fih
sergio i was mistaken about the fih -- this is not something that can be done at the time INITIAL and also cannot be done at time of CONSTRUCTOR


[3:06] 
so for building the network you presumably want the Gflucts to be part of the individual cells and can set up the seeds when set up the cell


[3:07] 
for multiple runs can use global fifth integer to get independence between runs -- this could be called in an fih -- r.Random123_globalindex([uint32])

ok - fixed using globalindex(netseed)


[9:35] 
so would set this differently for each different noise -- if could use 123 for netstims etc too could control all of it thru this one call -- ran.Random123_globalindex(netseed)


[9:36] 
need to set this up before creating the Gfluct randoms

** second part of discussion

oh you mean in sergio model?


[10:36] 
did you check -- maye magically working? :)


[10:37] 
i think would not be working -- other way would be to include it in the spi7 cell and have the calls in there as part of creating the cell


salvadord [10:40 AM] 
spi7 - that woudlnt work since spi7 only gets executed during import to read params into netpyne


[10:40] 
if save netpyne cell params (as I do for m1) dont need orig spi7 code anymore


billl [10:41 AM] 
oh right


[10:41] 
ok so fih

sergio [10:42 AM] 
for the fih, should I call the function after sim.initialize()?


salvadord [10:47 AM] 
I think actually anywhere before the sim.runSim() should work


sergio [10:48 AM] 
ok


salvadord [10:48 AM] 
if you need to reference the gfluct objects instantiated then should be after sim.create()


[10:49] 
(or if adding as stims, then after the sim.net.addStims())


sergio [10:49 AM] 
ok


[10:52] 
also fih is going to be a type 1?


sergio [10:53 AM] 
added this Plain Text snippet
Type 1 handlers are called after the mechanism INITIAL blocks. This is the best place to change state values.


billl [10:54 AM] 
any of those types are ok


** setting fih 

working on init.py

after cretatin cells 
sim.fih.append(h.FInitializeHandler(1,ran.Random123_globalindex(netseed)))

*** error message
sim.fih.append(h.FInitializeHandler(1,ran.Random123_globalindex(netseed)))
NameError: name 'ran' is not defined

*** discussion on slack
oh


[11:03] 
have to creat e ran


[11:03] 
h.Random((


[11:03] 
can def myinit():


[11:04] 
to do everything
*** added ran = h.Random()
*** runnin sim and get error
sim.fih.append(h.FInitializeHandler(1,ran.Random123_globalindex(netseed)))
NameError: name 'netseed' is not defined
*** compiling again and running, and same error
*** defined netseed =10
*** runnig and error
nrniv: Expecting string argument
 near line 0
 ko0_k_ion = 2.5
                ^
        FInitializeHandler(1, 10)
Traceback (most recent call last):
  File "init.py", line 34, in <module>
    sim.fih.append(h.FInitializeHandler(1,ran.Random123_globalindex(netseed)))
RuntimeError: hoc error
nrniv: Expecting string argument
 near line 0
 ko0_k_ion = 2.5
                ^
        FInitializeHandler(1, 10)
Traceback (most recent call last):
  File "init.py", line 34, in <module>
    sim.fih.append(h.FInitializeHandler(1,ran.Random123_globalindex(netseed)))
RuntimeError: hoc error

*** salva suggestion for fih 

salvadord [11:20 AM] 
oh maybe you do have access if use fih…


salvadord [11:22 AM] 
added this Plain Text snippet: somethign like this?
def myinit():
  iterate over gfluct mechs in sim.net.cells:
    gflucmech.noiseFromRandom123(cell.gid, gfluc.gid, sim.cfg.gflucSeed)
sim.fih.append(h.FInitializeHandler(1, myinit))
Add Comment Collapse



sergio [11:25 AM] 
and then add fih as `sim.fih.append(h.FInitializeHandler(1,myinit())?


salvadord [11:25 AM] 
y that also in snippet above


sergio [11:25 AM] 
oksalvadord [11:20 AM] 
oh maybe you do have access if use fih…


salvadord [11:22 AM] 
added this Plain Text snippet: somethign like this?
def myinit():
  iterate over gfluct mechs in sim.net.cells:
    gflucmech.noiseFromRandom123(cell.gid, gfluc.gid, sim.cfg.gflucSeed)
sim.fih.append(h.FInitializeHandler(1, myinit))

*** try it 
**** iterates over sim.net.cells objetcs:
for i in sim.net.cells:
**** access to pointps 
i.secs.soma.pointps.noise
**** no all the cells can acces

**** salva's method
salvadord [3:50 PM] 
right, so before accessing, check if exists


salvadord [3:54 PM] 
added this Plain Text snippet: something like this
def myinit():
 for c in sim.net.cells:
  for isec,sec in enumerate(c.secs.values()):
    for ip, pointp in enumerate(sec.pointps.values()):
      if pointp['mod'] == 'Gfluctp':
       c.secs[sec].pointps[pointp].hPointp.noisefromRandom123(c.gid, isec, ip) 

**** adding .values() after enumerate works

**** error while executting
def myinit():
	for c in sim.net.cells:
		for isec,sec in enumerate(c.secs.values()):
			#if sec['pointps'] == 'noise':
			#print sec.pointps
			for ip, pointp in enumerate(sec.pointps.values()):
				if pointp['mod'] == 'Gfluctp':
					print c.secs[sec]


Traceback (most recent call last):
  File "init.py", line 71, in <module>
    myinit()
  File "init.py", line 40, in myinit
    print c.secs[sec]
TypeError: unhashable type: 'Dict'

**** salva suggestion

def myinit():
  for c in sim.net.cells:
    for isec,sec in enumerate(c.secs.values()):
        for ip, pointp in enumerate(sec.pointps.values()):
            if pointp['mod'] == 'Gfluctp':
                sec.pointps['noise'].hPointp.noisefromRandom123(c.gid, isec, ip) 

**** error
File "init.py", line 39, in myinit
    sec.pointps['noise'].hPointp.noisefromRandom123(c.gid, isec, ip) 
    sec.pointps['noise'].hPointp.noisefromRandom123(c.gid, isec, ip) 
AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

**** compiling again
**** same error

* 12-07-17

goal: keep working on seeds for gfluctp

** discussion on slack
	
billl 8:35 AM
just need 2 -- 1 to individualize the stream for a particular cell;  other is the global seed so can set different random networks
8:35
so of the 3 seeds seed1 seed2 seed3 just one of those
8:36
sergio can you print out pointp.hPointp to make sure you have the right one
billl 9:29 AM
sergio?? -- working now?
sergio 9:42 AM

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  sim.fih.append(h.FInitializeHandler(1,myinit()))

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

Traceback (most recent call last):

 File "init.py", line 41, in <module>

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>>   sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

  sim.fih.append(h.FInitializeHandler(1,myinit()))

>>>  File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> Traceback (most recent call last):

 File "init.py", line 41, in <module>

  sim.fih.append(h.FInitializeHandler(1,myinit()))

 File "init.py", line 38, in myinit

  pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

>>> 

sergio 9:45 AM

{loc: 0.5, std_e: 0.036000000000000004, g_e0: 0.0121, tau_i: 10.49, hPointp: Gfluctp[32], tau_e: 2.728, std_i: 0.079199999999999993, g_i0: 0.0573, E_e: -20.0, E_i: -100, mod: 'Gfluctp'}

sergio 9:47 AM
I also have an error trying to access to the PP in some cells
sergio 9:49 AM

>>> Traceback (most recent call last):

 File "init.py", line 39, in <module>

  myinit()

 File "init.py", line 33, in myinit

  for isec,sec in enumerate(c.secs.values()):

AttributeError: 'function' object has no attribute 'values'

salvadord 9:50 AM
sorry, I still can’t see the full error
sergio 9:53 AM
thats is the output that I’m getting, I think the same error iterates for every cell
billl 9:55 AM
you don't want to iterate thru the secs
9:55
you only want the soma
9:56
ok so you are getting the Gfluctp - are you sure you have the most recent version compiled in this dir??
sergio 9:58 AM
yep, I compiled again last night. let me try it again
salvadord 9:58 AM
commented on sergio’s snippet error accessing secs in some cells
not sure, inspect what is inside c.secs
salvadord 9:58 AM
anyway, think just want soma, so don’t need to iterate over secs
salvadord 9:58 AM
just play manually with the sim.net.cells structure to figure out how to access what you need
sergio 9:59 AM
ok

** plan avoir iterating over pointCell, and only over soma

added 2 conditionals

*** to avoid pointCell
for c in sim.net.cells:
  	if not c.tags['pop'] == 'dTC': 

on this method will avoid to iterate over pointCell and only over compartment Cell

*** to iterate over soma:
for isec,sec in c.secs.iteritems():
  			if isec == 'soma':

only keys == soma are going to be used

*** new  myinit()
def myinit():
  for c in sim.net.cells:
  	if not c.tags['pop'] == 'dTC':  		
  		for isec,sec in c.secs.iteritems():
  			if isec == 'soma':
  				for ip, pointp in enumerate(sec.pointps.values()):
  					if pointp['mod'] == 'Gfluctp':
  						print pointp.hPointp
  						#pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

**** print pointp.hPointp

Gfluctp[24]
Gfluctp[25]
Gfluctp[26]
Gfluctp[27]
Gfluctp[28]
Gfluctp[29]
Gfluctp[30]
Gfluctp[31]
Gfluctp[32]
Gfluctp[33]

**** inserting noiseFromRandom
pointp.hPointp.noisefromRandom123(c.gid, isec, ip)

***** error message
Traceback (most recent call last):
  File "init.py", line 43, in <module>
    myinit()
  File "init.py", line 39, in myinit
    pointp.hPointp.noisefromRandom123(c.gid, isec, ip)
AttributeError: 'hoc.HocObject' object has no attribute 'noisefromRandom123'

**** trying interactively
sim.net.cells[10].secs.soma.pointps.noise.hPointp.noisefromRandom123()

**** FOUND typo
original error:
noisefromRandom123

function name:
noiseFromRandom123

**** fixing myinit()
**** error message
  File "init.py", line 42, in myinit
    pointp.hPointp.noiseFromRandom123(c.gid, isec, ip)
RuntimeError: hoc error

**** print c.gid,isec,ip
c.gid = gid
isec = soma
ip = 0

**** replace isec by an integer
using:
len(c.conns)

**** new noiseFromRandom
  
pointp.hPointp.noiseFromRandom123(c.gid, len(c.conns), ip)


**** running 100ms

[[./gif/network28_traces_fixedGfluctp.png]]
[[./gif/network28_raster_fixedGfluctp.png]]
[[./gif/traces_network28_fixedGfluctp.png]]

**** running 1000ms

[[./gif/network28_raster_1seed1cell.png]]
[[./gif/network28_traces_1seed1cell.png]]
[[./gif/traces_network28_1seed1cell.png]]

** discussion slack
after you get a decent result let's run a batch with a few different noise amplitude and taus
12:34
we were also going to look at different numbers of subsets and different numbers of cells withink each subset
salvadord 12:40 PM
should check if prev sync results hold after introducing diff seeds for each cell
billl 12:45 PM
all cells in a subset (+ the control cells that dp't get plateau) need to have same seed
12:45
diff seed is for diff subsets
12:46
and for cells not in any subset
12:46
did you do that sergio -- ie same way you did before
sergio 12:57 PM
at this moment, every cell have a different seed. Let me change change it so every subset has a different seed
billl 12:58 PM
yeah -- that part should be just the same as before but guess this all different since before seed was handled by netpyne
12:58
also can now start using the globalseed for running batches
sergio 1:00 PM
the idea would be use same seed for subset at noiseFromRandom in init.py?
billl 1:01 PM
you can identify subsets by number and then just use that number as the seed
1:01
just need 1 seed out of the 3
1:01
others can be 0
sergio 1:01 PM
ok
new messages
billl 1:05 PM
which reminds me that i'm supposed to move this into the INITIAL block so don't need to call it -- let me check on how to do that now

** plan
1 seed per subset

*** added pointps noise to PT5_0 on netParams.py
netParams.cellParams['PT5_0']['secs']['soma']['pointps']= {'noise': {'loc': 0.5, 
                                                              'std_e': 0.012*cfg.noise_amp[0],
                                                              'g_e0': 0.0121, 
                                                              'tau_i': 10.49*cfg.noise_tau, 
                                                              'tau_e': 2.728*cfg.noise_tau, 
                                                              'std_i': 0.0264*cfg.noise_amp[0], 
                                                              'g_i0': 0.0573, 
                                                              'E_e': cfg.e_exc_noise, 
                                                              'E_i': cfg.e_inh_noise, 
                                                              'mod': 'Gfluctp'}}
          
*** commented out insertion of noise on stimSourceParams
*** added list of PT5_0 on init.py
PT5 = ['PT5_0','PT5_1', 'PT5_2', 'PT5_3', 'PT5_4', 'PT5_5','PT5_6','PT5_7','PT5_8','PT5_9','PT5_10']
*** iterate over the list 
for i,v in enumerate(PT5):
*** PT5_0 cells will add a new seed per cell
if i==0:
	for c in sim.net.cells:
 		if c.tags['pop'] in v:
	  		for isec,sec in c.secs.iteritems():
	 			if isec == 'soma':			  				
					for ip, pointp in enumerate(sec.pointps.values()):
	 					if pointp['mod'] == 'Gfluctp':			  						
							pointp.hPointp.noiseFromRandom123(c.gid, len(c.conns), ip)
*** then every subset is going to have a new seed
else:	  
	for k,c in enumerate(sim.net.cells):
		if c.tags['pop'] in v:
		      for isec,sec in c.secs.iteritems():
			  	if isec == 'soma':
			  		for ip, pointp in enumerate(sec.pointps.values()):
			  			if pointp['mod'] == 'Gfluctp':
			  				pointp.hPointp.noiseFromRandom123(i, i+1, i+2)

** network 29

** plots 1 seed per subset

[[./gif/network29_raster_1seed1subset.png]]
[[./gif/traces_network29_1seed1subset.png]]

* 12-08-17

goal: worked in the batch analysis

** batch_utils and batch_analysis files on eee/sim

*** running analyze.py

batch noise_seed is consider as 1D batch

*** functions to plot are at batch_analyze
in 1D
batch_analysis.plot_vtraces_multicell

in 2D
batch_analysis.plot_vtraces
batch_analysis.plot_plat_dur
batch_analysis.plot_plat_amp
batch_analysis.plot_numspikes
batch_analysis.plot_freq

*** what to plot

Matrix map color: 
time bin x rate
pop or subset sync x time bin

*** spkt and spkid 
spkt is list time of spike
spkid is list gid of cell with spike

need to pair values

*** getting gids from json

gid = []
for i in d['net']['cells']:
	gid.append(i['gid'])

*** from netpyne selecting spkt by spkids  

spkmat = [spkt for spkind,spkt in zip(spkinds,spkts) if spkind==gid[300]]

*** pyspike.SpikeTrain creates object to plot

spkmat = [pyspike.SpikeTrain([spkt for spkind,spkt in zip(spkinds,spkts) if spkind==gid[300]], timeRange)]

* 12-11-12

goal: finish analysis od sync

** getting ISI_profile

*** function from pyspike
syncMat3 = pyspike.isi_profile(spkmat)

*** output is an object with piecewise funct
<pyspike.PieceWiseConstFunc.PieceWiseConstFunc object at 0x7f37ff50f0d0>


check definition for piecewise funct
https://en.wikipedia.org/wiki/Piecewise

*** meaning of parameters

isi-profile and spike-distance measure dissimilarity

spike-sync-profile measures sync. It's defined as a discrete function

*** plot isi_profile
[[./gif/ISI_profile_PT5_1.png]]

*** including different pops

adding list of  different gids:
gid = [range(200,240), range(280,320)] 

*** can't include different trains, get error format 

*** found error creating dict

originally:
trains['spkmat_%'%k] = [v]

fix:
trains['spkmat_%s'%k] = [v]

's' is for the replacement.

*** creating different train object by list of gids
gids = {'PT5_0':range(200,240), 'PT5_1':range(280,320)}

spikearray=  zip(spkinds,spkts)

trains ={}
for k,v in gids.iteritems():
	train =[]
	for i,gid in enumerate(v):
		for spkind,spkt in spikearray:
			if gid==spkind:
				train.append(spkt)
	trains['spkmat_%s'%k] = pyspike.SpikeTrain(train, timeRange)

*** Changed with previous methos, created to big grpups but no individual trains

*** individual trains:

gids = [range(200,240), range(280,320)]
stats = ['spike_sync_profile', 'spike_profile', 'isi_profile']
for i,stat in enumerate(stats): 
	for i, subset in enumerate(gids):		
		spkmat = [pyspike.SpikeTrain([spkt for spkind,spkt in zip(spkinds,spkts) if spkind==gid], timeRange) for gid in set(subset)]
		if stat=='spike_sync_profile':
			syncMat1 = pyspike.spike_sync_profile(spkmat)
			x, y = syncMat1.get_plottable_data()
			print "spike sync prof"
			print x, y
		elif stat=='spike_profile':
			syncMat2 = pyspike.spike_profile(spkmat)
			x, y = syncMat2.get_plottable_data()
		elif stat=='isi_profile':
			syncMat3 = pyspike.isi_profile(spkmat)
			x, y = syncMat3.get_plottable_data()
			
*** added matrix to save x and y values
plot = [[[[]for i in range(2)] for x in range(len(gids))] for p in range(len(stats))]

for every iteration:
plot[i][ii][0] = x
plot[i][ii][1] = y
	
*** subsets to analyze
gids = [] 
for k in range(len(labels)*2): 
	gids.append(range(200+((k)*40),200+((k)*40)+40))

*** fixed plotting
file for working with sync:
/u/sergioangulo/projects/eee/sim/layersim/sync.py

*** plot network 28
[[./gif/spike_sync_profile_network28.png]]
[[./gif/spike_profile_network28.png]]
[[./gif/ISI_sync_profile_network28.png]]

*** plot network 29
[[./gif/ISI_sync_profile_network29.png]]
[[./gif/spike_profile_network29.png]]
[[./gif/spike_sync_profile_network29.png]]

* 10-12-17

goals: meeting and work on matrix plot for sync

** document prepared for the meeting:

https://docs.google.com/document/d/1CzbaEEe_EB9TxVtEIWAppiWJe184mc49Uft6TxvJIAU/edit?usp=sharing

** meeting:
*** run simulations for 1500ms
*** analyze post plateau
*** check stability of the network before stimulation
**** MH suggested to safe state (need to write to him and ask for the pointer)

** runsim for 1500 ms
** network 30, 1 seed per subset 
*** runtime 1921 s, 48 cores 
*** plots
 
[[./gif/network30_raster.png]]
[[./gif/traces_network30.png]]

** network 31, 1 seed per cell
*** runtime 1926 s, 48 cores
*** plots

[[./gif/network31_raster.png]]
[[./gif/traces_network31.png]]

* 12-13-17

goal: finish analysis 1500ms and do safe state network

** plots sync
*** network 30
[[./gif/spike_sync_profile_network30.png]]
[[./gif/spike_profile_network30.png]]
[[./gif/ISI_sync_profile_network30.png]]

*** network 31
[[./gif/spike_sync_profile_network31.png]]
[[./gif/spike_profile_network31.png]]
[[./gif/ISI_sync_profile_network31.png]]

** selecting time range from netpne

*** creating list of spkts

spktsRange = [spkt for spkt in spkts if timeRange[0] <= spkt <= timeRange[1]]

*** selecting one spkt if in range and id 
spkmat = [pyspike.SpikeTrain([spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)], timeRange) for gid in set(subset)]

*** add def function 'get_data'
*** plots 0-500 ms
**** network 30
[[./gif/ISI_sync_profile_range(0_500)_network30.png]]
[[./gif/spike_profile_range(0_500)_network30.png]]
[[./gif/spike_sync_profile_range(0_500)_network30.png]]

**** network 31
[[./gif/ISI_sync_profile_range(0_500)_network31.png]]
[[./gif/spike_profile_range(0_500)_network31.png]]
[[./gif/spike_sync_profile_range(0_500)_network31.png]]

*** plots 500-1000 ms
**** network 30
[[./gif/ISI_sync_profile_range(500_1000)_network30.png]]
[[./gif/spike_profile_range(500_1000)_network30.png]]
[[./gif/spike_sync_profile_range(500_1000)_network30.png]]

**** network 31
[[./gif/ISI_sync_profile_range(500_1000)_network31.png]]
[[./gif/spike_profile_range(500_1000)_network31.png]]
[[./gif/spike_sync_profile_range(500_1000)_network31.png]]

*** plots 1000-1500 ms
**** network 30
[[./gif/ISI_sync_profile_range(1000_1500)_network30.png]]
[[./gif/spike_profile_range(1000_1500)_network30.png]]
[[./gif/spike_sync_profile_range(1000_1500)_network30.png]]

**** network 31
[[./gif/ISI_sync_profile_range(1000_1500)_network31.png]]
[[./gif/spike_profile_range(1000_1500)_network31.png]]
[[./gif/spike_sync_profile_range(1000_1500)_network31.png]]

** get spike train by subset

def get_matrix():

	spktsRange = [spkt for spkt in spkts if timeRange[0] <= spkt <= timeRange[1]]

	spkt_train =[]
	
	for k,v in enumerate(gids):
			train =[]
			for i,gid in enumerate(v):
				for spkind,spkt in zip(spkinds,spkts):
					if (spkind==gid and spkt in spktsRange): 
						train.append(spkt)
			spkt_train.append(pyspike.SpikeTrain(train, timeRange))

	for i,mat in enumerate(mats): 
		if mat=='ISI-distance':
				print len(spkt_train)
				isi_distance = pyspike.isi_distance_matrix(spkt_train)
				getmat[str(i)] = isi_distance
				
		elif mat=='SPIKE-distance':
				print len(spkt_train)
				spike_distance = pyspike.spike_distance_matrix(spkt_train)
				getmat[str(i)] = spike_distance

		elif mat=='SPIKE-Sync':
				print len(spkt_train)
				spike_sync = pyspike.spike_sync_matrix(spkt_train)
				getmat[str(i)] = spike_sync

* 12-14-17

goal: finishing plotting mat

** plotting mat

*** added function to plot mat on sync.py 

def plot_mat(mat,colormap,title,savefig):
	
	print 'Plotting matrix_'+str(title)

	fig, ax = plt.subplots()
	cmap = cm.jet
	cmap_r = cm.get_cmap('jet_r')
	
	if colormap == 'f':
		cax = ax.imshow(mat, interpolation='none', cmap=cmap)#, vmin=0.0, vmax=1.0)
	elif colormap == 'r':
		cax = ax.imshow(mat, interpolation='none', cmap=cmap_r)#, vmin=0.0, vmax=1.0)

	ax.set_title(title,fontsize=16)

	cbar = fig.colorbar(cax) #, ticks=[0,0.2,0.4,0.6,0.8,1,1.2,2.47])
    #cbar.ax.set_yticklabels(['0','0.2','0.4','0.6','0.8','1','1.2','2.47'])  # vertically oriented colorbar
	#cbar.set_clim(cax.zmin,cax.zmax)

	ax.set_yticks(np.arange(0.5, 20, 2), minor=False)
	ax.set_yticks(np.arange(1.5,20,2), minor=True)
	ax.yaxis.grid(True, which='minor')

	ax.set_xticks(np.arange(0.5, 20, 2), minor=False)
	ax.set_xticks(np.arange(1.5,20,2), minor=True)
	ax.grid(which='minor', color='w', linestyle='-', linewidth=0.5)

	ax.set_xticklabels(labels,rotation='vertical')
	ax.set_yticklabels(labels,rotation='horizontal')

	plt.tight_layout()
	fig.savefig(str(out_path)+str(savefig))
	plt.show()

*** plots

**** spike sync
***** time 0-500
[[./gif/SPIKE-Sync_range(0_500)_network30.png]]
[[./gif/SPIKE-Sync_range(0_500)_network31.png]]

***** time 500-1000
[[./gif/SPIKE-Sync_range(500_1000)_network30.png]]
[[./gif/SPIKE-Sync_range(500_1000)_network31.png]]

***** time 1000-1500
[[./gif/SPIKE-Sync_range(1000_1500)_network30.png]]
[[./gif/SPIKE-Sync_range(1000_1500)_network31.png]]

**** ISI distance
***** time 0-500
[[./gif/ISI-distance_range(0_500)_network30.png]]
[[./gif/ISI-distance_range(0_500)_network31.png]]

***** time 500-1000
[[./gif/ISI-distance_range(500_1000)_network30.png]]
[[./gif/ISI-distance_range(500_1000)_network31.png]]

***** time 1000-1500
[[./gif/ISI-distance_range(1000_1500)_network30.png]]
[[./gif/ISI-distance_range(1000_1500)_network31.png]]

** added group of all trains in list of to plot matrix

*** func 
for ii, subset in enumerate(gids):		
	spkmat = [pyspike.SpikeTrain([spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)], timeRange) for gid in set(subset)]
	spkt_train.extend(spkmat)

*** plots

**** ISI distance
***** time 0-500
[[./gif/cell_ISI-distance_range(0_500)_network30.png]]
[[./gif/cell_ISI-distance_range(0_500)_network31.png]]

***** time 500-1000
[[./gif/cell_ISI-distance_range(1000_1500)_network30.png]]
[[./gif/cell_ISI-distance_range(500_1000)_network31.png]]

***** time 1000-1500
[[./gif/cell_ISI-distance_range(500_1000)_network30.png]]
[[./gif/cell_ISI-distance_range(1000_1500)_network31.png]]

**** SPIKE distance
***** time 0-500
[[./gif/cell_SPIKE-distance_range(0_500)_network30.png]]
[[./gif/cell_SPIKE-distance_range(0_500)_network31.png]]

***** time 500-1000
[[./gif/cell_SPIKE-distance_range(500_1000)_network30.png]]
[[./gif/cell_SPIKE-distance_range(500_1000)_network31.png]]

***** time 1000-1500
[[./gif/cell_SPIKE-distance_range(1000_1500)_network30.png]]
[[./gif/cell_SPIKE-distance_range(1000_1500)_network31.png]]

**** SPIKE sync
***** time 0-500 ms
[[./gif/cell_SPIKE-Sync_range(0_500)_network30.png]]
[[./gif/cell_SPIKE-Sync_range(0_500)_network31.png]]

***** time 500-1000ms
[[./gif/cell_SPIKE-Sync_range(500_1000)_network30.png]]
[[./gif/cell_SPIKE-Sync_range(500_1000)_network31.png]]

***** time 1000-1500ms
[[./gif/cell_SPIKE-Sync_range(1000_1500)_network30.png]]
[[./gif/cell_SPIKE-Sync_range(1000_1500)_network31.png]]

* 12-15-17

goal: finish one plot to compare and work stable network

** plots to summarize sync matrix

[[./gif/sync_1500.png]]
 
** slack discussion

did you get checkpointing working?
12:14
ah 1500 ms -- ok great
sergio 12:14 PM
the sync matrix
billl 12:15 PM
sync matrix looks like more sync prior to plateau?
12:15
some of the cells have lot of firing after plat;why is that?
12:15
very cool
sergio 12:17 PM
it seems like the cells keep a high firing rate after the plateau, but it depends of the amplitude of the noise
billl 12:19 PM
do we have a good idea about noise choice now so we could run with all of the subsets with similar amounts of noise?
12:19
how about the sync discrpeancy?
12:19
(am i reading it wrong?)
sergio 12:22 PM
we haven’t picked a single noise param to run in all the subsets
12:22
I have sync discrepancy but let me organize it
billl 12:22 PM
it is time for you to pick
12:23
can try with the amounts in PTS6,7,8 -- 3 different sims with all subsets with same noise amount
12:24
discrep i'm referring to now is that eg P7 to P7 looks very well synchronized before plateau ; less well after plateau
12:24
perhaps that's another aspect of finding a starting point -- we need to assess after have seen at least one set of plateaus
12:24
did you try checkpointing?
12:25
(could just try naively and see if can work easily -- did we get examples from mh?)
sergio 12:25 PM
not, I haven’t tried checkpointing the network yet. I was about to start working on it
12:26
I can write to mh to get examples
billl 12:27 PM
he said he would send -- did he send to any of us? -- i'll email him
12:28
let's wait on checkpointing till we hear back
12:28
let's try 6,7,8 (you understand what i mean?)
12:29
after that let's also start some longer sims to do a plateau at 500 ms then wait 2s then anohter plateau -- then stop at 4s
sergio 12:29 PM
3 different sims, and the noise amp will be the same for each sim for all the subsets
billl 12:29 PM
right
12:30
does 6,7,8 seem right to you?  or mayb 5,6,7 or 5,6,7,8 ??
12:30
somehow 5 is supersynchronized before plat??
12:30
these are all single sims right?
sergio 12:31 PM
5, 6, 7, 8
billl 12:31 PM
k
sergio 12:31 PM
ok
12:32
also for each subset, I will keep half with plateau and the other half without it, right?

	
billl 12:43 PM
yeah think that helps us understand
sergio 12:43 PM
ok
billl 12:44 PM
as to the why of the greater sync values prior to the plateau -- could that be because there are 2x number of cells involved?  what are we doing to the measure now to handle normalizing by 1.#of cells; 2.#of spikes ???
sergio 12:52 PM
those high values seems to be a wrong interpretation of the sync parameter if there are not spikes. The pre-plateau in low noise amp have no spikes, but the sync params seems to consider those as highly sync.  For this param 1 is consider to be sync. Let me check with synaptic noise amps that can produce more spikes pre-plateau
billl 12:58 PM
for sync should prob entirely suppress everything other than the spikes
12:59
previously we did preprocessing with turning into the spike train (ie use the rasters) and then put a small square wave or gaussian lump centered at every spike so have some spread
12:59
the subthresh sync would also be interesting to see but would want to do that conversely after truncating off all th e spikes
sergio 1:07 PM
it would be interesting to modify the coincidence window for this analysis. I haven’t thought about the subthresh sync, we can work on it at some point.
billl 1:08 PM
thought you are saying that you are now measuring subthresh sync??
1:08
iwas saying  want to not do that for start then do later
sergio 1:10 PM
I’m not measuring subthresh sync now, sounds good for later

** plan

run sim single amp for all subsets

4 different amps

** v16
** network 32 noise amp factor = 1.89
** network 33 noise amp factor = 2.11
** network 34 noise amp factor = 2.33
** network 35 noise amp factor = 2.55

** plots
*** rasters 
[[./gif/network32_raster.png]]
[[./gif/network33_raster.png]]
[[./gif/network34_raster.png]]
[[./gif/network35_raster.png]]

*** traces

[[./gif/traces_network35.png]]
[[./gif/traces_network34.png]]
[[./gif/traces_network33.png]]
[[./gif/traces_network32.png]]


* 12-19-17

goal: meeting, fix sync of empty trains

** meeting
*** try background activity theta or alpha
*** srdjan suggestion: 2 subsets, one can be plateaued and one can't. Input is bursts (200-300 ms each; interval of 500 ms) ranging from 1 to 5.
[[./gif//Network Experiment.pdf]]
/u/sergioangulo/projects/sergeee/eee/gif/Network Experiment.pdf
 
** discussion on slack about sync
	
salvadord 11:21 AM
@sergio @billl - sync measure works ok except for empty trains, right? (mic not working)
billl 11:28 AM
not sure -- i think that normalizaiton is off
11:28
btw you can call in if you open hangouts on your phone and use the phne option to connect to the hangout
salvadord 11:28 AM
I think even by eye we could agree pre 500ms shows more sync even if less spikes
billl 11:28 AM
normalization for # of cells (more preplateau) and for # of spikes (more during plat)
11:29
hmm that was point that sergio was making;  yeah that could be so that's a problem
11:29
need to reduce the amplitude of the noise then -- that's' the easiest fix
salvadord 11:35 AM
I think could also conseq of using identical noise for subsets -- so maybe possible to use just "more similar" noise for subsets

** discussion about experiments proposed by srdjan
srdjan2000 1:18 PM
I used my mental image to generate a figure explaining my idea with INPUT PATTERN IMPRINTING.
srdjan2000 1:19 PM 
	
billl 2:00 PM
what do you mean by imprinting? -- usually imprinting would imply learning
srdjan2000 2:08 PM
"learning" is what the BROWN network did. Brown networked learned the temporal structure of the incoming input.
billl 2:09 PM
oh, which paper is that?
2:09
anyway i think the point here is just the different types of response with and without the plateau in terms of recruitment of cells both in and not in the plateau??
2:12
yeah we will do that
sergio 2:13 PM
the bursts are suppose to replicate inputs from other cortices?
2:14
or from hippocampus?
billl 2:37 PM
they are a bit too stereotyped -- could be from an electrode
2:37
or from whatever other area
2:37
do you know what brown paper he's referring to sergio?
sergio 2:39 PM
no, I couldn’t find the reference. Still looking for it
billl 2:39 PM
can email him
sergio 2:39 PM
ok

** resolving empty spike trains sync

*** selecting gids of empty spike trains
empty_gids=[]
	for ii, subset in enumerate(gids):		
		spkmat = [pyspike.SpikeTrain([spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)], timeRange) for gid in set(subset)]
		spkt_train.extend(spkmat)
		for gid in set(subset):
			list_spkt=[spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)]
			if len(list_spkt)==0:
				empty_gids.append(gid)

*** transforming gids to postion on list	
empty_gids[:] = [x - 200 for x in empty_gids]

*** creating empty array
empty_array = np.zeros(((len(labels)*80),(len(labels)*80)))

*** indexing values of 1 to empty trains gids 
for i in range(len(spkt_train)): #enumerate(empty_gids):
	if i in empty_gids:
		for k,v in enumerate(empty_gids): 
			empty_array[i][v] = 1.0

*** plot empty gids values of 1 array 
**** network 30
[[./gif/empty_trains_network30_time0_500.png]]

**** network 31
[[./gif/empty_trains_network31_range0_500.png]]


** modifying values in old matrix

*** substracting sync values of empty trains
getmat[str(i)] = spike_sync-empty_array

*** plot

**** network 30
[[./gif/newmat_zerovalue_empty_network30_0_500.png]]

**** network 31
[[./gif/newmat_zerovalue_empty_network31_0_500.png]]

** plot for networks 32-35

*** network 32

[[./gif/cell_new_SPIKE-Sync_range(0_500)_network32.png]]
[[./gif/cell_new_SPIKE-Sync_range(500_1000)_network32.png]]
[[./gif/cell_new_SPIKE-Sync_range(1000_1500)_network32.png]]

*** network 33

[[./gif/cell_new_SPIKE-Sync_range(0_500)_network33.png]]
[[./gif/cell_new_SPIKE-Sync_range(500_1000)_network33.png]]
[[./gif/cell_new_SPIKE-Sync_range(1000_1500)_network33.png]]

*** network 34

[[./gif/cell_new_SPIKE-Sync_range(0_500)_network34.png]]
[[./gif/cell_new_SPIKE-Sync_range(500_1000)_network34.png]]
[[./gif/cell_new_SPIKE-Sync_range(1000_1500)_network34.png]]

*** network 35

[[./gif/cell_new_SPIKE-Sync_range(0_500)_network35.png]]
[[./gif/cell_new_SPIKE-Sync_range(500_1000)_network35.png]]
[[./gif/cell_new_SPIKE-Sync_range(1000_1500)_network35.png]]

*** comparisson old-new sync matrix
[[./gif/comparisson_old_new_sync.png]]


* 12-20-17

goal:  work in the safe state

** discussion on slack about sync
	
billl 8:47 AM
i'm not understanding;  working now? -- the 2nd row is the new result? -- looks empty
salvadord 8:55 AM
think the 3rd row is the fixed result — setting empty trains to sync=0
billl 9:01 AM
hmmm but 3rd row is labeled as a subtraction which it looks like
salvadord 9:57 AM
yeah, subtracted the 2nd row which contains the wrong ones (sync=1 for empty trains)
sergio 10:26 AM
yes the 3rd row it is a substraction (1st - 2nd row)
10:27
sorry, I didn’t explain the figure
10:29
I created the empty train sync matrix, and give values of 1.0 to the empty train sync pairs
10:29
does it sound ok?
billl 12:03 PM
so now is working so now can use on the data

** conversation with bill

Need to check sync with different number of spikes and check code for sync


** discussion in slack about pyspike
find the code; sergio?  want me to also take a look?
sergio 2:39 PM
sure
billl 2:39 PM
joe what is next on your sims?
sergio 2:40 PM
let me find the pointer for the code
joe 2:42 PM
I’m finishing up a few more measures of plateau properties (number of spikes, spiking frequency, time to first spike), then moving on to looking at NMDA properties and how they contribute to plats.
billl 2:42 PM
k -- don't get obsessed with your measures please! -- meanwhile i'm trying to get sergio more obsessed with his measures of sync :)
sergio 2:43 PM
`/usr/site/python/pyspike/SpikeTrain.py`
2:44
this file is used to create an object from a train of spikes
billl 2:44 PM
ok, what is pointer to routine you are using?
sergio 2:45 PM
/u/sergioangulo/projects/eee/sim/layersim/sync.py
billl 2:45 PM
i mean routine that you are using in SpikeTrain.py or does that file only have 1 routine?
sergio 2:49 PM
just a second looking on it to not to be confused
2:50
ok
2:51
I have a series of spike times, then I called the function pyspike.SpikeTrain  to create an object
2:52
SpikeTrain.py contains a class function 'SpikeTrain'
billl 2:52 PM
yeah i see that class but i don't see a routine
2:53
this file seems to have routines -- /usr/site/python/pyspike/spike_sync.py
2:53
which one of these are you using?
sergio 2:53 PM
spike_sync_matrix
billl 2:55 PM
looks like uses partial() -- where is that?
2:56
nope
2:56
uses spike_sync_bi
2:56
(/usr/site/python/pyspike/spike_sync.py:199)
sergio 2:56 PM
the function inside `spike_sync_bi` is in the same file
billl 2:56 PM
which calls _spike_sync_values(spike_train1, spike_train2, interval, max_tau)
2:57
(/usr/site/python/pyspike/spike_sync.py:129)
2:57
which calls spike_sync_profile_bi
2:57
(/usr/site/python/pyspike/spike_sync.py:56)
2:58
whcih calls coincidence_profile_impl
sergio 2:58 PM
from cython
billl 2:58 PM
where's that? -- that's in cython
sergio 2:59 PM
it is as a dir inside pysipke
billl 2:59 PM
is that this?? - (/usr/site/python/pyspike/cython/python_backend.py:362)  def coincidence_python(spikes1, spikes2, t_start, t_end, max_tau):
sergio 3:00 PM
yep
billl 3:00 PM
how do you know?
sergio 3:02 PM
i think there are 2: from .cython.python_backend import coincidence_python as coincidence_profile_impl
3:02
from .cython.cython_profiles import coincidence_profile_cython as coincidence_profile_impl
billl 3:02 PM
right; but which one is used
3:02
where is the paper again that this code is from?
sergio 3:03 PM
/u/sergioangulo/papers/kreuz2015.pdf
billl 3:03 PM
what max_tau are you using?
sergio 3:04 PM
I tried the default value, meaning None
billl 3:05 PM
what is the tau for?  why did you choose None?
sergio 3:06 PM
"Maximum coincidence window size. If 0 or `None`, the coincidence window has no upper bound."
billl 3:06 PM
are you sure that that is the right paper? -- it doesn't mention pyspike at all in paper?
3:07
no upper bound meaning that a spike can coincide with another spike 400ms away? -- why did you decide to do that?
sergio 3:07 PM
here is the specific reference for pyspike: http://dx.doi.org/10.1016/j.softx.2016.07.006
billl 3:08 PM
ok so please download paper
sergio 3:09 PM
I didn't see the param before
3:09
ok
billl 3:09 PM
ok but generally you need to konw all the params before you call a routine
3:10
but that's fine -- often easiest to just give it a try first
3:10
but then have to see
sergio 3:10 PM
ok
billl 3:11 PM
in fig1C of that paper you showed me why are the 2 different taus different length?
sergio 3:12 PM
/u/sergioangulo/papers/mulansky2016.pdf
3:12
let me check
billl 3:14 PM
appendix to the pyspike paper looks like a shorter version
3:17
tau is somehow adaptive -- guess that's why diff size taus
sergio 3:18 PM
yep, I was reading about it
billl 3:23 PM
how about syncpy? -- https://github.com/syncpy/SyncPy
GitHub
syncpy/SyncPy
SyncPy is a novel open-source analytic library for investigating synchrony in a fast and exhaustive way.
sergio 3:24 PM
sure I can try it
billl 3:25 PM
ok but why do you want to try it?
3:25
:)
3:25
we need to figure out what you need
3:26
here's that paper -- /u/billl/articles/p41-varni.pdf
sergio 3:27 PM
ok taking a look of it
billl 3:28 PM
whoops that's totally unrelated; sorry
sergio 3:28 PM
yep people but no spikes
billl 3:29 PM
so this is continuous time series?  eg EEG?
3:30
ok anyway back to spiky/pyspike
3:34
is this the problem?? -- In previous implementations of the SPIKE-distance this ambiguity was resolved by adding to each spike train an auxiliary leading spike at time t = 0 and an auxiliary trailing spike at time t = T.
3:35
or rther 1 of the problems
sergio 3:35 PM

def get_spikes_non_empty(self):

    """Returns the spikes of this spike train with auxiliary spikes in case

    of empty spike trains.

    """

    if len(self.spikes) < 1:

      return np.unique(np.insert([self.t_start, self.t_end], 1,

                    self.spikes))

    else:

      return self.spikes

this is where I am confused about the creation on spikes if empty spikes trains
sergio 3:36 PM
here I think is the problem
billl 3:36 PM
yup
3:36
seems like easiest thing is to get rid of cases with 0 or 1 spike as undefined
3:37
where is that routine?
sergio 3:37 PM
in SpikeTrain.py
billl 3:37 PM
yeah but where -- what line?
3:37
i'll find
sergio 3:38 PM
67
billl 3:38 PM
(/usr/site/python/pyspike/SpikeTrain.py:67)
3:38
where is that routine called?
3:38
? (/usr/site/python/pyspike/spike_distance.py:84) ?
3:39
so what's best way to modify this?
sergio 3:39 PM
when I import a series of spike times, I called the function SpikeTrain to create an  object
billl 3:40 PM
ok so can get rid of them right there?
3:40
how do you enter the trains into that object?
sergio 3:40 PM
yep, but I can’t modify that file on neurosim
billl 3:41 PM
sure you can but you may not want to
3:41
since other people might want to use it in some different way
sergio 3:42 PM

empty_train[i] = random.sample(xrange(0,1500), 50)     spkt_train.append(pyspike.SpikeTrain(empty_train[i], timeRange))

billl 3:43 PM
here? --                 spkmat = [pyspike.SpikeTrain([spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)], timeRange) for gid in set(subset)]
3:43
random??
sergio 3:43 PM
one is to modify the sync values after creating the matrix
billl 3:43 PM
oh just for testing
3:44
sorry, one?  one what?
sergio 3:44 PM
one idea
billl 3:45 PM
so am i on the correct line here? -- (/u/sergioangulo/projects/eee/sim/layersim/sync.py:86:381)
3:45
(line 86 version 381)
3:45
(current version)
3:46
seems like you could just calc this first [spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)]
sergio 3:46 PM
86:383
billl 3:46 PM
there is no 383 for that file
3:47
ic  383 is current version
sergio 3:47 PM
yes
billl 3:47 PM
yeah so do your calc first and then get rid of it if <3 spikes
3:47
in the list
3:47
and don't create a SpikeTrain
3:47
??
3:47
will that work?
sergio 3:49 PM
let me try it
billl 3:50 PM
maybe figure out if it makes sense before you try it
3:50
you can't interpret the final matrix by eye
3:51
ok so just try it and see if a total disaster and then if not can figure out if should be using <3 or <2 or something else
3:52
in some cases might end up with an empty object or an object with only 1 train so would need to look out for that too perhaps
sergio 3:53 PM
ok

** plan 

creating sync with only list of spike times, and selecting trains > 2-3 spikes

** working on sync_test

**** creating a list of spiketimes
train1 = [3,5,6]

**** adding it to function for sync

spike_sync = pyspike.spike_sync_matrix(train1)

***** error message
/usr/site/python/pyspike/spike_sync.pyc in _spike_sync_values(spike_train1, spike_train2, interval, max_tau)
    142             if max_tau is None:
    143                 max_tau = 0.0
--> 144             c, mp = coincidence_value_impl(spike_train1.spikes,
    145                                            spike_train2.spikes,
    146                                            spike_train1.t_start,

AttributeError: 'int' object has no attribute 'spikes'

**** adding second list
train2 = [4,6,7]

***** error message, can't get pairs
/usr/site/python/pyspike/generic.pyc in _generic_distance_matrix(spike_trains, dist_function, indices, interval)
    137     # check validity of indices
    138     assert (indices < len(spike_trains)).all() and (indices >= 0).all(), \
--> 139         "Invalid index list."
    140     # generate a list of possible index pairs
    141     pairs = [(i, j) for i in range(len(indices))

AssertionError: Invalid index list. 

**** creating list with 2 lists.

train1 = [[3,5,6],[4,5,7]]

***** error
/usr/site/python/pyspike/spike_sync.pyc in _spike_sync_values(spike_train1, spike_train2, interval, max_tau)
    142             if max_tau is None:
    143                 max_tau = 0.0
--> 144             c, mp = coincidence_value_impl(spike_train1.spikes,
    145                                            spike_train2.spikes,
    146                                            spike_train1.t_start,

AttributeError: 'list' object has no attribute 'spikes'

** work on get_matrix

*** Create list with no empty spkts
created list spkmat2

for ii, subset in enumerate(gids):		
	spkmat = [pyspike.SpikeTrain([spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)], timeRange) for gid in set(subset)]			
	spkt_train.extend(spkmat)
	for gid in set(subset):
		list_spkt=[spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)]
		if len(list_spkt)==0:
			empty_gids.append(gid)
		else:
			spkmat2.append(list_spkt)
*** analyze sync

spike_sync = pyspike.spike_sync_matrix(spkmat2)

*** error message

/usr/site/python/pyspike/spike_sync.pyc in _spike_sync_values(spike_train1, spike_train2, interval, max_tau)
    142             if max_tau is None:
    143                 max_tau = 0.0
--> 144             c, mp = coincidence_value_impl(spike_train1.spikes,
    145                                            spike_train2.spikes,
    146                                            spike_train1.t_start,

AttributeError: 'list' object has no attribute 'spikes'


**** function needs to analyze object with train 

*** going back to use SpikeTrain but selecting train bigger than 2 spikes

**** created second spkmat
**** added definition for number of train in get_mat()
min_spike_number=0

**** looping over gids number
 
for gid in set(subset):
	list_spkt=[spkt for spkind,spkt in zip(spkinds,spkts) if (spkind==gid and spkt in spktsRange)]
					
	if len(list_spkt)<min_spike_number:
		empty_gids.append(gid)
	else:
		spkmat2.append(pyspike.SpikeTrain(list_spkt, timeRange))
		gids_included.append(gid)

**** if len of spikeTrain is bigger min_spike_number, train will be added

**** added count for gids with spikes
pos_labels.append(len(gids_included))

**** modified ticks for graph
minor_pos=[]
major_pos=[]

for i,v in enumerate(pos_labels):
	l = range(0,len(pos_labels),2)	
	if not i in l:
		minor_pos.append(v)
	
for i in range(len(minor_pos)):
	if i == 0:
		major_pos.append((minor_pos[i])/2.0)
	else:	
		major_pos.append(minor_pos[i-1]+(minor_pos[i]-minor_pos[i-1])/2.0)

**** added new labels for fig
if labels=='no_empty':

ax.set_yticks(minor_pos, minor=True)
ax.set_yticks(major_pos, minor=False)
ax.yaxis.grid(True, which='minor')

ax.set_xticks(minor_pos, minor=True)
ax.set_xticks(major_pos, minor=False)
ax.grid(which='minor', color='w', linestyle='-', linewidth=0.5)
		
ax.set_xticklabels(net_labels,rotation='vertical')
ax.set_yticklabels(net_labels,rotation='horizontal')
	
** plots

*** substracting method with 2 or more spikes
[[./gif/cell_new_SPIKE-Sync_range(0_500)_network32_2.png]]
[[./gif/cell_new_SPIKE-Sync_range(500_1000)_network32_2.png]]
[[./gif/cell_new_SPIKE-Sync_range(1000_1500)_network32_2.png]]

*** only spike trains with 2 or more spikes
[[./gif/cell_new_SPIKE-Sync_range(0_500)_network32_noEmptyTrain.png]]
[[./gif/cell_new_SPIKE-Sync_range(500_1000)_network32_noEmptyTrain.png]]
[[./gif/cell_new_SPIKE-Sync_range(1000_1500)_network32_noEmptyTrain.png]]

* 12-21-17

goals: summarized sync, work on safe state 

** fig summarizing sync 

[[./gif/empty_trains_sync.png]]

subtracting method still sync between sike train with 2 or less spikes with spike trains with 3 or more sppikes  

** discussion on slack about sync
bill

any good?


sergio [12:12 PM] 
if one is better than the other?


salvadord [12:14 PM] 
seems without stim only 2 subsets show some sync, whereas after stim all subsets consistently show high sync — so guess good?


sergio [12:16 PM] 
yep, that’s very useful for the analysis of the sync between pre and during plateau states


billl [12:20 PM] 
which one best?  do you have example?


[12:21] 
i'm confused ; seem to show completely different things??


[12:22] 
depending on whether choose 2 or less or 3 or less get different results so not working


sergio [12:24 PM] 
both use same filter for number of spikes, the top only added sync values of 0


salvadord [12:24 PM] 
bottom is subsample of top — 258 cells vs 800


sergio [12:24 PM] 
yep


sergio [12:26 PM] 
uploaded this image: raster plot used for the sync analysis
Add Comment



sergio [12:28 PM] 
PT5_2 and PT5_7 have larger trains and more sync in the pre plateau condition


billl [12:28 PM] 
so what does the bottom show?


sergio [12:29 PM] 
only gids with spike trains with 3 or more spikes


billl [12:30 PM] 
ok but i  can't read it;  what does that tell you?  why are you showing it?  what did you learn from that?


[12:31] 
how does it contribute to our understanding?


[12:31] 
perhaps just an internal test you did?


[12:31] 
so the top shows your results -- looks good i think

sergio [12:31 PM] 
yep, I want to compare to the larger matrix sync

[12:31] 
what's next?

** plan discussion on slack

yep, I want to compare to the larger matrix sync
12:32
I can work on the save state or the sims proposed by Srdjan
billl 12:39 PM
moh says savestate working -- get that code from him and then set yours up too
12:39
@salvadord -- i suggested to sergio that he needs to do the sim.create()
then .simRun() and then savestate
12:39
then after he does create() the next time he will need restorestate before doing the simrun()
12:39
does that sound right?
12:40
sergio (and moh) whenyou test your sim with this just run for eg 100 ms and then try the restart from there
12:40
no need to run long sims when getting this working
sergio 12:42 PM
ok
mohamed.sherif 12:42 PM
yeah, that sounds right

** savestate code fom mohamed
def savestate():
    s = 'svst.{pcid}'.format(pcid = pc.id())
    f = h.File(s)
    ss = h.SaveState()
    ss.save()
    ss.fwrite(f)

def restorestate():
    s = 'svst.{pcid}'.format(pcid = pc.id())
    f = h.File(s)
    ss = h.SaveState()
    ss.fread(f)
    ss.restore()

** v17, network 36
** implementation of SaveState

*** added savestate() and retorestate() to init.py

*** runsim 100ms

*** error
NameError: global name 'pc' is not defined

*** full python code from moh (modified from ring.hoc)

from neuron import h, gui
h.tstop = 100

h.load_file('netparmpi.hoc')
ncell = 128
pnm = h.ParallelNetManager(ncell)
pc = pnm.pc

pnm.round_robin()

for i in range(ncell):
    if pnm.gid_exists(i):
        pnm.register_cell(i, h.IntFire1())


for i in range(ncell):
    pnm.nc_append(i, (i+1)%ncell, -1, 1.1, 2)


# stimulate
if pnm.gid_exists(4):
    stim = h.NetStim(.5)
    ncstim = h.NetCon(stim, pnm.pc.gid2obj(4))
    ncstim.weight[0] = 1.1
    ncstim.delay = 0
    stim.number = 1
    stim.start = 1

pnm.set_maxstep(100) # will end up being 2

pnm.want_all_spikes()

ss = h.SaveState()

def savestate():
    s = 'svst.{pcid}'.format(pcid = pc.id())
    f = h.File(s)
    ss = h.SaveState()
    ss.save()
    ss.fwrite(f)


def restorestate():
    s = 'svst.{pcid}'.format(pcid = pc.id())
    f = h.File(s)
    ss = h.SaveState()
    ss.fread(f)
    ss.restore()

def pspike():
    if pnm.myid == 0:
        print('\n')
        for i in range(int(pnm.spikevec.size())):
            print(pnm.spikevec.x[i], pnm.idvec.x[i])


def prun(runState):
    h.stdinit()
    if runState == 1:
        pnm.psolve(h.tstop / 2.)
        savestate()
    else:
        restorestate()
    h.frecord_init()
    pnm.psolve(h.tstop)
    pspike()


prun(1)
prun(2)

pnm.pc.runworker()
pnm.pc.done()

*** discussion on slack about savestate and netpyne
ok… so the issue with netpyen is that if you call create() again its going to create all the NEURON objects again — which you don’t need to do with restorestate()
1:28
what you need is to create just the python metadata use by netpyne, but not the NEURON objects
1:28
which theoretically can do setting `cfg.createNEURONObj=False`
1:29
but then not sure what happens when you restore state since the NEURON objects won’t probably be associated with the corresponding netpyne structures anymore
1:29
so in what scenario are you applying savestate to? what mid-simulation params do you want to explore?
mohamed.sherif 1:30 PM
what I am using it for is to avoid running the sim for initial second or two (the time it takes for the network to stabilize)
1:31
I would think that if you are starting the simulation from the beginning, you would call create((), then restore
1:31
you won't call restore after you just saved - but after you have saved and terminated the simulation
1:32
the example is just to show how it works, but don't think it is a practical example
salvadord 1:35 PM
so to avoid running sim for initial secs - right, but what kind of params are you exploring after? cause eg. can’t change any cell or net params since that would change the initial 1 or 2 secs too right?
1:35
so just different stim patterns after 2 secs?
1:36
@call create - but seems like the restore() func also restores the NEURON objects, so if run create() before you would have duplicate NEURON objects (unless you do what I mentioned above)
mohamed.sherif 1:36 PM
ic your point - you are right
1:38
hmm - so seems not suitable for parameter exploration
billl 2:42 PM
thought you have to create() again since you've started anew so have to create the NEURON structures
2:43
can change params as long as don't change connectivity
sergio 2:51 PM
so if I understand the best is to have a ‘savestate’ designed for netpyne
billl 2:51 PM
don't think netpyne makes a difference but let's try it
2:51
i'll try now with one of the tuts
2:52
whole idea of savestate is to change params so should be doable; set the params (from netpyne) then restore the state -- what could go wrong? :)
sergio 3:00 PM
which one of the tuts are you going to try?
billl 3:00 PM
tut2
salvadord 3:08 PM
change params — can’t change any params that would affect the 1st sec of simulation, right?
3:08
so means can just test different stims after 1 sec ?
3:09
create() - as I understand it, restorestate() loads in memory the NEURON objects, so can’t do create() since would replicate
billl 3:09 PM
why not change weights
salvadord 3:09 PM
need to do create() just for the netpyne/python structure
billl 3:09 PM
create() won't replicate if starting fresh
3:09
want to do create() since want change params
3:10
would be good to have a create that changes params without making cells or netcons or netstims
3:10
an alternative way to do the interactive writeback
salvadord 3:10 PM
replicate if starting fresh - what do u mean? create() will create the NEURON objects, and if also use restorestate() then would be replicated
billl 3:11 PM
restorestate() only restores states
3:11
doesn't make things
3:11
it's like finitialize() -- sets stuff up
salvadord 3:11 PM
why not change weights — because then initial 1st sec wouldn’t match, ie. initial 1st sec would require original weights to occur
billl 3:11 PM
yeah we're just looking for a state
3:12
not worrying about how we got there
3:12
just as with finitialize() -- it's just a state
3:12
not related to any past
salvadord 3:12 PM
restorestate() doesn’t create NEURON objects? ok then
3:12
just a state - ok I see
billl 3:13 PM
idea is gives a somehat less arbitrary state than finitialize() does
salvadord 3:14 PM
so if create objects with netpyne again from scratch but change some params, how does restorestate() know where to set what… guess I don’t really understand what exactly is being saved in savestate
billl 3:17 PM
you generally can't change the form of the cells or of the network so if wanted to be able to change wiring would have to setup with extra wiring with zero weights so could reset those
3:18
as long as stuff is in same place it will just set those states (and queue) in same place that was previously
3:18
bbsavestate more sophsiticated but lets see if can get the simple one to work first :)
new messages
salvadord 3:18 PM
what does “same place” mean exactly… in memory?

*** ParallelNetManager and ParallelContext

https://www.neuron.yale.edu/neuron/static/docs/help/neuron/neuron/classes/parnet.html

https://www.neuron.yale.edu/neuron/static/docs/help/neuron/neuron/classes/parcon.html#ParallelContext


*** trying on tut2
**** added savestate function
pc = h.ParallelContext()
ss = h.SaveState()

def savestate():
    s = 'svst.{pcid}'.format(pcid = pc.id())
    f = h.File(s)
    ss = h.SaveState()
    ss.save()
    ss.fwrite(f)

**** modified sim.create
sim.initialize(
    simConfig = simConfig,
    netParams = netParams)
sim.net.createPops()               			# instantiate network populations
sim.net.createCells()              			# instantiate network cells based on defined populations
sim.net.connectCells()            			# create connections between cells based on params

sim.net.addStims() 							# add network stimulation
sim.setupRecording()              			# setup variables to record for each cell (spikes, V traces, etc)

sim.runSim()                      			# run parallel Neuron simulation

savestate()

**** create a file
svst.0.0

**** added restore state funct

def restorestate():
    s = 'svst.{pcid}'.format(pcid = pc.id())
    f = h.File(s)
    ss = h.SaveState()
    ss.fread(f)
    ss.restore()

**** calling restorestate before initialize
restorestate()

**** error message 
python: savstate.cpp:763: virtual void SaveState::read(OcFile*, bool): Assertion `nt == i && nc == memb_list[i].nodecount' failed.
Abort (core dumped)

**** bill's solution
ss = h.SaveState()

def savestate (fn='svst'):
    f = h.File(fn)
    ss.save()
    ss.fwrite(f)

def restorestate (fn='svst'):
    f = h.File(fn)
    ss.fread(f)
    ss.restore()

***** need to run interactively (nrniv -python tut2.py)
***** call function
***** start with savestate()
***** then restorstate()
***** run sim

**** discussion on slack

i'm doing without mpi for now
4:44
what was your command?
4:44
i just did >>> restorestate()
h.t
1000.0000000014466
sergio 4:44 PM
same, restorestate()
4:45
I saved 1 state and then tried to recovered
billl 4:45 PM
1 state? or states at 1 time?
sergio 4:48 PM
I ran one sim, and then execute savestate(), which saved one file in the local dir (svst.0.0). is this file representing the state of the network or just part of it?
billl 4:49 PM
ok so then you started again and did the sim.create()  right?
sergio 4:50 PM
yep
billl 4:51 PM
want to try mine?
sergio 4:51 PM
sure
billl 4:52 PM
/u/billl/nrniv/ihM1/tut2.py
4:53
so far did this :  execfile("tut2.py")
sim.runSim()
savestate()
4:55
then started again
sergio 4:58 PM
in your example, you don’t use parallel context?
billl 4:59 PM
pc is used by netpyne so it's there
4:59
why do you say i don't use?
sergio 4:59 PM

s = 'svst.{pcid}'.format(pcid = pc.id())

billl 4:59 PM
well notreally using it since only 1 node
sergio 4:59 PM
that line in mh example
billl 5:00 PM
what's that line for?
5:00
oh ok that's for mpi
5:00
yeah can use that if you want -- don't need it since only 1 node
sergio 5:00 PM
ok
billl 5:00 PM
and pc not called pc of course -- hidden somehwere inside netpyne
5:02
seems to work: ** execfile('tut2.py')
mindelay = sim.pc.allreduce(sim.pc.set_maxstep(10), 2) # flag 2 returns minimum value
sim.pc.psolve(2000)
5:02
well no error anyway
billl 5:09 PM
shows spikes after 1e3 -np.array(sim.simData.spkt)[:20]
array([ 1000.95 ,  1003.275,  1004.85 ,  1006.775,  1006.775,  1006.825,
       1006.975,  1006.975,  1007.3  ,  1007.35 ,  1007.425,  1007.875,
       1007.875,  1008.   ,  1008.1  ,  1008.3  ,  1008.35 ,  1009.65 ,
5:09
work for you?
sergio 5:10 PM
let me check
billl 5:11 PM
looks reasonable  -- sim.analyze()
sim.analysis.plotRaster() # won't show
plt.xlim(1e3,2e3) # reset time domain
billl 5:12 PM
billl 5:12 PM
let me check next that results are the same
billl 5:19 PM
what's the netpyne save command?  lms
sergio 5:20 PM
sim.saveData()?
billl 5:20 PM
sounds plausible :) -- give it a filename?
5:20
worked -- guess default -- Saving output as model_output.json  ...
sergio 5:20 PM
ok
billl 5:21 PM
how to read back?? -- AttributeError: 'module' object has no attribute 'readData'
5:21
loadSimData
sergio 5:22 PM
I usually read the json with a different file
billl 5:23 PM
oh ic -- yeah ohterwise overwrites stuff
5:23
salvador can loadSimData() recreate the objects? -- maybe that's better way than using sim.create() ??
5:23
guess i'll try :)
salvadord 5:31 PM
y if saved net (saved by default), can use sim.load(json_file) to load and recreate
billl 5:31 PM
need sim.create() after load or load does the create?
5:31
oh but wouldnt' want to do this since then won't give easy way to change the params

* 12-22-17

goal: work on safe state

** discussion on slack

billl
6:52 PM

I'm not getting same results from running a network sim to 2e3 vs savestate at 1e3 and run from there up to 2e3



how unhappy should i be?  -- how can i track down the lost states??



bill



['%.2f'%x for x in new[:10]]  #  ['1000.95', '1003.28', '1004.85', '1006.78', '1006.78', '1006.83', '1006.98', '1006.98', '1007.30', '1007.35']

['%.2f'%x for x in orig[:10]] #  ['1000.95', '1002.38', '1002.43', '1002.55', '1002.68', '1002.78', '1003.28', '1004.78', '1004.78', '1004.85']



len(orig)

951

>>> len(new)

924

>>> 

billl
7:46 AM

The standard debugging method is to use prcellstate to find the first difference.

There is a built-in prcellstate for network models where cells are identified by

gid. Otherwise there is a precellstate.hoc . If you know what the gid of the first

offending cell is, then I would recommend a prcellstate before the save and one

after the restore and see what the differences are. If helpful, and a run is short, I can

walk you through the process.

________________________________________

From: Bill Lytton <bill.lytton@downstate.edu>

Sent: Thursday, December 21, 2017 6:52 PM

To: Hines, Michael

Cc: salvadordura@gmail.com; Sergio Angulo; mohdsherif@yahoo.com

Subject: restorestate() not coming out same





I'm not getting same results from running a network sim to 2e3 vs savestate at 1e3 and run from there up to 2e3



how unhappy should i be?  -- how can i track down the lost states??



bill



['%.2f'%x for x in new[:10]]  #  ['1000.95', '1003.28', '1004.85', '1006.78', '1006.78', '1006.83', '1006.98', '1006.98', '1007.30', '1007.35']

['%.2f'%x for x in orig[:10]] #  ['1000.95', '1002.38', '1002.43', '1002.55', '1002.68', '1002.78', '1003.28', '1004.78', '1004.78', '1004.85']



len(orig)

951

>>> len(new)

924

>>>

billl
7:47 AM
but for now let's just use it and not worry about debugging it
7:49
moh are you having the same problem or is this just with netpyne?
billl
7:51 AM



thanks; I'll give that a try; meanwhile we'll just go ahead and see how useful it is



as salvador pointed out, once you change any parameters the prepared state is no longer entirely valid so that it's just an

approx that is better than the zero state provided by finitialize



mohamed.sherif
7:55 AM
I haven't tried to explore it further since our discussion yesterday, since seems we will still need to run some time to stabilize - if that time is quite long with the new network, I can tackle it again
billl
7:56 AM
idea was to reduce stabilization time 10x from 2-5 sec to just 200-500ms
salvadord
8:50 AM
so can ensure reproducibility despite potential bug?
billl
9:04 AM
ok, yeah i'll do that anyway :)
9:05
not precisely a bug -- just missed states;  same as we usually have anyway where we do fitinialize() but don't bother to get all the states set up so have some settling time for individual cells
billl
10:01 AM
ideally want to show reproducibility from the orig sim
10:02
so if run orig for 2e3 then show spkt (and spkid too) from 1e3-2e3 is same as what get from running out of restorestate from 1e3 to 2e3
10:02
that one failed
10:02
next want to show replicability -- running multiple times out of restorestate with same seed get same activity
10:02
(with different seed get different activity)
10:03
then want to show that can change params -- eg weights, and get something nonhorrible and also get reproducibilty out of the restorestate (with same seed, same weights on multiple runs)
mohamed.sherif
10:04 AM
@different seed - different drive seed, right?
billl
10:04 AM
yes drive or gfluct -- can't change the wiring
10:05
eventually will want savestates for 5 diff wirings
mohamed.sherif
10:08 AM
@for 5 diff wirings - ok
billl
10:09 AM
(eventually)
mohamed.sherif
10:09 AM
will start with replicating with "running multiple times out of restorestate with same seed get same activity"
billl
10:09 AM
(once have a good sim)
mohamed.sherif
10:09 AM
@eventually - yes
billl
10:09 AM
if you can show replicability from the orig that would be helpful since then i will know has to do with either netpyne or with the particular mod files being used in that other sim
mohamed.sherif
10:10 AM
ok
mohamed.sherif
10:28 AM
how to compare two nqs?
10:29
(the spike id and spike times are saved into an nqs in our code)
billl
11:00 AM
has a .eq()
11:00
i think
11:00
else just compare the vectors
mohamed.sherif
11:00 AM
@just compare vector - yeah
billl
11:01 AM
but have to grab the ones that are >1e3 eg gt = [x for x in sim.simData.spkt if x>1e3]
11:02
nqs.select(..t>1e3)
mohamed.sherif

** comparing 2 states

*** check json files
**** creating routine to compare json files
import json

d={}
data_files = ['model_output_0.json','model_output_1.json']
for i in range(len(data_files)):
	with open(data_files[i]) as json_data:
    		d[i] = json.load(json_data)

for i in range(len(data_files)): 
	spkts = d[i]['simData']['spkt'] #list
	spkinds = d[i]['simData']['spkid'] #list
	print spkts[-10:]

*** replicate bill's experiment
run sim for 1000 ms, then savestate, then run for other 1000 ms
compare to sim ran for 2000 ms

**** last 10 spkt comparisson
recovered state, last 10 spkt 
[978.95000000147, 979.4000000014717, 985.1000000014924, 985.6750000014945, 989.5000000015084, 995.175000001529, 997.4500000015373, 997.6000000015379, 997.7750000015385, 998.0750000015396]

sim for 2000 ms, last 10 spkt 
[1984.8500000051295, 1985.3500000051313, 1986.8750000051368, 1988.3750000051423, 1988.4500000051426, 1993.1250000051596, 1994.9750000051663, 1998.2500000051782, 1998.8000000051802, 1999.6250000051832]
 
*** trying mpi
mpiexec -n 4 nrniv -python -mpi tut2.py

** setting srdjan experiment
*** stimuli:
train 1: 1 burst, 200-300 ms
train 2: 2 bursts, 500 ms interval
train 3: 3 bursts, 500 ms interval
train 4: 4 bursts, 500 ms interval

*** 2 networks

1 plateau and the other no plateau

*** selecting all cells
stim80 = range(numcellsPT5_0,(numcellsPT5_0+(numcellsPT5*(len(cellParamLabels)-1))))

*** addidng conditional
if cfg.sampleList == 2:  # 
          cfg.stimList = range(0,40)
  elif cfg.sampleList == 40:  # 
          cfg.stimList = stim40
  elif cfg.sampleList == 80:  # 
          cfg.stimList = stim80

*** error message 
    File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 933, in fromListConn
    postCellGid = orderedPostGids[relativePostId]
IndexError: list index out of range

*** error was at longconn

* 12-26-17

goal: finish experiment srdjan


** running test sim
*** error 
Reading command line arguments using syntax: python file.py [simConfig=filepath] [netParams=filepath]
Balancing each compartment to -73 mV

An exception occurred during the error checking process...

Creating network of 12 cell populations on 1 hosts...
  Number of cells on node 0: 12 
  Done; cell creation time = 0.62 s.
Making connections...

*** turning error check to False
*** sim still  taking long time
*** turning off connectivity makes fix the sim
*** finding bug in connectivity
*** connectivity rule test worked
netParams.connParams['S->M'] = {'preConds': {'pop': 'PT5_0'}, 'postConds': {'pop': 'PT5_0'}, 'probability': 0.5, 'weight': 0.01, 'delay': 5, 'synMech': ESynMech}
*** convergence is not working
*** connlist not working
**** error message
Traceback (most recent call last):
  File "init.py", line 73, in <module>
    sim.net.connectCells()            			# create connections between cells based on params
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 544, in connectCells
    connFunc(preCellsTags, postCellsTags, connParam)  # call specific conn function
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 933, in fromListConn
    postCellGid = orderedPostGids[relativePostId]
IndexError: list index out of range

**** found error number of cells
cfg.singleCellPops = 1

**** turned off singleCellPops
**** convergence working

** setting stim
noise amp: 1.89
*** setting 5 stim, 50 ms interval 
cfg.NetStim1 = {'pop': 'PT5_0', 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 500, 'interval': 50, 'noise': 0.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}
cfg.glutAmp    = 1.75
cfg.glutSpread = 5.5   

*** run time 1340.27 s 
*** plots 
**** raster
[[./gif/network36_raster_1busrts.png]]

**** traces
[[./gif/traces_network36_1burst.png]]

*** setting second burst
cfg.NetStim2 = {'pop': 'PT5_0', 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 1250, 'interval': 50, 'noise': 0.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}

**** plots
[[./gif/traces_network36_2bursts.png]]
[[./gif/network36_raster_2bursts.png]]

*** reducing stim amp
original:
cfg.glutAmp    = 1.75

new:
1.4

**** plots
[[./gif/traces_network36_2bursts_stim14.png]]
[[./gif/network36_raster_2burst_stim14.png]]


*** stim amp 1.0
**** plots
[[./gif/network36_raster_2bursts_stim1.png]]
[[./gif/traces_network36_2bursts_stim1.png]]

*** stim amp 1.0, 20 spines
**** plots
[[./gif/traces_network36_2bursts_stim1_20spines.png]]
[[./gif/network36_raster_2bursts_stim1_20spines.png]]

* 12-27-17

goal: finish srdjan experiments

** exploring stim amp 
*** stim amp 0.7, 20 spines
**** plots
[[./gif/network36_raster_2bursts_stim07_20spines.png]]
[[./gif/traces_network36_2bursts_stim07_20spines.png]]

*** change seeding 
pointp.hPointp.noiseFromRandom123(i, i*2, i*3)

*** stim amp 0.5, 20 spines
**** plots
[[./gif/network36_raster_2bursts_stim05_20spines.png]]
[[./gif/traces_network36_2bursts_stim05_20spines.png]]

*** stim amp 0.7 with 20 stim is better outcome

** running 4 burst trains for 4000

*** setting netstim
cfg.NetStim1 = {'pop': 'PT5_0', 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 500, 'interval': 50, 'noise': 0.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}
cfg.NetStim2 = {'pop': 'PT5_0', 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 1250, 'interval': 50, 'noise': 0.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}
cfg.NetStim3 = {'pop': 'PT5_0', 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 2000, 'interval': 50, 'noise': 0.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}
cfg.NetStim4 = {'pop': 'PT5_0', 'loc': 0.99999, 'sec': 'spineheads', 'synMech': ['NMDA','AMPA'], 'start': 2750, 'interval': 50, 'noise': 0.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}

*** error while gathering data
Gathering data...
terminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc
[zn:09732] *** Process received signal ***
[zn:09732] Signal: Aborted (6)
[zn:09732] Signal code:  (-6)
[zn:09732] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0x11390)[0x7eff01a06390]
[zn:09732] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x38)[0x7eff00e82428]
[zn:09732] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x16a)[0x7eff00e8402a]
[zn:09732] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x16d)[0x7eff014bc84d]
[zn:09732] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0x8d6b6)[0x7eff014ba6b6]
[zn:09732] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0x8d701)[0x7eff014ba701]
[zn:09732] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0x8d919)[0x7eff014ba919]
[zn:09732] [ 7] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0x8debc)[0x7eff014baebc]
[zn:09732] [ 8] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_Znam+0x9)[0x7eff014baf19]
[zn:09732] [ 9] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0x14c42)[0x7eff021b4c42]
[zn:09732] [10] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(+0xaff57)[0x7eff03cbdf57]
[zn:09732] [11] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(hoc_call_ob_proc+0x2d7)[0x7eff03f8a6b7]
[zn:09732] [12] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(hoc_object_component+0x7c6)[0x7eff03f8b5f6]
[zn:09732] [13] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0x9f7f)[0x7eff021a9f7f]
[zn:09732] [14] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xbe14)[0x7eff021abe14]
[zn:09732] [15] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(_ZN10OcJumpImpl7fpycallEPFPvS0_S0_ES0_S0_+0x61)[0x7eff03c985d1]
[zn:09732] [16] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xc20f)[0x7eff021ac20f]
[zn:09732] [17] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7eff01d23263]
[zn:09732] [18] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x543c)[0x7eff01cc134c]
[zn:09732] [19] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x7124)[0x7eff01cc3034]
[zn:09732] [20] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x85c)[0x7eff01dfa04c]
[zn:09732] [21] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCode+0x19)[0x7eff01cbbd99]
[zn:09732] [22] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_FileExFlags+0x8e)[0x7eff01d3608e]
[zn:09732] [23] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xe7)[0x7eff01d376d7]
[zn:09732] [24] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(nrnpy_pyrun+0x2c)[0x7eff021a8b6c]
[zn:09732] [25] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(nrnpython_start+0x1b8)[0x7eff021a8fc8]
[zn:09732] [26] nrniv(ivocmain+0x578)[0x402af8]
[zn:09732] [27] nrniv(main+0x56)[0x402156]
[zn:09732] [28] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7eff00e6d830]
[zn:09732] [29] nrniv[0x4021e9]
[zn:09732] *** End of error message ***
--------------------------------------------------------------------------
mpiexec noticed that process rank 0 with PID 0 on node zn exited on signal 6 (Aborted).
--------------------------------------------------------------------------

*** running 3500 ms
**** same error

*** discussion on slack
	
billl 4:21 PM
ouch
sergio 4:21 PM
I have this error after running a long sim
billl 4:21 PM
you've been aborted!
sergio 4:21 PM
hehehe literally
billl 4:21 PM
you must have filled up memory
4:21
what are you saving?  everything?
sergio 4:22 PM
yep, should I save less items? or use less number of neurons?
billl 4:23 PM
save less
4:23
what machine?
4:23
are you saving to your own directory or to some local data dir?
sergio 4:23 PM
zn
4:23
my own dir
salvadord 4:24 PM
https://www.neuron.yale.edu/phpBB/viewtopic.php?f=45&t=3770&sid=bd2623bc503d084815a669c9c896a985#p16122
sergio 4:24 PM
ok, I’m going to modify the number of items that are saved
billl 4:24 PM
prob don't want to save to your dir since will take a long time to save over nfs
4:26
zn has 1.5 TB space available
salvadord 4:26 PM
the error is not related to saving to file… but gathering from different processors, so ram mem
billl 4:27 PM
oh ic
4:27
ok well also might want to save locally
4:27
and may need to save intermittantly -- does netpyne support that (yet) :)
4:27
oh yeah alloc -- my confusion
4:28
anyway i made a dir for you if you want to use it -- will be much faster /data/sergio.... on zn
sergio 4:28 PM
thanks
billl 4:28 PM
prob don't want to gather but just dump the pieces from the different nodes
sergio 4:28 PM
I’m going to start to use it
billl 4:28 PM
make sure works for you first
4:29
`touch aa` in that dir so show that you can create a file
4:29
i fixed permissions so should be ok
salvadord 4:29 PM
netpyne does not support saving interminttantly or dumping pieces from different nodes… yet :slightly_smiling_face:
4:29
see forum link I posted above for possible solutions
sergio 4:30 PM

- set cfg.saveCellSecs=False -- removes all data on cell sections prior to gathering from nodes 

- set cfg.saveCellConns=False -- removes all data on cell connections prior to gathering from nodes 

- set cfg.gatherOnlySimData=True -- gathers from nodes only the output simulation data (not the network instance)

billl 4:30 PM
prob also want to only do the raster data and a very few cells
4:30
ie not all the cells voltages
4:31
can work with just raster data later since can recreate any cell trace for any time from that (think netpyne already supports that?)
salvadord 4:33 PM
recreate - doable (“network clamp”), I have example for m1, but code not part of netpyne (yet!) … however for that need all the conns data, which also requires significant memory, so probably better off recording a few traces and not storing conns
billl 4:34 PM
but can recreate the conns data from the param files
4:34
(something that will eventually be parallelized too)
4:34
shouldn't have the conn data stored since that defeats the purpose of the networkclamp
salvadord 4:34 PM
yeah, but depending on model size that can take a while…. guess your net pretty small right now so shoudlnt be problem
billl 4:35 PM
guess if it's small then the conn data won't kill it
salvadord 4:35 PM
defeat purpose- why?
billl 4:35 PM
idea is to save space -- mostly disk space but also ram
4:35
so if saving megadata for conn
salvadord 4:35 PM
right
billl 4:36 PM
but for current purposes wonder if might be easiish (ie i could try even? :) ... to set up the gatherdata and save in a series so would with some flag gather/dump, gather/dump, ... ??
4:36
rather than gatherall dumpall
salvadord 4:37 PM
feel free to try :slightly_smiling_face:
billl 4:37 PM
ok
4:37
but meanwhile you've got some options sergio
4:38
so many fun things to do hard to find time to do them all!
salvadord 4:38 PM
btw, the gatherData func (and many others) need some refactoring / tidying up / code optimization … so feel free to suggest improvements
billl 4:38 PM
ok
4:38
i should learn to do the proper merge and stuff but that seems harder than doing the programming!
4:39
you have a short cheat sheet on that perchance?
salvadord 4:39 PM
:slightly_smiling_face:
4:39
we had a git guide with steps..
billl 4:39 PM
`propose changes` ...
salvadord 4:39 PM
https://docs.google.com/document/d/1pSfHrdjwNSf6xpeV0F4bw3SGDdQmW7DTANtIjvA_G28/edit#heading=h.x4rmiflhgrsb
billl 4:39 PM
i know basic git but seting up the parallel distro -- i have some notes from before so can give it a try
4:40
oh ok -- don't think i saw that one beofre
4:40
thx
salvadord 4:40 PM
basically need to do  pull request (PR) either from a different branch or a forked repo
billl 4:40 PM
forked
4:40
right
salvadord 4:40 PM
then I can check all ok, and merge the PR into development
billl 4:41 PM
better to request piecemeal -- not do a lot of changes all over the place? -- that way makes simpler for you i think?
4:41
ie if change 1 sec of code
4:41
anyway was just going to fix that int(True) think and then look at gatherdata
salvadord 4:41 PM
its set up with Travis CI, so all commits are automatically tested on battery of example nets and can check if anything fails
billl 4:41 PM
nice
4:42
actually the programming is thing i now try to do at the end of the day since more relaxing than the grant writing!
4:43
did i mention that i gave up on the deep learning one :(  ... just tyring to do the AIS one now
sergio 4:47 PM
bill, I haven’t found `/data/sergio` in neurosim, is it under `/u`?
billl 4:47 PM
did you look on `zn` ?
4:47
/ means the root location so not under anything else
sergio 4:48 PM
I look on `no`
billl 4:48 PM
it is not on `no` -- it is a directory on `zn`
sergio 4:48 PM
ok
billl 4:48 PM
so that you can save directly on `zn`
sergio 4:48 PM
ok
4:48
perfect

*** plan
- set cfg.saveCellSecs=False 
- set cfg.saveCellConns=False  
- set cfg.gatherOnlySimData=True 
- reduce number of cells recorded
- save data locally on zn: /data/sergioangulo

*** saving v soma from less cells
cfg.recordCells = [[(pop,5),(pop,45)] for pop in plateau]

*** setting gatherOnlySimData =True
**** error message
Traceback (most recent call last):
  File "init.py", line 87, in <module>
    sim.gatherData()                  			# gather spiking data and cell info from each node
  File "/usr/site/nrniv/local/python/netpyne/netpyne/simFuncs.py", line 1282, in gatherData
  Cells: 84
  Connections: 0 (0.00 per cell)
  Spikes: 311 (370.24 Hz)
    sim.allSimData['popRates'] = sim.popAvgRates()
  File "/usr/site/nrniv/local/python/netpyne/netpyne/simFuncs.py", line 1314, in popAvgRates
    avgRates[pop] = len([spkid for spkid in spkids if sim.net.allCells[int(spkid)]['tags']['pop']==pop])/numCells/tsecs
IndexError: list index out of range

*** side project -- sync analysis improved

*** running simulation worked

* 12-28-17

goal: finish srdjan sim

** simulation for 4s, 4 trains
*** plots
**** error 
gid dictionary is empty in json, didn't record voltage of cells
*** if recording all cells, bad alloc error message
*** recording volt in Bdend, taking it out 
*** worked only recording volt in soma 
*** plots
[[./gif/network36_raster.png]]
[[./gif/traces_network36.png]]

** simulation 4s, 3 trains, network 37
*** plots
[[./gif/traces_network37.png]]
[[./gif/network37_raster.png]]

** simulation 4s, 2 trains, network 38
*** plots
[[./gif/network38_raster.png]]
[[./gif/traces_network38.png]]

** simulation 4s, 1 train, network 39
*** plots
[[./gif/network39_raster.png]]
[[./gif/traces_network39.png]]

** setting no plateau network, network 40
*** iclamp
cfg.NetStim1 = {'pop': 'PT5_0', 'loc': 0.5, 'sec': 'Adend1', 'synMech': ['NMDA','AMPA'], 'start': 500, 'interval': 50, 'noise': 0.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}

*** netParams
in netParams.stimTargetParams 'synsPerConn': numActiveSpines is commented out 

**** error
NameError: name 'cur_loc' is not defined

**** changed loc in stimTarget
'loc': ns['loc']

**** error
NameError: name 'cur_delay' is not defined

**** changed delay in stimTarget
'delay': ns['delay']

* 12-29-17

goal: finish srdjan, work on save state

** Setting stim amp in Adend1                
*** stim 0.7, Adend1, loc 0.5
[[./gif/traces_network40_stim07.png]]
[[./gif/network40_raster_stim07.png]]

**** stim to low to induce activity

*** stim 1.5
[[./gif/traces_network40_stim15.png]]

*** stim 2.0
[[./gif/traces_network40_stim20.png]]

**** still no activity

*** stim 3.0
[[./gif/traces_network40_stim30.png]]
**** small changes

*** stim 6.0
[[./gif/traces_network40_stim60.png]]
**** more depolarization

*** stim 8.0
[[./gif/traces_network40_stim80.png]]

*** stim 10.0
[[./gif/traces_network40_stim100.png]]
**** no changes

*** stim 20.0
[[./gif/traces_network40_stim200.png]]
**** no changes

*** stim 40.0
[[./gif/traces_network40_stim400.png]]
[[./gif/network40_raster_stim400.png]]


**** no changes

** setting stim to soma

*** stim 10.0
[[./gif/traces_network40_soma_stim100.png]]
[[./gif/network40_raster_soma_stim100.png]]

*** stim 15.0
[[./gif/traces_network40_soma_stim150.png]]
[[./gif/network40_raster_soma_stim150.png]]

*** stim 5.0
[[./gif/traces_network40_soma_stim50.png]]
[[./gif/network40_raster_soma_stim50.png]]

**** best stim at 10.0

** stim 10.0, 4s
[[./gif/network40_raster_soma_stim100.png]]
[[./gif/traces_network40_4s.png]]

** network 41, 2 trains
[[./gif/network41_raster.png]]
[[./gif/traces_network41.png]]

** network 42, 3 trains
[[./gif/network42_raster.png]]
[[./gif/traces_network42.png]]

** network 43, 4 trains
[[./gif/network43_raster.png]]
[[./gif/traces_network43.png]]


* 01-02-18

goal: finish srdjan experiments, meeting, work on savestate

** meeting

*** reduced gfluct amplitude
*** use netstim to control netstim for multiple bursts
*** do stats

** plan 
*** reduced gfluct
*** run again sim

** setting reduced gfluct
** v18

*** stim
include:
'synsPerConn': numActiveSpines, 
'delay': cur_delay}
'loc':  cur_loc,

*** noise
noise_amp[2] == 1.44

*** running sim is taking a long time (9040.59 s)

** network 44

*** error setting wrong amp (5.0 instead of 0.7)

*** moving to my, zn is busy. 

*** stim 0.7

*** sim running slow

*** running time (10385.09 s)

* 01-03-17

goal: finish srdjan experiments, work on save state

** plots network 44
[[./gif/network44_raster.png]]
[[./gif/traces_network44.png]]

*** better definition of plateau but needs to reduce noise amp 

** network 45, noise amp factor 1.22
*** running time 9319.26 s
[[./gif/network45_raster.png]]
[[./gif/traces_network45.png]]

** discussion on slack

the noise amp that I used for yesterday meeting was 1.88
3:08
I’m planning to use noise amp 1.22 to continue the sims for srdjan
billl 3:18 PM
i thought we were going to reduce the noise amp?
3:18
so don't get much firing
sergio 3:20 PM
yep, I did it, the noise amplitude that I used before was 1.88.  The noise amp that I’m planning to use is 1.22. But I can try even lower to get less firing
billl 3:21 PM
used before?  you mean showed yesterday?
sergio 3:21 PM
yep
billl 3:21 PM
ah ok
3:22
so much firing at the beginning
3:22
maybe time to set up the steadystate?
sergio 3:23 PM
yep, I was planning to do that part also, I can set it up and then continue working with srdjan experiments
billl 3:24 PM
since otherwise looks like you can't start till about 3 or 4 sec so long waits
sergio 3:26 PM
ok

salvadord 3:31 PM
why 3 or 4 secs? the firing at the beginning is due to the stims that sergio is providing right?
sergio 3:32 PM
the stim is at 500 ms
3:32
a bursts of 5 stim
salvadord 3:32 PM
right, and thats where you see the high activity / noise (500-1000ms) … is that what u were referring to, bill?
billl 3:35 PM
oh yeah that's what i was referring to
3:36
oh ok so what does it look like with no stim?
sergio 3:38 PM
I don’t have a ‘no stim’ sim now, but I can run one and do a savestate
billl 3:38 PM
or can just move ahead
3:38
so what are you showing so far?
sergio 3:41 PM
reducing the amplitude of the noise to produce less firing in the network. Next I was planning to run sim with multiple burst and compare the plateau network with one with no plateau capacity
billl 3:43 PM
in additon to multiple bursts was going to do multiple single spikes
3:43
still not entirely clear to me what srdjan is looking for here;  is it cleawr to you?
sergio 3:47 PM
I think srdjan wants to explore if the network can learn or retain information depending of the plateau capacity.
billl 3:48 PM
we have no learning
3:48
so we can't explore that
3:48
try again :)
3:48
or we can just move forward and see what we see and then ask him again
3:48
(the learning was what bugged me when he said `imprinting`)
sergio 3:51 PM
in that order of ideas, should be better to implement the savestaten, clarify the experiment with srdjan, and then perform the experiments?
billl 3:52 PM
yeah let's do the savestate now -- i think would be good to have
3:52
then you and i can discuss what this is going t oshow
3:52
i'd like to see the single spike stims 1st and then burst
sergio 3:52 PM
ok

** checking save state from tut2 bill's file
ss=h.SaveState()

def savestate (fn='svst'):
    f = h.File(fn)
    ss.save()
    ss.fwrite(f)

def restorestate (fn='svst'):
    f = h.File(fn)
    ss.fread(f)
    ss.restore()

def rerun (t=2000):
    h.finitialize()
    restorestate()
    sim.preRun() # to do sim.pc.set_maxstep(10)
    sim.pc.psolve(t)

*** copied to init.py
*** v19
*** network 46
*** running and savestate for 40 ms
create network
then runsim
then savestate

*** recovering state
sim.create()
**** error
>>> Traceback (most recent call last):
  File "init.py", line 87, in <module>
    sim.create()
  File "/usr/site/nrniv/local/python/netpyne/netpyne/wrappers.py", line 23, in create
    if not simConfig: simConfig = top.simConfig
AttributeError: 'module' object has no attribute 'simConfig'

**** fixed if instead of sim.create(), uses sim.net.initilize(),sim.net.createPops(),sim.net.createCells(), sim.net.connectCells(),sim.net.addStims() 

*** restorestate()
worked
*** sim.runSim()
it is not doing anything

*** Tried restorestate(), and then sim.create()
**** error
nrniv: savstate.cpp:763: virtual void SaveState::read(OcFile*, bool): Assertion `nt == i && nc == memb_list[i].nodecount' failed.
[my:27934] *** Process received signal ***
[my:27934] Signal: Aborted (6)
[my:27934] Signal code:  (-6)

...
--------------------------------------------------------------------------
mpiexec noticed that process rank 19 with PID 0 on node my exited on signal 6 (Aborted).
--------------------------------------------------------------------------


mpiexec -np 4 nrniv -python -mpi tut2.py

*** discussion on slack
	
sergio 6:19 PM
I saved one state, and now I’m trying to do `restorestate()`. First, I called the `sim.initialize()`, then `restorestate()`, but it didn’t do anything after `sim.runSim()`. Then I first to ran `restorestate()`, and then `sim.initialize()`, and have an error message.  How is the correct way to do restore estate?
billl 6:23 PM
did you copy what i did
6:23
presumably i did correctly? :)  -- well it worked anyway
sergio 6:23 PM

ss=h.SaveState()

def savestate (fn='svst'):

  f = h.File(fn)

  ss.save()

  ss.fwrite(f)

def restorestate (fn='svst'):

  f = h.File(fn)

  ss.fread(f)

  ss.restore()

def rerun (t=2000):

  h.finitialize()

  restorestate()

  sim.preRun() # to do sim.pc.set_maxstep(10)

  sim.pc.psolve(t)

billl 6:24 PM
is that mine?
sergio 6:24 PM
this is the part that I copied to init.pi
billl 6:24 PM
maybe make sure that mine works first and then switch the code over to yours
sergio 6:25 PM
ok

*** trying tut2.py

**** running tut2.py

nrniv -python -mpi tut2.py

**** savestate() error message 
>>> savestate()
nrniv: savstate.cpp:421: void SaveState::alloc(): Assertion `sec->parentnode' failed.
[my:29163] *** Process received signal ***
[my:29163] Signal: Aborted (6)
[my:29163] Signal code:  (-6)
[my:29163] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0x11390)[0x7fdd1782a390]
[my:29163] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x38)[0x7fdd16ca6428]
[my:29163] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x16a)[0x7fdd16ca802a]
[my:29163] [ 3] /lib/x86_64-linux-gnu/libc.so.6(+0x2dbd7)[0x7fdd16c9ebd7]
[my:29163] [ 4] /lib/x86_64-linux-gnu/libc.so.6(+0x2dc82)[0x7fdd16c9ec82]
[my:29163] [ 5] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(_ZN9SaveState5allocEv+0x276)[0x7fdd19ab9b56]
[my:29163] [ 6] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(_ZN9SaveState4saveEv+0x209)[0x7fdd19abadd9]
[my:29163] [ 7] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(+0x854ca)[0x7fdd19ab74ca]
[my:29163] [ 8] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(hoc_call_ob_proc+0x1dc)[0x7fdd19dae5bc]
[my:29163] [ 9] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(hoc_object_component+0x598)[0x7fdd19daf3c8]
[my:29163] [10] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0x9f7f)[0x7fdd17fcdf7f]
[my:29163] [11] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xbe14)[0x7fdd17fcfe14]
[my:29163] [12] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(_ZN10OcJumpImpl7fpycallEPFPvS0_S0_ES0_S0_+0x61)[0x7fdd19abc5d1]
[my:29163] [13] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xc20f)[0x7fdd17fd020f]
[my:29163] [14] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7fdd17b47263]
[my:29163] [15] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x543c)[0x7fdd17ae534c]
[my:29163] [16] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x85c)[0x7fdd17c1e04c]
[my:29163] [17] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x6ffd)[0x7fdd17ae6f0d]
[my:29163] [18] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x85c)[0x7fdd17c1e04c]
[my:29163] [19] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCode+0x19)[0x7fdd17adfd99]
[my:29163] [20] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_InteractiveOneFlags+0x161)[0x7fdd17b5bbc1]
[my:29163] [21] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_InteractiveLoopFlags+0x5e)[0x7fdd17b5bdfe]
[my:29163] [22] nrniv(ivocmain+0x578)[0x402af8]
[my:29163] [23] nrniv(main+0x56)[0x402156]
[my:29163] [24] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fdd16c91830]
[my:29163] [25] nrniv[0x4021e9]
[my:29163] *** End of error message ***
Abort (core dumped)

* 01-04-18

goal: work on savestate-restorestate

** savestate 
*** error fix
call sim.runSim() first then savestate()

*** call function restorestate
sim.create()
restorestate()
sim.runSim()
sim.saveData()

*** runsim for 2s and compare to recovered state

*** comparing 10 last spkts 
 
model_output_0.json: [978.95000000147, 979.4000000014717, 985.1000000014924, 985.6750000014945, 989.5000000015084, 995.175000001529, 997.4500000015373, 997.6000000015379, 997.7750000015385, 998.0750000015396]
model_output_1.json: [1984.8500000051295, 1985.3500000051313, 1986.8750000051368, 1988.3750000051423, 1988.4500000051426, 1993.1250000051596, 1994.9750000051663, 1998.2500000051782, 1998.8000000051802, 1999.6250000051832]

**** not equal spktimes 

*** trying rerun()
sim.create()
rerun()
sim.runSim()

*** comparing states
model_output_0.json: [978.95000000147, 979.4000000014717, 985.1000000014924, 985.6750000014945, 989.5000000015084, 995.175000001529, 997.4500000015373, 997.6000000015379, 997.7750000015385, 998.0750000015396]
model_output_1.json: [1984.8500000051295, 1985.3500000051313, 1986.8750000051368, 1988.3750000051423, 1988.4500000051426, 1993.1250000051596, 1994.9750000051663, 1998.2500000051782, 1998.8000000051802, 1999.6250000051832]

**** not equal estates

*** trying without sim.runSim()
sim.create()
rerun()

*** comparing states
model_output_0.json: [1992.1000000051558, 1992.150000005156, 1992.150000005156, 1992.450000005157, 1998.8000000051802, 1998.9000000051806, 1998.9500000051808, 1998.9500000051808, 1999.4000000051824, 1999.9000000051842]
model_output_1.json: [1984.8500000051295, 1985.3500000051313, 1986.8750000051368, 1988.3750000051423, 1988.4500000051426, 1993.1250000051596, 1994.9750000051663, 1998.2500000051782, 1998.8000000051802, 1999.6250000051832]

**** better but not similar

*** savestate again
**** similar output than before

*** trying savestate on eee model
**** savestate() worked

*** restorestate() error, segmentation fault
>>> rerun(t=80)
[my:07735] *** Process received signal ***
[my:07735] Signal: Segmentation fault (11)
[my:07735] Associated errno: Unknown error 32571 (32571)
[my:07735] Signal code:  (-360084160)
[my:07735] Failing at address: 0x7f3bea316958
[my:07735] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x354b0)[0x7f3be756a4b0]
[my:07735] [ 1] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(+0x196e8)[0x7f3bea64e6e8]
[my:07735] [ 2] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(nrn_rhs+0xfb)[0x7f3bea66aa9b]
[my:07735] [ 3] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(setup_tree_matrix+0xe)[0x7f3bea66ae1e]
[my:07735] [ 4] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(+0x29e67)[0x7f3bea65ee67]
[my:07735] [ 5] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(+0x29f0d)[0x7f3bea65ef0d]
[my:07735] [ 6] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(nrn_fixed_step_group+0x19c)[0x7f3bea65e1bc]
[my:07735] [ 7] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(ncs2nrn_integrate+0x156)[0x7f3bea39e3d6]
[my:07735] [ 8] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(_ZN3BBS12netpar_solveEd+0xa3)[0x7f3bea3c6553]
[my:07735] [ 9] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(+0xb0e89)[0x7f3bea3a6e89]
[my:07735] [10] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(hoc_call_ob_proc+0x1dc)[0x7f3bea6725bc]
[my:07735] [11] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(hoc_object_component+0x598)[0x7f3bea6733c8]
[my:07735] [12] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0x9f7f)[0x7f3be8891f7f]
[my:07735] [13] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xbe14)[0x7f3be8893e14]
[my:07735] [14] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(_ZN10OcJumpImpl7fpycallEPFPvS0_S0_ES0_S0_+0x61)[0x7f3bea3805d1]
[my:07735] [15] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xc20f)[0x7f3be889420f]
[my:07735] [16] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f3be840b263]
[my:07735] [17] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x543c)[0x7f3be83a934c]
[my:07735] [18] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x85c)[0x7f3be84e204c]
[my:07735] [19] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x6ffd)[0x7f3be83aaf0d]
[my:07735] [20] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x85c)[0x7f3be84e204c]
[my:07735] [21] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCode+0x19)[0x7f3be83a3d99]
[my:07735] [22] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_InteractiveOneFlags+0x161)[0x7f3be841fbc1]
[my:07735] [23] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_InteractiveLoopFlags+0x5e)[0x7f3be841fdfe]
[my:07735] [24] nrniv(ivocmain+0x578)[0x402af8]
[my:07735] [25] nrniv(main+0x56)[0x402156]
[my:07735] [26] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7f3be7555830]
[my:07735] [27] nrniv[0x4021e9]
[my:07735] *** End of error message ***
--------------------------------------------------------------------------
mpiexec noticed that process rank 0 with PID 0 on node my exited on signal 11 (Segmentation fault).
--------------------------------------------------------------------------

**** comenting out steupRecording 
**** runnin sim for 40 ms and savestate()
**** still same error

**** asked on slack
	
sergio 2:03 PM
I did try to do savestate in the tut2 model and worked
billl 2:04 PM
so want to try editing that file?
sergio 2:04 PM
then I tried it with the eee model, I saved a stated, but then when I tried to restore the state I have this error message
billl 2:06 PM
ok, so want to try editing from tut2?
2:06
or debug what you have?
sergio 2:08 PM
restoring the state in tut2 worked, I would like to debug for the eee model
2:08
where should I start?
billl 2:09 PM
start with the command that gave the crash
sergio 2:12 PM
ok, let me check the `rerun()` command
billl 2:12 PM
split up the command so can run the pieces
2:12
best if do interactively
sergio 2:12 PM
ok

**** plan 
debug and run rerun() in parts

**** debugging
h.finitialize()
restorestate()
sim.preRun()
sim.pc.psolve(80)

**** error appears after sim.pc.psolve(80)

**** slack discussion
the error occurs after `sim.pc.psolve()`
billl 2:27 PM
what file are you loading?
2:27
how did you save it?
2:27
what is the time when you reload?
2:27
h.t
2:28
check the queues and the states (states first)
sergio 2:28 PM
I save a svst file after running a sim for 40 ms
billl 2:28 PM
before and after reload
sergio 2:30 PM
I created the network, then ran the sim for 40  ms (with `sim.runSim()`), and saved the state with `savestate()`
2:32
for the restore part, I created the network and then ran `rerun()` with `t=80`
2:33
how can I check the queues and states?
billl 2:33 PM
huh? how can yo umake t=80 if t is 40??
2:34
states are accessible either in the GUIs or on command line -- which do you prefer
2:34
queue availabe via cvode.print_queue or other commands -- see the manual
2:35
event_queue_info() (CVode method)       print_event_queue() (CVode method)
sergio 2:39 PM
let me modify t to t=40.  I’ll check queue and states
billl 2:40 PM
have to be careful with params etc else will be very hard to debug

**** plan rerun with t=40
**** no error
** v20
** network47
*** discussion on slack
	
sergio 2:56 PM
ok, I don’t have error if t=40
billl 2:56 PM
oh that was easy!
2:57
i know it's an annoying question but just curious -- why did you want to do 80?
sergio 2:58 PM
I thought that I have to rerun twice the time of the savestate()
2:58
but it was my misunderstanding
billl 2:59 PM
yeah you want to rerun more than the time of the savestate (can be twice or 3 times or whatehver)
2:59
but t is where you are starting not where you are ending
sergio 2:59 PM
ah ok
2:59
got it

*** t is where to start, not where to end

**** with tut2, couldn't retore state if t was less than original time of savestate

*** tried t=40
*** recovered state was similar at 0 point
*** checking bill's nb pc.solve(2000)
*** error while running restorestate()
>>> restorestate()
nrniv: ../nrncvode/netcvode.cpp:5629: PlayRecord* NetCvode::playrec_item(int): Assertion `i < prl_->count()' failed.
Abort (core dumped)

*** started from scratch
savestate()
then
re-started
sim.initialize
rerun(t=40)
**** worked but stuck at this point
*** tried different sequence
according to bill's nb finitialize() is for setting vectors to 0 len
starting with sequence:
restorestate()
sim.runSim()
**** error segmentation fault

*** tried preRun()
restorestate()
sim.preRun()
sim.pc.psolve(40)
 output =0
sim.pc.psolve(41)
 error segmentation fault

*** tried preRun then sim.runSim
**** segmentation fault
*** tried finitilaze() and longer pc.psolve
worked
*** pc.psolve uses tstop
https://www.neuron.yale.edu/neuron/static/docs/help/neuron/neuron/classes/parcon.html#psolve
pc.psolve(tstop)
DESCRIPTION

This should be called on every machine to start something analogous to cvode.solve(tstop). In fact, if the variable step method is invoked this is exactly what will end up happening except the solve will be broken into steps determined by the result of set_maxstep

* 01-07-18

** rerun() after mpi

*** error message:

nrniv: savstate.cpp:763: virtual void SaveState::read(OcFile*, bool): Assertion `nt == i && nc == memb_list[i].nodecount' failed.
[zn:45628] *** Process received signal ***

*** also after restorestate()

** using tut2 with mpi
*** error after restorestate()
nrniv: savstate.cpp:763: virtual void SaveState::read(OcFile*, bool): Assertion `nt == i && nc == memb_list[i].nodecount' failed.

*** tried sin.Runsim() and then h.finitialize(), but doesn't do something

*** verfied running single core 
sim.create()
sim.runSim()
h.finitialize()
restorestate()
sim.preRun() 
sim.pc.psolve(t)
**** can work with rerun()
**** error with restorestate()
**** error with ss.fread(f)

** tried eee model
created network 
then 
rerun()

*** error message
nrniv: savstate.cpp:763: virtual void SaveState::read(OcFile*, bool): Assertion `nt == i && nc == memb_list[i].nodecount' failed.

*** error at restorestate()
*** error at ss.fread(f)

* 01-08-18

goal: finish savestate

** restoring state in the eee model
saved state after running 400 ms on single core

*** running single core
nrniv -python -mpi init.py
*** restoring state
rerun(400)
*** saved Data
sim.saveData()
*** empty spike times, and voltage vector
voltage record only one data point (-65 mV) for all cells
*** sim.runSim() after run produce segmentation fault error

[zn:36582] *** Process received signal ***
[zn:36582] Signal: Segmentation fault (11)
[zn:36582] Signal code:  (268530944)
[zn:36582] Failing at address: 0x42
[zn:36582] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x354b0)[0x7fbd0df124b0]
[zn:36582] [ 1] x86_64/.libs/libnrnmech.so(+0x394f3)[0x7fbd023264f3]
[zn:36582] [ 2] x86_64/.libs/libnrnmech.so(+0x3971a)[0x7fbd0232671a]
[zn:36582] [ 3] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(nrn_finitialize+0x3ab)[0x7fbd110073bb]
[zn:36582] [ 4] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(finitialize+0x3a)[0x7fbd1100760a]
[zn:36582] [ 5] /usr/site/../arch/nrn/x86_64/lib/libnrnoc.so.0(hoc_call+0x184)[0x7fbd11019384]
[zn:36582] [ 6] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xc0a4)[0x7fbd0f23c0a4]
[zn:36582] [ 7] /usr/site/../arch/nrn/x86_64/lib/libnrniv.so.0(_ZN10OcJumpImpl7fpycallEPFPvS0_S0_ES0_S0_+0x61)[0x7fbd10d285d1]
[zn:36582] [ 8] /usr/site/../arch/nrn/x86_64/lib/libnrnpython.so.0(+0xc20f)[0x7fbd0f23c20f]
[zn:36582] [ 9] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7fbd0edb3263]
[zn:36582] [10] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x543c)[0x7fbd0ed5134c]
[zn:36582] [11] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x7124)[0x7fbd0ed53034]
[zn:36582] [12] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x85c)[0x7fbd0ee8a04c]
[zn:36582] [13] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyEval_EvalCode+0x19)[0x7fbd0ed4bd99]
[zn:36582] [14] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_InteractiveOneFlags+0x161)[0x7fbd0edc7bc1]
[zn:36582] [15] /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0(PyRun_InteractiveLoopFlags+0x5e)[0x7fbd0edc7dfe]
[zn:36582] [16] nrniv(ivocmain+0x578)[0x402af8]
[zn:36582] [17] nrniv(main+0x56)[0x402156]
[zn:36582] [18] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbd0defd830]
[zn:36582] [19] nrniv[0x4021e9]
[zn:36582] *** End of error message ***
Segmentation fault (core dumped)


*** trying multiple cores
saved state with multiple cores after 400 ms

*** restoring state error after rerun()
nrniv: savstate.cpp:763: virtual void SaveState::read(OcFile*, bool): Assertion `nt == i && nc == memb_list[i].nodecount' failed.
nrniv: savstate.cpp:956: void SaveState::readnet(FILE*): Assertion `npss_ == i' failed.

*** debugging rerun()
not doing anything after sim.preRun()


** discussion on slack
bill, I can restore a state with the tut2 model when I use a single core. But I have an error while running the sim with multiple cores after executing the command to read the the savestate file `fread()`.
billl 3:47 PM
you need multiple savestate files if have multiple cores
3:47
can do multiple threads with 1 file
3:47
but thought you already got working with your model?
3:47
each core saves own state and startup again with same number of cores
sergio 3:48 PM
it restores without crashing but the vectors are empty
billl 3:48 PM
how many cores? how many files are you using?
3:49
ok so your sim not working even with one core right?
sergio 3:49 PM
it was trying to use 24, but didn’t know about multiple threads with 1 file
billl 3:50 PM
so should get 1 core working before trying multiple
3:50
and get 1 thread working before multiple threads
sergio 3:54 PM
ok, but still I don’t know how to get the eee model to run after the restoring the savestate.
3:54
it doesn’t crash but I don’t have any activity
billl 3:55 PM
ok so nothing works so prob should give up on this for now
3:55
i thought you had told me last week that it was working -- misunderstood
sergio 3:57 PM
last week, I was stuck with the time for pc.psolve()
billl 3:57 PM
yes i know that
3:58
ok so couldn't get to work then let's get back to work and put this aside for now
sergio 3:58 PM
ok
4:00
for tomorrow, do you want me to present data about the experiments proposed by srdjan?
4:00
or do you want to discuss during the meeting?
billl 4:03 PM
sure if you can get some done by tomorrow that would be great
4:03
how about tryiing with the single spikes as well as bursts
4:03
you had the burst stuff alrady done i think?
sergio 4:03 PM
yep
4:04
ok, I’m going to prepare that
billl 4:04 PM
great

** plan

*** abort savestate work (needs multi threading)
*** work on srdjan experiments

** srdjan experiments

*** running sim for 4s, 2 bursts, network 46 
[[./gif/network46_raster.png]]
[[./gif/traces_network46.png]]

*** 3 bursts, network 47
[[./gif/network47_raster.png]]
[[./gif/traces_network47.png]]

*** 4 bursts, network 48
[[./gif/network48_raster.png]]
[[./gif/traces_network48.png]]

*** no burst, network 49
[[./gif/network49_raster.png]]
[[./gif/traces_network49.png]]


** v19
*** 1 stim network 50 
[[./gif/traces_network50.png]]
[[./gif/network50_raster.png]]

*** 2 stim network 51
[[./gif/traces_network51.png]]
[[./gif/network51_raster.png]]

*** 3 stim network 52
[[./gif/traces_network52.png]]
[[./gif/network52_raster.png]]

*** 4 stim network 53
[[./gif/traces_network53.png]]
[[./gif/network53_raster.png]]

* 01-09-18
goal: meeting

** meeting
*** explore number of stim 
*** in the future explore internal connectivity
*** try weaker stim
*** decrease amplitude gfluct 
*** plot netstim on raster
*** plot dend volt
*** improve storage (check with bill)
*** why a second stim induce a longer response?

** v20

** noise amplitude factor of 1.0, no stim, network 54
[[./gif/network54_raster.png]]
[[./gif/traces_network54.png]]


** netstim on raster

*** adding include from netparams
after: 
if cfg.addNetStim_eee7ps: 

cfg.analysis['plotRaster']['include'].append(nslabel)

**** error
Traceback (most recent call last):
  File "init.py", line 102, in <module>
    sim.analysis.plotData()         			# plot spike raster etc
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 43, in plotData
    out = func(**kwargs)  # call function with user arguments
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 733, in plotRaster
    label = popLabelRates[ipop] if popRates else popLabel

*** tried 'allNetStims' method 
cfg.analysis['plotRaster']['include'].append('allNetsStims')

**** doesn't rise error, but not plotting of the netstim

*** tried adding list with pops and 'allNetstims'
**** error
Plotting raster...
Traceback (most recent call last):
  File "init.py", line 102, in <module>
    sim.analysis.plotData()         			# plot spike raster etc
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 43, in plotData
    out = func(**kwargs)  # call function with user arguments
  File "/usr/site/nrniv/local/python/netpyne/netpyne/analysis.py", line 733, in plotRaster
    label = popLabelRates[ipop] if popRates else popLabel
IndexError: list index out of range

* 01-10-18

goal: work plotting netsims, record less number of cells with soma and bdend 

** raster plotting

*** trying only 'allNetStims' on plotRaster

Plotting raster...
No spikes available to plot raster

*** trying a burst, same result 

Plotting raster...
No spikes available to plot raster

*** try create netstim as a pop
netParams.popParams[nslabel] = {'cellmodel': 'NetStim', 'start': ns['start'], 'interval': ns['interval'], 'noise': ns['noise'],'numCells':1, 'number': ns['number']}

**** added to netPArams
cfg.analysis['plotRaster']['include'].append(nslabel)

**** stim still working
**** now plotting netstim
**** problem no spiking from the netstim
**** solved spiking using vectim in spktimes

* 01-11-18

Goal:  do outline figures for paper

** working on gdocs
https://docs.google.com/document/d/1L_mP4L005WBHXO61tkIGC_ftfgQV3vusRyxrhmQ8X34/edit?usp=sharing

** to improve analysis, check joe's code
/u/graham/projects/eee/sim/batches/batch_20171207/dev.py

** paper outline
% Network architecture
%% Distribution of cells along cell layer
%% Network connectivity (2D-3D plot)
%% Matrix of network connectivity (strength matrix)
% table with cell conductances
%% eee7ps
%% FS
% table with connectivity rules 
% Small network and dendritic plateaus
%% induction of plateaus in a small network
%% Synaptic mechanisms of dendritic plateaus
% Modulation of dendritic plateaus in a small network
%% number of cells activated
%% synaptic weight 
% modulation of dendritic plateaus by synaptic noise
%% synaptic noise amplitude
%% synaptic noise frequency
% Large network dendritic plateaus and synchronization of ensembles
%% synaptic noise in synchronization
%% long range inputs
%% network ensemble synchronization across subsets
% large network with different input patterns
%% multiple bursts
%% single stim

* 01-12-18

goal: finish setting stim

** check insertion of connection
*** accesing spine head via sim.net.allCells
sim.net.allCells[200].secs.head_70
{mechs: {pas: {e: -70.0, g: 5.882352941176471e-05}}, hSec: None, geom: {nseg: 1, diam: 1.0, L: 1.0, cm: 1.0, Ra: 105.0}, topol: {childX: 0.0, parentSec: 'neck_70', parentX: 1.0}, vinit: -80.0}

*** inserting netstim via stimsource stimtarget
sim.net.allCells[201].secs.head_60
{mechs: {pas: {e: -70.0, g: 5.882352941176471e-05}}, synMechs: [{Cdur: 1.0, loc: 0.5, hSyn: None, label: 'NMDA', Beta: 0.0015, Alpha: 4.0, Cmax: 1.0, mod: 'NMDA'}, {loc: 0.5, hSyn: None, label: 'AMPA', mod: 'AMPA'}], hSec: None, geom: {nseg: 1, diam: 1.0, L: 1.0, cm: 1.0, Ra: 105.0}, topol: {childX: 0.0, parentSec: 'neck_60', parentX: 1.0}, vinit: -80.0}

*** inserting vectim as pop and then stimtarget
sim.net.allCells[201].secs.head_60
{mechs: {pas: {e: -70.0, g: 5.882352941176471e-05}}, hSec: None, geom: {nseg: 1, diam: 1.0, L: 1.0, cm: 1.0, Ra: 105.0}, topol: {childX: 0.0, parentSec: 'neck_60', parentX: 1.0}, vinit: -80.0}

*** error while setting connParams:
if 'L' in self.secs[secList[0]]['geom']:
IndexError: list index out of range

*** using normal stimsource-stimtarget to generate stim, and netstim as pop for plotting
{mechs: {pas: {e: -70.0, g: 5.882352941176471e-05}}, synMechs: [{Cdur: 1.0, loc: 0.5, hSyn: None, label: 'NMDA', Beta: 0.0015, Alpha: 4.0, Cmax: 1.0, mod: 'NMDA'}, {loc: 0.5, hSyn: None, label: 'AMPA', mod: 'AMPA'}], hSec: None, geom: {nseg: 1, diam: 1.0, L: 1.0, cm: 1.0, Ra: 105.0}, topol: {childX: 0.0, parentSec: 'neck_60', parentX: 1.0}, vinit: -80.0}

* 01-15-17

goal: set netstim 

*** trying again to set connParams:
netParams.connParams[ruleLabel] = {
                  'preConds': {'pop': nslabel},
                  'postConds': {'pop': postPop},
                  'synMech': ESynMech,
                  'weight': cfg.glutAmp, #cfg.weightLongInh,
                  'synMechWeightFactor': cfg.ratiobdend,
                  'delay': 5, #ns['delay'],#
                  'synsPerConn': numActiveSpines,  
                  'connList': connList3,
                  'loc': ns['loc'], #cur_loc,#0.99, 
                  'sec': 'soma'}# activeSpineHeads}#ns['sec']} #activeSpineHeads}
**** delay has to be larger than 0  

*** activeSpineHeads contains list of secs to do stim

**** list error
Traceback (most recent call last):
  File "init.py", line 80, in <module>
    sim.net.connectCells()            			# create connections between cells based on params
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 544, in connectCells
    connFunc(preCellsTags, postCellsTags, connParam)  # call specific conn function
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 940, in fromListConn
    self._addCellConn(connParam, preCellGid, postCellGid) # add connection
  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 1000, in _addCellConn
    postCell.addConn(params=params)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 720, in addConn
    synMechs, synMechSecs, synMechLocs = self._setConnSynMechs(params, secLabels)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 1188, in _setConnSynMechs
    synMechs = [self.addSynMech(synLabel=params['synMech'], secLabel=synMechSecs[i], loc=synMechLocs[i]) for i in range(synsPerConn)] 
IndexError: list index out of range

*** added syn mech loop
for i in range(len(ns['synMech'])):          
          if ns['synMech'][i] == 'AMPA':
                    syn_weight = cfg.glutAmp*cfg.ratiobdend[0]
          elif ns['synMech'][i] == 'NMDA':
                    syn_weight = cfg.glutAmp*cfg.ratiobdend[1] 

*** error if sec is a list of sections
'sec': ['head_64','head_65']
try it with different synsPerConn but still error

*** looping over activeSpineHeads solve the problem

if cfg.addNetStim_eee7ps:              
    for nslabel in [k for k in dir(cfg) if k.startswith('NetStim')]:
      ns = getattr(cfg, nslabel, None)
      for p in range(len(activeSpineHeads)):  
        for i in range(len(ns['synMech'])):          
          if ns['synMech'][i] == 'AMPA':
                    syn_weight = cfg.glutAmp*cfg.ratiobdend[0]
          elif ns['synMech'][i] == 'NMDA':
                    syn_weight = cfg.glutAmp*cfg.ratiobdend[1] 
          for postPop in plateau:
              ruleLabel = nslabel+'->'+postPop
              netParams.connParams[ruleLabel] = {
                  'preConds': {'pop': nslabel},
                  'postConds': {'pop': postPop},
                  'synMech': ns['synMech'][i],
                  'weight': syn_weight,
                  'delay': 1, #ns['delay'],#
                  #'synsPerConn': 1,#numActiveSpines,  
                  'connList': connList3,
                  'loc': ns['loc'], 
                  'sec': activeSpineHeads[p]} 
*** plots
[[./gif/traces_network55.png]]
[[./gif/network55_raster.png]]

** recording less cells
*** tried only gid in list
['205', '245', '285', '325', '365', '405', '445', '485', '525', '565', '605', '645', '685', '725', '765', '805', '845', '885', '925', '965']

**** error
Traceback (most recent call last):
  File "init.py", line 88, in <module>
    sim.setupRecording()              			# setup variables to record for each cell (spikes, V traces, etc)
  File "/usr/site/nrniv/local/python/netpyne/netpyne/simFuncs.py", line 807, in setupRecording
    cellsRecord = getCellsList(sim.cfg.recordCells)+cellsPlot
  File "/usr/site/nrniv/local/python/netpyne/netpyne/simFuncs.py", line 859, in getCellsList
    cellGids.extend(list(sim.net.pops[condition].cellGids))
  File "/usr/site/nrniv/local/python/netpyne/netpyne/specs.py", line 148, in __getitem__
    return super(ODict, self).__getitem__(k)
KeyError: '205'

*** check m1 model for example and working
cfg.recordCells = [(pop,5) for pop in plateau]+[(pop,45) for pop in plateau]

** plotting v_soma and Bdend1
working over sync.py
*** load data
def volt():	
	load_data()
	
	global  time, v_soma, v_dend

	for f,p in enumerate(data_files):
		time = d[p]['simData']['t']
		v_soma = d[p]['simData']['v_soma']
		v_dend = d[p]['simData']['v_Bdend1']
	return time, v_soma, v_dend
		
*** plotting function
def plotSync(x=None, y=None, ax= None, label=None, color= 'black'):
	plot_params()
	plt = ax.plot(x, y, color = color, linestyle = 'solid')
	ax.set_ylim(-100,30)
	ax.text(.15,.8,label,horizontalalignment='center',transform=ax.transAxes)

*** subplotting function
def volt_plot(x=None, title=None, savefig=None):

	volt()

	print "Plotting voltage traces..."

	cellgid = []
	for  i in range(10): cellgid.append('cell_'+str((i*80)+205))

	fig,((ax1,ax2),(ax3,ax4),(ax5,ax6),(ax7,ax8),(ax9,ax10)) = plt.subplots(5,2, sharey = True, sharex = True, figsize = (8,9))


	plotSync(time, v_soma[cellgid[0]], ax1, net_labels[0], 'black') 
	plotSync(time, v_dend[cellgid[0]], ax1, net_labels[0], 'red') 

	plotSync(time, v_soma[cellgid[1]], ax2, net_labels[1], 'black') 
	plotSync(time, v_dend[cellgid[1]], ax2, net_labels[1], 'red') 

	plotSync(time, v_soma[cellgid[2]], ax3, net_labels[2], 'black') 
	plotSync(time, v_dend[cellgid[2]], ax3, net_labels[2], 'red') 

	plotSync(time, v_soma[cellgid[3]], ax4, net_labels[3], 'black') 
	plotSync(time, v_dend[cellgid[3]], ax4, net_labels[3], 'red') 

	plotSync(time, v_soma[cellgid[4]], ax5, net_labels[4], 'black') 
	plotSync(time, v_dend[cellgid[4]], ax5, net_labels[4], 'red') 

	plotSync(time, v_soma[cellgid[5]], ax6, net_labels[5], 'black') 
	plotSync(time, v_dend[cellgid[5]], ax6, net_labels[5], 'red') 

	plotSync(time, v_soma[cellgid[6]], ax7, net_labels[6], 'black') 
	plotSync(time, v_dend[cellgid[6]], ax7, net_labels[6], 'red') 

	plotSync(time, v_soma[cellgid[7]], ax8, net_labels[7], 'black') 
	plotSync(time, v_dend[cellgid[7]], ax8, net_labels[7], 'red') 

	plotSync(time, v_soma[cellgid[8]], ax9, net_labels[8], 'black') 
	plotSync(time, v_dend[cellgid[8]], ax9, net_labels[8], 'red') 

	plotSync(time, v_soma[cellgid[9]], ax10, net_labels[9], 'black') 
	plotSync(time, v_dend[cellgid[9]], ax10, net_labels[9], 'red') 


	ax5.set_ylabel('Representative traces (mV)', fontsize = 16)
	ax9.set_xlabel('Time (ms)', fontsize = 16)
	ax10.set_xlabel('Time (ms)', fontsize = 16)

	fig.suptitle(title, fontsize = 16) 
	black_line = mlines.Line2D([], [], color='black', label='Soma')
	red_line = mlines.Line2D([], [], color='red', label='Basal Dendrite')
	fig.legend(handles=[black_line,red_line], labels=['Soma', 'Basal Dendrite'], loc='upper right')

	fig.subplots_adjust(hspace=0.1, wspace=0.05)
	plt.savefig(str(out_path)+str(savefig))
	plt.show()

*** plot
[[./gif/traces_network55.png]]

*** netstim was spiking every 5 ms and not stopping
*** solution changed to vecstim and control with spktimes

*** checked and only inserting AMPA
synMechs: [{loc: 0.99999, hSyn: None, label: 'AMPA', mod: 'AMPA'}]

*** inserting AMPA and NMDA
'synMech': ESynMech,                  
'weight': cfg.glutAmp,
'synMechWeightFactor':  cfg.ratiobdend,

synMechs: [{loc: 0.99999, hSyn: None, label: 'AMPA', mod: 'AMPA'}, {Cdur: 1.0, loc: 0.99999, hSyn: None, label: 'NMDA', Beta: 0.0015, Alpha: 4.0, Cmax: 1.0, mod: 'NMDA'}]

*** checking insertion in active heads
['head_64', 'head_72', 'head_70', 'head_71', 'head_54', 'head_55', 'head_56', 'head_57', 'head_53', 'head_58', 'head_59', 'head_61', 'head_60', 'head_63', 'head_62', 'head_65', 'head_67', 'head_66', 'head_69', 'head_68']

*** not inserted while looping

*** inserted as a list
'sec': ['head_64', 'head_72', 'head_70', 'head_71', 'head_54', 'head_55', 'head_56', 'head_57', 'head_53', 'head_58', 'head_59', 'head_61', 'head_60', 'head_63', 'head_62', 'head_65', 'head_67', 'head_66', 'head_69', 'head_68']}

*** fix syn per conn
'synsPerConn': 20,#numActiveSpines,  

*** check insertion
sim.net.allCells[201].secs.head_70
{mechs: {pas: {e: -70.0, g: 5.882352941176471e-05}}, synMechs: [{loc: 0.5, hSyn: None, label: 'AMPA', mod: 'AMPA'}, {Cdur: 1.0, loc: 0.5, hSyn: None, label: 'NMDA', Beta: 0.0015, Alpha: 4.0, Cmax: 1.0, mod: 'NMDA'}], hSec: None, geom: {nseg: 1, diam: 1.0, L: 1.0, cm: 1.0, Ra: 105.0}, topol: {childX: 0.0, parentSec: 'neck_70', parentX: 1.0}, vinit: -80.0}

** plots
[[./gif/network56_raster.png]]
[[./gif/network57_raster.png]]
[[./gif/network58_raster.png]]
[[./gif/traces_network56.png]]
[[./gif/traces_network57.png]]
[[./gif/traces_network58.png]]
[[./gif/traces_network59.png]]
[[./gif/network59_raster.png]]

* 01-16-18

goal: meeting

** gdoc presentation

https://docs.google.com/document/d/1j5mZTs41uVDPp5GXjvIKm-gdqJEYHbYZFNVR-ozcLBg/edit?usp=sharing

** meeting
*** check cell variavility for future
*** srdjan: understand what is need it to have activityt within plateau
*** update joe's cell
*** srdjan: substract network activity to compare raters
*** start sim at 1500 ms
*** srdjan: network has low relaxation
*** bill: use only one stim
*** why 2nd plateau is longer
*** srdjan: plot epsp or synaptic input number
*** too many cells receiving plateau, decrease number of plateaued cells
*** srdjan: match stim to activity
*** srdjan: plot duration of plateau
*** bill: one stimulus to basal dend, then second one to apical dend to follow activity
*** sim with random noise seed per cell

** plan
upgrade to joe's cell
start stim at 1500
uses one stim or less weight
stim to less cell
one seed per cell

*** upgraded joe's cell

* 01-17-18
goal: implement network changes

** v21
** network changes
*** start stim at 1500
*** 1 stim
*** half cells with plateau stim
*** 1 seed per subset
*** network 60
*** plots
[[./gif/traces_network60_stim07.png]]
[[./gif/network60_raster_stim07.png]]

**** induces plateau aprox 100 ms duration
**** reduce stim amp to 0.5

*** stim amp 0.5
[[./gif/traces_network60_05.png]]
[[./gif/network60_raster_sim05.png]]

**** doesn't induce plateau
**** try higher number of stim

*** stim amp 0.5, number 5
[[./gif/traces_network60_stim05_number5.png]]
[[./gif/network60_raster_stim05_number5.png]]

**** plateau but duration is short 

*** stim amp 0.5, 2 bursts
[[./gif/traces_network60_stim05_2bursts.png]]
[[./gif/network60_raster_stim05_2bursts.png]]

*** 1 seed per cell. 1 busrt, stim amp 0.5 number 5, network 61
[[./gif/traces_network61_stim05_1seed_1burst.png]]
[[./gif/network61_raster_stim05_1seed_1burst.png]]
**** no clear plateau

* 01-18-18

goal: finish changes from meeting

** network changes

*** 1 seed per cell, 2 bursts, stim amp 0.5, number 5
[[./gif/traces_network61_stim05_1seed_2bursts.png]]
[[./gif/network61_raster_stim05_1seed_2bursts.png]]

**** second bursts induces plateau

*** 1 seed per cell, 1 stim, stim amp 0.5
[[./gif/network62_raster.png]]
[[./gif/traces_network62.png]]

*** 1 seed per cell, 2 stim 750 ms interval, stim amp 0.5
[[./gif/network63_raster.png]]
[[./gif/traces_network63.png]]

*** 1 seed per subset, 2 stim 750 ms interval, stim amp 0.5
[[./gif/network64_raster.png]]
[[./gif/traces_network64.png]]

* 01-19-18

goal: present data to group and make changes according to suggestions

** presented data to slack

https://docs.google.com/presentation/d/1l4wSYVxpNmLCjIEenU46zmRB7ZR8eGewHltO8xNOh0U/edit?usp=sharing

** no stimulus 
*** 1 seed per cell
[[./gif/traces_network65.png]]
it did not plot raster

** analysis of sync

*** Changed input data selection from list
def load_data(n=[0]):
	
	list_data()
	for i in range(len(n)):
		print 'Data included: '+str(data_files[n[i]])
	print 'loading data ...'
	global d
	
	d={}
	for i,v in enumerate(data_files):
		if i in n:
			with open(path+data_files[i]+'.json') as json_data:
		    		d[v] = json.load(json_data) 
		else:
			pass    		    		 
	print "Finished loading data"
	return d, data_files
**** n contains list to select data
*** added matrix with included gids
no_empty_array = np.zeros(((len(net_labels)*80),(len(net_labels)*80)))
gids_included =[]
spkmat2.append(pyspike.SpikeTrain(list_spkt, timeRange[t]))
gids_included.append(gid)
gids_included[:]= [x - 200 for x in gids_included]

*** assigned a value of 1 to gids included
for i in range(len(spkt_train[str(f)+str(t)])): 
	if i in gids_included:
		for k,v in enumerate(gids_included): 
			no_empty_array[i][v] = 1.0
*** stored in a dict
no_empty_dict_array[str(f)+str(t)] = no_empty_array

*** multiplied sync matryx by matrix with gids included 
elif (mat in analysis and  mat =='SPIKE-Sync'):
	print str(mat)+", number of trains: "+ str(len(spkt_train[str(f)+str(t)]))
	spike_sync[str(f)+str(t)] = pyspike.spike_sync_matrix(spkt_train[str(f)+str(t)])							
	getmat[str(f)+str(t)+str(l)] = spike_sync[str(f)+str(t)] * no_empty_dict_array[str(f)+str(t)]

*** plots with train with 2 or more spikes				
[[./gif/network60_sync.png]]
[[./gif/network64_sync.png]]

* 01-22-18
goal: get sync from previous sims, and get more stats

** network 66, 1 seed per subset, 1 burst
[[./gif/network66_raster.png]]

** network 67, 1 seed per cell, 1 burst
[[./gif/network67_raster.png]]

** network 68, 1 seed per subset, 1 stim
[[./gif/network68_raster.png]]

** analyzing rate 
*** function on sync.py to analyze overall rate per gid and grouped by half-subset 
def rate(network =[0]):
	load_data(network)
	
	spkts = {}
	spkinds = {}
	spktsRange = {}
	spkt_train = {}
	rate_dict = {}
	

	for f,p in enumerate(data_files):
		if f in network:
			spkts[f] = d[p]['simData']['spkt'] #list
			spkinds[f] = d[p]['simData']['spkid'] #list

			for t,y in enumerate(timeRange):
				rate_matrix = [[] for i in range(len(net_labels)*2)]
				spktsRange = [spkt for spkt in spkts[f] if timeRange[t][0] <= spkt <= timeRange[t][1]]
				
				for ii, subset in enumerate(gids):		
							
					for gid in set(subset):								
						list_spkt=[spkt for spkind,spkt in zip(spkinds[f],spkts[f]) if (spkind==gid and spkt in spktsRange)]
						
						gid_rate = len(list_spkt)/((timeRange[t][1]-timeRange[t][0])/1000.0)
						rate_matrix[ii].append(gid_rate)
				
				rate_dict[str(f)+str(t)] = rate_matrix 
*** added instantaneous rate analysis and grouped by subset halves
def rate(network =[7], type_rate = ['overall','inst'], save =True):
	load_data(network)
	
	spkts = {}
	spkinds = {}
	spktsRange = {}
	spkt_train = {}	
	rate_dict = {'overall': {}, 'inst':{}}

	for f,p in enumerate(data_files):
		if f in network:
			spkts[f] = d[p]['simData']['spkt'] #list
			spkinds[f] = d[p]['simData']['spkid'] #list

			for t,y in enumerate(timeRange):
				rate_mat_all = [[] for i in range(len(net_labels)*2)]
				rate_mat_inst = [[] for i in range(len(net_labels)*2)]

				spktsRange = [spkt for spkt in spkts[f] if timeRange[t][0] <= spkt <= timeRange[t][1]]
				for w in type_rate: 
					for ii, subset in enumerate(gids):									
						for gid in set(subset):	
													
							list_spkt=[spkt for spkind,spkt in zip(spkinds[f],spkts[f]) if (spkind==gid and spkt in spktsRange)]
							if w =='overall':# in type_rate:
								if len(list_spkt)<1:
									pass 
								else:
									gid_rate = len(list_spkt)/((timeRange[t][1]-timeRange[t][0])/1000.0)
									rate_mat_all[ii].append(gid_rate)
							elif w =='inst':# in type_rate:	
								if len(list_spkt)<=1:
									pass 
								else:
									for x in range(len(list_spkt)):																 
										if not x==(len(list_spkt)-1):
											spkt_inst_rate = 1000.0/(list_spkt[x+1]-list_spkt[x]) 
											rate_mat_inst[ii].append(spkt_inst_rate)
				
				
				rate_dict['overall'][str(p)+'_'+str(t)] = rate_mat_all
				rate_dict['inst'][str(p)+'_'+str(t)] = rate_mat_inst
	print rate_dict
	if save == True:		
		with open(str(path)+'rate.pkl', 'wb') as output:
			pickle.dump(rate_dict, output)		

	print 'finished getting rate analysis'
	return rate_dict

*** modified function for overall rate to include zero as a data point 

*** included function to plot rate as boxplot, modified from bp_plateau.py

def boxplot_plot(data, ax=None, xlabel=None, xlim=[-2,30]):
	
	plot_params()
	colorList = plt.cm.Set3(np.linspace(0, 1, 20))
	meanpointprops = dict(marker=(5,1,0), markeredgecolor='black', markerfacecolor='white')
	labels= ['1_1','1_2','2_1','2_2','3_1','3_2','4_1','4_2','5_1','5_2','6_1','6_2','7_1','7_2','8_1','8_2','9_1','9_2','10_1','10_2']

	bp = ax.boxplot(data, labels=labels, meanprops=meanpointprops, widths=0.6, whis=1.5,showmeans=True, patch_artist=True, vert=False)#, labels=labels[::-1], meanprops=meanpointprops, whis=1.5, widths=0.6, vert=False, showmeans=True, patch_artist=True)
	ax.set_xlabel(xlabel, fontsize = 16)	
	ax.grid(axis='x', color="0.9", linestyle='-', linewidth=1)
	ax.invert_yaxis()
	ax.set_xlim(xlim)
	
	for i in range(0, len(bp['boxes'])):
	            bp['boxes'][i].set_facecolor(colorList[i])
	            bp['boxes'][i].set_linewidth(2)
	            bp['whiskers'][i*2].set_linewidth(2)
	            bp['whiskers'][i*2 +1].set_linewidth(2)
	            bp['medians'][i].set_linewidth(3)
	            bp['medians'][i].set_color('k')
	            for c in bp['caps']:
	                    c.set_color('k')
	                    c.set_linewidth(2)
	return bp

def boxplot_rate(filename=None, rate_type='inst' , network=None, savefig=None):

	get_pickle(filename)
	list_data()

	fig, (ax1,ax2,ax3,ax4) = plt.subplots(1,4, sharey =True, figsize = (12,6))

	boxplot_plot(getmat[rate_type][str(data_files[network])+'_'+str(0)], ax1, str(timeRange[0][0])+'-'+str(timeRange[0][1])+' ms')# 
	boxplot_plot(getmat[rate_type][str(data_files[network])+'_'+str(1)], ax2, str(timeRange[1][0])+'-'+str(timeRange[1][1])+' ms')# 
	boxplot_plot(getmat[rate_type][str(data_files[network])+'_'+str(2)], ax3, str(timeRange[2][0])+'-'+str(timeRange[2][1])+' ms')# 
	boxplot_plot(getmat[rate_type][str(data_files[network])+'_'+str(3)], ax4, str(timeRange[3][0])+'-'+str(timeRange[3][1])+' ms')# 

	#ax2.set_title(str(data_files[network]+", rate (Hz)"), fontsize=12)
	fig.subplots_adjust(wspace=0.1)
	plt.suptitle(str(data_files[network]+", rate (Hz)"), fontsize=16)
	plt.savefig(str(out_path)+str(data_files[network])+'_bprate.png')
	plt.show()

* 01-23-30
goal: meeting

** file of presentation:
https://docs.google.com/presentation/d/1fS45u9nEa1Vnjr918zqqRcY8sjb_juqJF3yFqEZlF5Q/edit?usp=sharing

** meeting notes
*** increase coherence, stimulate the other dendrite, 3 irregular spikes during plateau
*** for synchrony measurement, remove first spike spike after plateau
*** try a different plot for sync
*** why 2nd stim produces longer response, sim with different interval

** plan
*** second group of stim in second dend
*** try diferent intervals

** v22
** second group of stims, network 69
*** added stim to Adend1 at 0.5, 5stims :
cfg.NetStim2 = {'pop': 'PT5_0', 'loc': 0.5, 'sec': 'Adend1', 'synMech': ['NMDA','AMPA'], 'start': 100, 'interval': 50, 'noise': 1.0, 'number': 5, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}
 
*** plots
[[./gif/traces_network69_adend1_5stim.png]]
[[./gif/network69_raster_adend1_5stim.png]]
**** longer plateaus

*** adend1 1 stim
[[./gif/traces_network69_adend1_1stim.png]]
[[./gif/network69_raster_adend1_1stim.png]]
**** still lon plateaus

*** only bdend stim
[[./gif/traces_network69_bdend1.png]]
[[./gif/network69_raster_bdend1.png]]
**** no plateau

* 01-24-18

goal: finish suggestion from meeting
** setting 2nd stim to network
*** error, I was adding sting to same location 
*** added condition to make a new netstim different than spine heads head
if nslabel == 'NetStim_Adend1':
          for postPop in plateau:             
              ruleLabel = nslabel+'->'+postPop
              netParams.connParams[ruleLabel] = {
                  'preConds': {'pop': nslabel},
                  'postConds': {'pop': postPop},
                  'synMech': ESynMech,                   
                  'weight': cfg.glutAmp,
                  'synMechWeightFactor':  cfg.ratioapical, 
                  'delay': 1, 
                  'connList': connList3,
                  'loc': ns['loc'], 
                  'sec': ns['sec']}

*** it did not work, still using all connectivity
*** new rule for stim 
cfg.Stim_Adend1 = {'pop': 'PT5_0', 'loc': 0.5, 'sec': 'Adend1', 'synMech': ['NMDA','AMPA'], 'start': 100, 'interval': 50, 'noise': 1.0, 'number': 1, 'weight': [cfg.glutAmp, cfg.glutAmp], 'delay': cfg.glutDelay}

then in netParams:
under adding netstims:

for nslabel in [k for k in dir(cfg) if k.startswith('Stim')]:
      ns = getattr(cfg, nslabel, None) 

      spkTimes = list(np.linspace(ns['start'],ns['start']+(ns['interval']*(ns['number']-1)), num= ns['number']))
      netParams.popParams[nslabel] = {'cellModel': 'VecStim', 
                    'numCells': 75, 
                    'noise': ns['noise'], 
                    'yRange': layer['long'],
                    'spkTimes': spkTimes,
                    } 

and under long connectivity:
for nslabel in [k for k in dir(cfg) if k.startswith('Stim')]:
        ns = getattr(cfg, nslabel, None) 
        for postPop in plateau:             
              ruleLabel = nslabel+'->'+postPop
              netParams.connParams[ruleLabel] = {
                  'preConds': {'pop': nslabel},
                  'postConds': {'pop': postPop},
                  'synMech': ESynMech,                   
                  'weight': cfg.glutAmp,
                  'synMechWeightFactor':  cfg.ratioapical, 
                  'delay': 1, 
                  #'synsPerConn': 20,#numActiveSpines,  
                  'connList': connList3,
                  'loc': ns['loc'], 
                  'sec': ns['sec']}

*** check insertion:
>>> sim.net.allCells[201].secs.Adend1.synMechs
[{loc: 0.5, hSyn: None, label: 'AMPA', mod: 'AMPA'}, {Cdur: 1.0, loc: 0.5, hSyn: None, label: 'NMDA', Beta: 0.0015, Alpha: 4.0, Cmax: 1.0, mod: 'NMDA'}]

*** volt plot
[[./gif/traces_network69_adend1_stim07.png]]

*** increse number of synases to 20
[[./gif/traces_network69_adend1_stim07_20.png]]

**** not good response

*** stim to soma 20 stim
[[./gif/traces_network69_soma_stim07_20.png]]

*** stim to bdend2 1 stim
[[./gif/traces_network69_bdend2_stim07.png]]

*** stim to soma 1 stim
[[./gif/traces_network69_soma_stim07.png]]

*** stim to bdend2 20 stim
[[./gif/traces_network69_bdend_stim07_20.png]]

*** combined bdend1 20 inputs with adend1 20 inputs
[[./gif/traces_network69_bdend1_adend1.png]]
[[./gif/network69_raster_bdend1_adend1.png]]

*** 20 inputs in adend1
[[./gif/network69_raster_adend1_.png]]
[[./gif/traces_network69_adend1.png]]

*** 20 inputs in bdend1
[[./gif/network69_raster_bdend1_.png]]
[[./gif/traces_network69_bdend1_.png]]

*** second stim to adend1 induce longer plateaus

* 01-25-18

goal: finished setting stim

** setting stim params
*** 20 inputs to bdend1 and 1 input to adend1
[[./gif/traces_network69_bdend1_adend1_stim07_1.png]]
[[./gif/network69_raster_bdend1_adend1_stim07_1.png]]
**** increased plateau duration and amp

*** time interval betweeen stims 50 ms 
[[./gif/traces_network69_50ms.png]]
[[./gif/network69_raster_50ms.png]]
**** increased plateau dur and amp

*** time interval 100 ms
[[./gif/traces_network69_100ms.png]]
[[./gif/network69_raster_100ms.png]]
****  less interaction

*** time interval 200 ms
[[./gif/traces_network69_200ms.png]]
[[./gif/network69_raster_200ms.png]]
**** still interaction even early

*** back to the plan of 3 irregular spikes

spkTimes1 = random.sample(xrange(100, 150), 1)

generates one spike between 100 and 150 ms

[[./gif/network69_raster_stimraster1.png]]

then 3 spikes: 

[[./gif/network69_raster_stimraster3.png]]

then modified connectivity so every netstim is connected to 1 cell per subset

numCells: 80
connList: connList

*** 3 random stim to adend1, 1 to bdend1 
[[./gif/traces_network69_3random.png]]
[[./gif/network69_raster_3random.png]]

*** 3 random stim to adend1, burst to bdend1
[[./gif/traces_network69_3random_1burst.png]]
[[./gif/network69_raster_3random_1burst.png]]

* 01-26-18

goal: finish second stim to increase coherence

** setting stim in 4s
*** stim to adend1 3 stim, burst to bdend1.
[[./gif/traces_network69.png]]
[[./gif/network69_raster.png]]
**** not substantial changes

*** stim to adend 3 stim, 20 inputs, burst to bdend1
[[./gif/traces_network70.png]]
[[./gif/network70_raster.png]]
**** increased firing during plateau

*** stim to apical dend only
[[./gif/traces_network71.png]]
[[./gif/network71_raster.png]]
**** increase firing but no plateau

***  presented figs in slack

*** discussion on slack
so what are you showing sergio -- what are we trying to test?
[4:51 PM]
joe -- if you want to make all these improvements to netpyne that's great but we have to make sure with salvador that these get pushed back into netpyne eventually

sergio [4:53 PM]
the idea is to have a second stim to a different compartment, to drive the spiking during the plateau

billl [4:54 PM]
the 2nd stim is in blue?
[4:54 PM]
so the 1st stim i think would be a single spike to trigger the plat -- but you have multiple spikes
[4:54 PM]
then the stim in the other dend would be 3 or 4 coordinated spikes but not regular

sergio [4:57 PM]
ok I can increase the weight of the stim for the bdend1 and induce the plateau with one stim, then for the other dend, do you prfer the same netstim driving all the neurons? or a different seed for each stim?


billl [4:58 PM]
yeah would be same driving all to see if can get coordinated activations which is our prediction

sergio [4:58 PM]
ok
[4:58 PM]
I’m going to run those sims

billl [4:58 PM]
thx

*** plan 
increase glutamp to 0.7
single stim to bdend1
3 stim (same for all cells) to adend1 (irregular)

* 01-29-18

goal set changes for stim params

** problem in the connectivity with virtual machine
message
Error: Virtual Session capacity: reached for user: sergioangulo

*** tried restarting my laptop and didn't work

*** check connectivity

*** try erasing old sessions
https://www.nomachine.com/AR12K00765

under dir /.nx

didn't work

*** look for pid
ps -u sergioangulo

didn't find nxagent

*** check neurosim wiki

https://docs.google.com/document/d/1cLxpEtRcaEvy-aLCAOKbEYOgvFVkJcYyf4_6ZiBwl8g/edit?usp=sharing

*** try restarting server
/usr/NX/bin/nxserver --restart 

but need administrative priviledges:

NX> 500 ERROR: Only a user with administrative privileges
NX> 500 ERROR: can use option: restart.

*** working with ssh
*** bill restarted the server, and now working 

** setting new connectivity 

*** 1 stim to basal dend, and 3 irregular to the apical dend
glut amp 0.7
number of input: 20 for each compartment
[[./gif/network72_raster.png]]
[[./gif/traces_network72.png]]
 

*** 1 stim to basal dend
glut amp 0.7
[[./gif/network73_raster.png]]
[[./gif/traces_network73.png]]

*** shared on slack

*** discussion on slack
any sync?
[4:34 PM]
need to reduce intrinsic strengths?
sergio [4:47 PM]
I can reduce the intrinsic strength, and working on the new sync graph
billl [4:50 PM]
k

*** plan reduce intrinsic streght

*** sim with 2 stim interval 750
[[./gif/network74_raster.png]]
[[./gif/traces_network74.png]]


*** sim  with 2 stim interval 1225
[[./gif/network75_raster.png]]
[[./gif/traces_network75.png]]

*** sim stim glutAmp 0.5
[[./gif/traces_network76.png]]
[[./gif/network76_raster.png]]


** setting batch

glutAmps = [4.0,5.0,6.0]

batch = {}
batch["label"] = "glutAmp"
batch["cfgFile"] = "cfg.py"
batch["netParamsFile"] = "netParams.py"
params = OrderedDict()
params["glutAmp"] = list(np.array(glutAmps)/10.0)
params["EEgain"] = [0.05, 0.1, 0.15, 0.2]
batch["params"] = params
batches[batch["label"]] = batch

*** running single sim EEgain = 0.1, glutAmp = 0.7
[[./gif/network77_raster.png]]
[[./gif/traces_network77.png]]

* 01-30-18

goal: meeting, sync figs, run batch

** decreased internal strength and stim amp

*** sim EEgain = 0.1, glutAmp = 0.5
[[./gif/traces_network78.png]]
[[./gif/network78_raster.png]]

** meeting
https://docs.google.com/presentation/d/1p3JLOm0BK2LYYUyDjbtXJ4gkiyckcKR4O_Aw3tGNfK0/edit?usp=sharing
*** reduce firing, only during plateau
*** decrease EE or increase IE
*** srdjan: paper idea, first non stop firing then only burst
  
** running batch glutAmp as previously set

** work on sync

*** added selection of empty trains to get_matrix() in subset group
if len(train)<min_spike_number:
	empty_gids.append(k)
else:
	gids_included.append(k)

for i in range(len(spkt_train[str(f)+str(t)])): 
	if i in gids_included:
		for k,v in enumerate(gids_included): 
			no_empty_array[i][v] = 1.0
no_empty_dict_array[str(f)+str(t)] = no_empty_array

*** created figs in coolwarm color set
*** plots
sync only stim to bdend
[[./gif/network73_sync.png]]

sync if stim to bdend and adend 
[[./gif/network72_sync.png]]

* 01-31-18

goal: check sync by subset, run batches in comet 

** check connectivity to comet 
*** wiki about comet
https://docs.google.com/document/d/1aVC1JJuxJ8xiGNmO8pjkABR8Xfeak5QOfnzZguCRBss/edit?usp=sharing

*** udated password on nsg
username: sangulo

*** connecting via ssh 
ssh -t -X sangulo@comet.sdsc.xsede.org

*** bashrc copied from salva
# .bashrc
# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi
# User specific aliases and functionsi
source /projects/ps-nsg/home/nsguser/.bashrc 
module load gsl
module load python
module load scipy
#export MODULEPATH=/share/apps/compute/modulefiles/mpi:$MODULEPATH
#module unload mvapich2_ib
#module unload openmpi_ib/1.8.4
#module load openmpi_ib/1.8.4npmi
export SITE=/home/lytton/site
export PATH=/home/salvaodrd/site/nrniv/local/bin:$SITE/bin:/home/lytton/arch/nrn/x86_64/bin:$PATH
export NEURON_INIT_MPI=0
export LIBS=-ldl
export N=$SITE/nrniv
export CPU=`uname -p`
export NSRC=$N/nrn$NSUF # current source
export IVB=$N/iv
export NB=$N/nrn$NSUF$CPU
export ND=/home/lytton/arch/nrn
#if (! $?LD_LIBRARY_PATH) setenv LD_LIBRARY_PATH ""
export MODL_INCLUDE=/home/salvadord/site/nrniv/local/mod
export HOC_LIBRARY_PATH=/home/salvadord/site/nrniv/local/hoc:/home/salvadord/site/nrniv/simctrl/hoc
export PYTHONPATH=/home/salvadord/site/nrniv/local/python:/home/salvadord/site/nrniv/local/python/netpyne:$PYTHONPATH
alias lsl='ls -lrtah'
alias upnp='cd ~/site/nrniv/local/python/netpyne/; git pull; cd ~/m1/sim'
alias sq='squeue -u $USER; squeue -u $USER | wc -l'
alias sqr='squeue -u $USER -t RUNNING; squeue -u $USER -t RUNNING | wc -l'
alias sqra='squeue -t RUNNING; squeue -t RUNNING | wc -l'
alias sqp='squeue -u $USER -t PENDING; squeue -u $USER -t PENDING | wc -l' 
alias sqpa='squeue -t PENDING --partition=compute -o "%.18i %.9P %.8j %.8u %.2t %.10M %.6D %R %p"; squeue -t PENDING --partition=compute | wc -l'
alias sdetail='scontrol show job'
alias tarc='tar -zcvf'

*** created dir sangulo/projects
*** created dir temp_project
/oasis/scratch/comet/sangulo/temp_project

*** clone of eee project under /projects/eee
hg clone ssh://no.neurosim.downstate.edu://u/sergioangulo/projects/eee
*** error
abort: couldn't parse location ssh://no.neurosim.downstate.edu://u/sergioangulo/projects/eee!

*** files on my machine not in comet
.ssh/config

.hgrc

*** created files but same error

*** discussion on slack
bill [2:21 PM]
doesn't it need 3 / before the u/ ??
sergio [2:22 PM]
just one `/`?
just tried one `/` before `u/` and didn’t work
billl [2:35 PM]
not one
3
three
3>1
sergio [2:35 PM]
ok
billl [2:35 PM]
try it from your machine first
so you know that you have command correctly
sergio [2:37 PM]
I tried to clone from my machine and work with 2 `//` before `u/`
billl [2:38 PM]
oh
your name?  perhaps differs between the machines?
sergio@
nope that's not your name sergioangulo@
sergio [2:43 PM]
like `hg clone ssh://sergioangulo@no.neurosim..`
?
billl [2:45 PM]
y
sergio [2:54 PM]
it worked!
`hg clone ssh://sergioangulo@no.neurosim.downstate.edu//u/sergioangulo/projects/eee`
and also modified the config file for ssh: `/home/sangulo/.ssh/config`
billl [2:55 PM]
on comet?
sergio [2:55 PM]
yep
billl [2:56 PM]
think can also give identity of `no` so can just do ssh://no// ...

*** changes in clone command
hg clone ssh://sergioangulo@no.neurosim.downstate.edu//u/sergioangulo/projects/eee

*** changes in ~/.ssh/config
Host ag
  HostName sergioangulo@ag.neurosim.downstate.edu
Host no
  ProxyCommand ssh -q sergioangulo@no nc -q0 %h 22 

*** error of 
remote: Bad owner or permissions on /home/sangulo/.ssh/config

*** also change permission of ~/.ssh/config
chmod 600 ~/.ssh/config

*** copying ssh keys
https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2
cat ~/.ssh/id_rsa.pub | ssh sangulo@comet.sdsc.xsede.org "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >>  ~/.ssh/authorized_keys"

*** creating a project
new dir:
~/jobs

take example from:
/u/samn/evoizhi/comet_batch.run 

change jobname:
#SBATCH -J batch_eee_glutAmp_EEgain
#SBATCH --mail-user=sergio.angulo@gmail.com

added:
cd '/home/sangulo/projects/eee/sim/layersim'

command:
ibrun --npernode=24 /home/lytton/arch/nrn/x86_64/bin/nrniv -python -mpi my_batches.py

name of job:
comet_batch_eee.run

*** submitting job
sbatch comet_batch_eee.run

*** checking status
[sangulo@comet-ln2 jobs]$ sq
             JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)
          14049798   compute batch_ee  sangulo PD       0:00      5 (Resources)

* 02-01-18

goals: check batches 

** batch on neurosim 
running time for 12 sims:
148344.032625 s

finished running batch but output has no activity

[[./gif/traces_glutAmp_2_3.png]]

also the voltage traces has no noise
there is response to stim but no spikes


** batch on comet
*** error 
ImportError: No module named batch_utils

** change batch method to salva's
*** added bacth.py to repo at layersim
added:
def EEbalance():
	params = specs.ODict()

	params["EEgain"] = [0.2]#[0.05, 0.1, 0.15, 0.2]
	params["glutAmp"] = [0.6]#[0.4,0.5,0.6]
	#params['IEgain'] = [0.4,0.5, 0.6, 0.7, 0.8]


	b = Batch(params=params, netParamsFile='netParams.py', cfgFile='cfg.py')

	grouped = []  # list of params that are grouped (vary together)
	for p in b.params:
		if p['label'] in grouped: p['group'] = True
	return b
*** running batch.py test on 'zn'

** trying test netpyne at comet from my dir
*** executing init.py from eee model
*** error 
Traceback (most recent call last):
  File "init.py", line 14, in <module>
    from netpyne import sim
ImportError: No module named netpyne

*** fixed netpyne install
*** clone repo neurosim at /home/sangulo/site
at home/sangulo/site/nrniv:
hg clone ssh://sergioangulo@no.neurosim.downstate.edu//usr/site/nrniv/simctrl
hg clone ssh://sergioangulo@no.neurosim.downstate.edu//usr/site/nrniv/local

at home/sangulo/site:
hg clone ssh://sergioangulo@no.neurosim.downstate.edu//usr/site/scripts
hg clone ssh://sergioangulo@no.neurosim.downstate.edu//usr/site/config
hg clone ssh://sergioangulo@no.neurosim.downstate.edu//usr/site/site-lisp

at /home/sangulo/site/nrniv/local/python
git clone https://github.com/Neurosim-lab/netpyne.git
cd netpyne
git checkout development
git branch

check PYTHONPATH in .bashrc
export PYTHONPATH=/home/sangulo/site/nrniv/local/python:/home/sangulo/site/nrniv/local/python/netpyne:$PYTHONPATH

check netpyne in ipython:
import netpyne
netpyne.__file__

*** mkmod working in eee/sim/mod
*** sent test job 
*** check netparams, found batch_utils error, fixed
ImportError: No module named batch_utils

Fixed by adding path to PYTHONPATH
/home/sangulo/projects/eee/sim

*** error density mechanisms
/home/sangulo/projects/eee/sim/cells/eee7ps.pyc in insert_conductances(self)
    251       sec.insert('na_ion')
    252       sec.insert('pas') # passive
--> 253       sec.insert('nax') # Na current
    254       sec.insert('kdr') # K delayed rectifier current
    255       sec.insert('kap') # K-A current

ValueError: argument not a density mechanism name.

*** discussion on slack
it is density mechanisms error message

is it because it is using NEURON 7.4?


billl [5:31 PM]
did you compile ?


sergio [5:31 PM]
with mkmod


billl [5:31 PM]
can you run from command line and do the inserts


sergio [5:32 PM]
ok

*** installed NEURON in local machine
followed directions from:
https://www.neuron.yale.edu/neuron/download/getdevel

solved problems:
**** nrnivmodl command not found
added line to .tcshrc:
setenv PATH /nrn/x86_64/bin:${PATH}

**** values.h not found
solution:
sudo ln -s /usr/include/i386/limits.h /usr/include/i386/values.h
sudo ln -s /usr/include/limits.h /usr/include/values.h

**** compiling normally

**** dyld: Library not loaded: libreadline.6.2.dylib
solution:
cd $HOME/anaconda/lib
sudo cp libreadline.6.2.dylib /usr/lib

**** error message 
ImportError: dlopen(/Users/sergioangulo/anaconda/lib/python2.7/lib-dynload/_io.so, 2): Symbol not found: __PyCodecInfo_GetIncrementalDecoder
  Referenced from: /Users/sergioangulo/anaconda/lib/python2.7/lib-dynload/_io.so
  Expected in: flat namespace
 in /Users/sergioangulo/anaconda/lib/python2.7/lib-dynload/_io.so
>>> sh: /usr/site/../arch/nrn/share/nrn/lib/cleanup: No such file or directory
sh: /usr/site/../arch/nrn/share/nrn/lib/cleanup: No such file or directory
sh: /usr/site/../arch/nrn/share/nrn/lib/cleanup: No such file or directory


* 02-02-18
goal: set batches

** test batch ran on neuronsim without problems
[[./gif/traces_batch_glutAmp_EEgain_0_0.png]]
[[./gif/batch_glutAmp_EEgain_0_0_raster.png]]

** set batch to run in neurosim
params["EEgain"] = [0.05, 0.1, 0.15, 0.2]
params["glutAmp"] = [0.4,0.5,0.6]

** testing file for comet (noise.py)
*** added 'nax' to single compartment
gbar_nax = 0.0345117294903
for sec in secl:
  sec.insert('hh')
  sec.insert('nax')
  sec.gnabar_hh = 0.0
  sec.gbar_nax = gbar_nax

*** error message
NEURON -- Release 7.4 (1341:2ccabed20677) 2015-05-31
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2015
See http://www.neuron.yale.edu/neuron/credits

Traceback (most recent call last):
  File "noise.py", line 14, in <module>
    sec.insert('nax')
ValueError: argument not a density mechanism name.

*** compiled again
*** run noise.py again and worked
*** tested netParams.py and worked

** setting batch in comet
** discussion on slack
I compiled again in comet and it is working, now I’m going to set the batches
billl [11:06 AM]
great
so what are the batches -- want to lay them out to agree on ?
sergio [11:07 AM]
sure
first I want to run one comparing the stimulus amp vs EE strength connectivity
sergio [11:08 AM]
added this Plain Text snippet: Untitled 

params["EEgain"] = [0.05, 0.1, 0.15, 0.2]

params["glutAmp"] = [0.4,0.5,0.6]

billl [11:09 AM]
so for EEgain, which ones are clearly below threshold?
i would suggest 3 below and 1 slightly above
sergio [11:10 AM]
the EE value that I having using for most of the sims is 0.2
billl [11:10 AM]
glutamp is producing the plateau -- how many syns does that activate?  where are they located?  are we near the threshold?  (realizing that we don't have a good threshold yet)
so 0.2 is way too high
what does 0.05 look like?
sergio [11:12 AM]
I haven’t done 0.05 recently, I need to check when my nb when I was tuning the network
billl [11:12 AM]
maybe could use 0.01 0.05 0.1 0.15 ??
sergio [11:12 AM]
ok
billl [11:12 AM]
stop stop, i'm just guessing there! :)
i thought you had an old 0.05
if not maybe just run 1 now
i don't think we're calibrated
sergio [11:13 AM]
ok, last week I ran sims with 0.1
billl [11:19 AM]
so that was also too high
how about 0.01
btw what are we trying to show
i recall that i had 1 plan but then srdjan had another suggestion that we all liked
sergio [11:20 AM]
for the glutamp, I am doing 2 comp,  bdend1 and adend1. Each 20 inputs, bdend1 is activating spine heads at loc 0.3. Only activating bdend1 induced a clear plateau with a glutamp of 0.7. Adend1 stim is 3 stim in range of 200 ms after the stim on bdend1. Different AMPA/NMDA ratio for bdend1 and adend1.
billl [11:20 AM]
what are we trying to show or find or look at?
oh sorry, you're answering my earlier question
sergio [11:21 AM]
srdjan wants to see if we can have plateau in the network that last only for the time of the stim
billl [11:21 AM]
i thought glutamp was for generating the plateau? -- so should only be on 1 section
sergio [11:21 AM]
like 200-300ms
billl [11:21 AM]
ok so we def need lower bg
sergio [11:21 AM]
replied to a thread:
i thought glutamp was for generating the plateau? -- so should only be on 1 section
perfect
billl [11:22 AM]
good for using threads here since disucssing 3 topics at once
sergio [11:22 AM]
so definitely need use a fix stim amp for adend1
billl [11:23 AM]
ok, why?
overall seems like not entirely ready to run a big batch -- can we get a single sim that's close to what we want?  maybe with 0.01 EE ?
sergio [11:24 AM]
if i run batch batch that will only modify the value of the stim to bdend1
billl [11:25 AM]
why do you want to modify that?  don't you already know what you need to use to get a plateaux?
sergio [11:26 AM]
so better to have glutAmp fix and explore the other params (EE, IE…)?
let me run 0.01 EE
only with stim to bdend1?


** plan 
modify 0.01

** v23
stim 0.7
*** EE 0.005
[[./gif/network79_raster.png]]
[[./gif/traces_network79.png]]

*** EE 0.01
[[./gif/network80_raster.png]]
[[./gif/traces_network80.png]]

*** EE 0.001
[[./gif/traces_network81.png]]
[[./gif/network81_raster.png]]

*** EE 0.0
[[./gif/traces_network82.png]]
[[./gif/network82_raster.png]]

*** EE 1.0
[[./gif/traces_network83.png]]
[[./gif/network83_raster.png]]

*** EE 2.0 longer plateaus
[[./gif/traces_network84.png]]
[[./gif/network84_raster.png]]


* 02-05-18

Goal: tune the network 

** EE strength
*** EE 0.2
[[./gif/network85_raster.png]]
[[./gif/traces_network85.png]]

*** EE 0.5
[[./gif/network86_raster.png]]
[[./gif/traces_network86.png]]

*** EE 1.5
[[./gif/network87_raster.png]]
[[./gif/traces_network87.png]]

*** EE 0.1
[[./gif/network88_raster.png]]
[[./gif/traces_network88.png]]

*** summary
https://docs.google.com/presentation/d/1vh4GiC9LDCjJnvsie539QrSoAfSnF-GLN3spbYan4uw/edit?usp=sharing

*** rate started to increase with EE 0.1, but plateau increased duration staring 0.5.

** v24
** explore IE
original value IE: 0.01
EE set to 0.5

*** IE 0.0
[[./gif/network89_raster.png]]
[[./gif/traces_network89.png]]

*** IE 0.1
[[./gif/network90_raster.png]]
[[./gif/traces_network90.png]]

*** IE 0.05
[[./gif/network91_raster.png]]
[[./gif/traces_network91.png]]

*** IE 0.02
[[./gif/traces_network92.png]]
[[./gif/network92_raster.png]]

*** IE 0.005
[[./gif/traces_network93.png]]
[[./gif/network93_raster.png]]

** discussion on slack about EE
billl [1:15 PM]
where is the EE input? -- looks like getting plateaus due to the EE??
billl [1:46 PM]
??
sergio [2:17 PM]
EE input is to the other basal dendrite (bdend2)
according to one paper
and other models have used these inputs
billl [2:18 PM]
so getting plateaus fro other bdend?
sergio [2:19 PM]
yes, from the internal connectivity. Should I keep the weight of the inputs with low values?
billl [2:20 PM]
yeah we only want 1 cause of our plateaus
need enough stim to get the plateau though
area ll those 0.0 supposed to be getting plateaus?  some don't
sergio [2:22 PM]
EE inputs start to affect the output when weight values are equal or higher than 0.5.  I was thinking to use 0.1
billl [2:23 PM]
if you are getting extra plateaus then we won't be able to see the effects of our plateaus
we would like to elicit plateaus and not get other plateaus
1. can we elicit plateaus?
2. how can we avoid extra plateaus
sergio [2:26 PM]
ok, probably I’m going to use 0.01 to avoid getting other plateaus
billl [2:26 PM]
1. how can we elicit plateaus
but need to be able to elicit plateus too
can you do that?
have you demonstrated?
maybe use joe's params?
sergio [2:32 PM]
In the sim with EE = 0.0, you can see plateau potentials by stim at 100 ms at the bdend2. I can keep a low value for EE, and then explore values for IE
billl [2:33 PM]
i wasn't sure if 6 and 8 have plats?  i guess they do? -- see plat in bdend
is EE onto AMPA and NMDA in same way as we are doing for plateau?
maybe need to make these more ampa?
rather les nmda
sergio [2:34 PM]
yep, EE has the same AMPA/NMDA ratio as the induced plateaus. I can change the ratio to 4.0
billl [2:35 PM]
what ratio?
sergio [2:35 PM]
the ratio value that we use for plateaus AMPA/NMDA is 2.0
billl [2:35 PM]
ok so can change that
sergio [2:36 PM]
ok

** plan 
change AMPA/NMDA ratio at EE from 2.0 to 4.0
** v25
IE = 0.01
*** EE 1.0
[[./gif/traces_network94.png]]
[[./gif/network94_raster.png]]
**** less spikes than in network83, where AMPA/NMDA ratio is 2.0

*** EE 0.2
[[./gif/traces_network95.png]]
[[./gif/network95_raster.png]]

*** EE 0.1
[[./gif/traces_network96.png]]
[[./gif/network96_raster.png]]

** v26

*** EE 0.2, IE 0.02 
[[./gif/traces_network97.png]]
[[./gif/network97_raster.png]]

*** EE 0.1, IE 0.02
[[./gif/traces_network98.png]]
[[./gif/network98_raster.png]]

*** EE 0.5, IE 0.02 
[[./gif/traces_network99.png]]
[[./gif/network99_raster.png]]

*** EE 0.5, IE 0.01
[[./gif/traces_network100.png]]
[[./gif/network100_raster.png]]

* 02-06-18

goal: meeting and tunning of network

** metting
*** bill: do EE 0.01 and binary batch (for selecting one input to EE bdend or not)
*** srdjan: EE is too high; check II connectivity, evidence of clusters of 200 cells; increase baseline inhibitory inhibition to exc
*** srdjan: increase requirements to fire 

** plan 
*** run EE 0.01
*** do binnary batch

** EE exploring parameter
*** EE 0.01, IE 0.01  
[[./gif/network101_raster.png]]
[[./gif/traces_network101.png]]

*** EE 0.01, IE 0.02
[[./gif/traces_network102.png]]
[[./gif/network102_raster.png]]

*** EE 0.001, IE 0.02
[[./gif/network103_raster.png]]
[[./gif/traces_network103.png]]

*** EE 0.001, IE 0.01
[[./gif/network104_raster.png]]
[[./gif/traces_network104.png]]

* 02-07-18

goal: tune network, run batches (binary)

**  tune network 

*** summary last sims
https://docs.google.com/presentation/d/1ashAyqiLof7ITS2e1dMKs1Rf7faFQv0yhEz13N4BOBQ/edit?usp=sharing

*** should I change cellular properties?

** trying Rm scale = 1.0

*** EE 0.01, IE 0.01
[[./gif/traces_network105.png]]
[[./gif/network105_raster.png]]

*** EE 0.01, IE 0.02
[[./gif/traces_network106.png]]
[[./gif/network106_raster.png]]

** discussion on slack 
sergio [2:37 PM]
I did sims with lower EE (0.01 and 0.001), but I keep observing the tail of activity after stimulation
billl [2:37 PM]
how about EI?
and/or higher IE
sergio [2:39 PM]
ok, I’m going to do a higher IE, and modify EI
billl [2:39 PM]
funny that so hard to get
maybe we're on wrong track
what is the nature of EI?  gabaa i assume what erev?  -70 ? -80?
sergio [2:40 PM]
I have a fast and slow GABA
The RMP is around -80 mV, in the model it depends on Gfluctp reversal potential for exc and inh
billl [2:50 PM]
what's BB do?  why are you using that?  that's a very low RMP ?  why using?
salvadord [2:54 PM]
vales are from sam’s prev model — one published in Neuroscience I think
sergio [2:56 PM]
I started using BB long time ago, I took as a model the settings of M1 model, but I have modified the values (taus). The RMP is set to -80 mV, but before it is lower  (-88mV). We discussed at some point trying to have a value closer to -70mV
billl [2:56 PM]
can use diff to check difference with exp2syn -- not sure why using this old code unless has some features we want
ok so let BB be
but you are not getting enough inhib so either have to move RMP up or move erevGaba down
sergio [2:57 PM]
let me move the RMP up and see the differences
which value should I target? -70 or -75?
billl [2:58 PM]
-70 ok  -65 better maybe
or you want low to get a clear plateau
can try both
or all 3
run batches
sergio [2:59 PM]
ok
let me move to batches

** plan 
set lower RMP
higher IE 
Modify EI

** setting RMP

*** added cfg.vinit
*** plot orig values
cfg.vinit =  -80 mV 
cfg.e_inh_noise = -100
cfg.e_exc_noise = -20.0
[[./gif//network107_traces_rmp.png]]

*** e_inh set to -90
[[./gif/network107_traces_einh-90.png]]

*** e_inh set to -80
[[./gif/network107_traces_einh-80.png]]

*** e_inh set to -85
[[./gif/network107_traces_einh-85.png]]

*** setting e_inh and e_exc based on vinit
cfg.e_inh_noise = cfg.vinit-10.0 
cfg.e_exc_noise = cfg.vinit+65.0

*** vinit -70
[[./gif/network107_traces_vinit-70.png]]

*** vinit -80
[[./gif/network107_traces_vinit-80.png]]

*** vinit -65
[[./gif/network107_traces_vinit-65.png]]


* 02-08-17

goal: batches on comet

** setting comet for batches
*** ran single sim on comet no errors
Simulated time: 0.3 s; 120 workers
Run time: 28.38 s
Total time = 119.74 s

*** comparing outputs between no and comet 
[[./gif/network107_raster_comet.png]]
[[./gif/network107_raster_no.png]]
					   
[[./gif/network107_traces_vinit-65.png]]
[[./gif/network107_traces_comet.png]]

traces are different, it seems like gfluctp was not inserted in the sim on comet.

*** compiled again in comet

*** set test on comet, vinit -65, 300 ms  

*** plots
[[./gif/network107_traces_comet_test2.png]]
[[./gif/network107_raster_comet_test2.png]]

noise was included but output still different

*** running aging sim on zn to compare
same output as previous
asking on slack

*** discussion on slack
I’m running the same simulation in comet vs ‘zn’, but the output looks different

salvadord [12:17 PM]
woops… same netpyne version?

sergio [12:17 PM]
let me check

salvadord [12:17 PM]
if you save to json, can just check there

sergio [12:18 PM]
ok

salvadord [12:19 PM]
‘netpyne_version’ and ‘netpyne_changeset’

salvadord [12:35 PM]
not sure why those diffs were happening between versions — should those 2 spikes in ‘zn’ be happening or not?
if they don’t show up now, could indicate some bug introduced in latest version … let me know


sergio [12:37 PM]
I’m not doing stim but the RMP is set at -65 mV, with the synaptic noise there is more prob of firing

salvadord [12:39 PM]
ah ic, so seems like the one in zn hsa more noise than the one in comet — make sure its working ok now in zn and you get the level of noise you expect

sergio [12:40 PM]
om
ok

*** netpyne version on zn
netpyne version: 0.7.5
netpyne changeset: g096a820

*** netpyne version on comet
netpyne version: 0.7.6
netpyne changeset: g5e64865

*** salva updated netpyne on zn
netpyne version: 0.7.6
netpyne changeset: g66afdc5

*** plots
[[./gif/network107_traces_zntest3.png]]
not differences with previous sim on zn

*** updated version of netpyne on comet
*** updated site dir neurosim repo on comet
*** running again sim on comet
*** discussion on slack
wow u requesting 48 hours for job?
probably will take longer in queue
since u using 120 cores, probably just need couple hours max?

sergio [4:04 PM]
ohh I thought that was the max time
let me cancel the job

salvadord [4:05 PM]
its the max time the job will run for — after that it will stop
but you should alwasy use the min value possible so stays less in queue

billl [4:05 PM]
yeah, you will never get to front of queue if you try to take over the machine


sergio [4:06 PM]
ok
also, the job is running on NEURON 7.4, is that ok? should I run on 7.5?

salvadord [4:07 PM]
should be ok

*** changed job submission
cancel previous job:
scancel 'jobid'
changed max runtime to 00:10:00, and submitted the job again

** tuning network  
runing on zn

*** EE 0.01 IE 0.03 vinit -80
[[./gif/traces_network108.png]]
[[./gif/network108_raster.png]]
too strong inh, I can't elicit a good plateau 

*** EE 0.01 IE 0.02 vinit -70
[[./gif/traces_network109.png]]
[[./gif/network109_raster.png]]
increased the duration of the plateau

*** EE 0.01 IE 0.01 vinit -70
[[./gif/network110_raster.png]]
[[./gif/traces_network110.png]]
increased number of spikes 

*** EE 0.01 IE 0.01 vinit -75
[[./gif/network111_raster.png]]
[[./gif/traces_network111.png]]
less number of spikes 

* 02-09-18

goal: finished batches in comet

** test sim in comet
*** output similar than before
[[./gif/network107_traces_comet_test3.png]]
[[./gif/network107_raster_comet_test3.png]]

*** netpyne on comet
netpyne version: 0.7.6
netpyne changeset: g0672189

*** discussion on slack
billl [10:34 AM]
we have the same version of netpyne on both now?
sergio [10:35 AM]
yes
billl [10:35 AM]
and the same files?  and the same number of nodes?
sergio [10:35 AM]
different number of nodes
billl [10:35 AM]
then is something wrong with the randomizers
check that can get same result with same # nodes
sergio [10:35 AM]
ok

*** plan
reduce number of nodes in comet

*** nodes in comet
comet 24 cores/node
number of nodes requested: 5
reduce to 2 nodes 

*** discussion on slack
salvadord [11:33 AM]
sergio, how long does the sim take to run? maybe can do a reduced version that’s fast to run and I can try on my laptop to check if problem is num of cores
sergio [11:34 AM]
on zn with 48 cores around 600-700 seconds
salvadord [11:35 AM]
so not so fast… how many cells? duration?
sergio [11:35 AM]
for 300 ms of sim
1500 cells
salvadord [11:36 AM]
are u able to run mpi on your laptop?
maybe can compare a sim just with 30 cells on zn vs laptop, and diff num of cores
if problem is noise you should see diffs even with few cells
sergio [11:37 AM]
I haven’t done it in a while but let me update my laptop
ok
salvadord [11:39 AM]
also can you upload the output json file from zn vs comet? see if I can spot anything at a quick glance
sergio [11:39 AM]
ok, let me check the output json  files

*** running test in comet 
[[./gif/network107_traces_comet_test4.png]]
[[./gif/network107_raster_comet_test4.png]]
similar than before, slight changes in the raster

*** checking json files
kind of slow to open json files on text editor
*** printed simConfig from json file comet
netpyne version: 0.7.6
netpyne changeset: gfe330a9
simConfig: {u'cache_efficient': True, u'addConns': True, u'verbose': 0, u'saveJson': True, u'weightLongInh': 1.0, u'recordStim': False, u'saveDataInclude': [u'simData', u'simConfig', u'netParams', u'net', u'netPops', u'netCells'], u'longConnPV5': 1, u'factor': 0.05, u'NMDAAlphaScale': 1.0, u'recordCells': [[u'PT5_1', 5], [u'PT5_2', 5], [u'PT5_3', 5], [u'PT5_4', 5], [u'PT5_5', 5], [u'PT5_6', 5], [u'PT5_7', 5], [u'PT5_8', 5], [u'PT5_9', 5], [u'PT5_10', 5]], u'glutDelay': 1.0, u'checkErrors': False, u'sizeX': 400, u'sizeY': 1600, u'sizeZ': 300, u'timing': True, u'dt': 0.05, u'cellsrec': 2, u'addLongConn': 1, u'saveDat': False, u'startLong': 0, u'addIClamp': 0, u'seed_wiring': 4123, u'rand123GlobalIndex': None, u'noise_ptps': 0, u'duration': 300, u'simLabel': u'network107', u'checkErrorsVerbose': False, u'scale': 1.0, u'recordTime': True, u'filename': u'../../data/v26/network107', u'EIgain1': 3.0, u'cvode_atol': 1e-06, u'IClamp1': {u'loc': 0.5, u'pop': u'PV5', u'start': 5, u'sec': u'soma', u'amp': 0.4, u'dur': 1000}, u'noise': 1, u'EEgain': 0.01, u'spillDelay': 10.0, u'e_inh_noise': -75.0, u'noise_seed': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], u'delayLong': 1.0, u'seeds': {u'loc': 3214, u'stim': 1234, u'conn': 4123}, u'ratiobdend': [0.666, 0.334], u'tstop': 1000.0, u'e_exc_noise': 0.0, u'savePickle': False, u'vinit': -65, u'weightLong': 0.0, u'NMDAgmax': 0.05, u'numCellsLong': 500, u'gatherOnlySimData': False, u'cell_list': [5], u'cvode_active': False, u'glutSpread': 11.0, u'saveCellConns': False, u'saveCSV': False, u'glutLoc': 0.3, u'noise_tau': 1.0, u'spillFraction': 0.0, u'singleCellPops': 0, u'noiseLong': 1.0, u'noise_amp': [1.0, 1.2222222222222223, 1.4444444444444444, 1.6666666666666665, 1.8888888888888888, 2.111111111111111, 2.333333333333333, 2.5555555555555554, 2.7777777777777777, 3.0], u'createNEURONObj': True, u'ihScale': 0.0, u'recordStep': 0.1, u'ratioapical': [0.8, 0.2], u'timestampFilename': False, u'printPopAvgRates': True, u'addSynMechs': True, u'saveMat': False, u'addNetStim_eee7ps': 1, u'IEgain': 0.02, u'hParams': {u'celsius': 32, u'v_init': -65.0}, u'CdurNMDAScale': 1.0, u'RmScale': 1.0, u'glutDecay': 0.0, u'backupCfgFile': None, u'saveHDF5': False, u'includeParamsLabel': True, u'CmaxNMDAScale': 1.0, u'saveTiming': False, u'sampleList': 80, u'saveFolder': u'../../data/v26', u'stimList': [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999], u'compactConnFormat': False, u'glutAmp': 0.7, u'saveCellSecs': True, u'longConnPT5': 0, u'createPyStruct': True, u'ratesLong': {u'dTC': [80.0, 100.0]}, u'IIgainPV1': 0.003, u'recordTraces': {u'v_soma': {u'var': u'v', u'loc': 0.5, u'sec': u'soma'}, u'v_Bdend1': {u'var': u'v', u'loc': 0.3, u'sec': u'Bdend1'}}, u'NMDABetaScale': 1.0, u'analysis': {u'plotRaster': {u'orderBy': u'gid', u'orderInverse': True, u'syncLines': False, u'saveFig': True, u'labels': u'overlay', u'showFig': True, u'lw': 1.2, u'popRates': False, u'marker': u'|', u'include': [[u'PT5_0', u'PT5_1', u'PT5_2', u'PT5_3', u'PT5_4', u'PT5_5', u'PT5_6', u'PT5_7', u'PT5_8', u'PT5_9', u'PT5_10', u'PV5'], []], u'figSize': [12, 10]}, u'plotTraces': {u'saveFig': True, u'showFig': False, u'colors': [u'black'], u'oneFigPer': u'cell', u'saveData': False, u'include': [[u'PT5_1', 0]], u'ylim': [-100, 30], u'figSize': [12, 8]}}, u'saveDpk': False, u'recordStims': False, u'printRunTime': False}
*** printed simConfig from json file zn
netpyne version: 0.7.6
netpyne changeset: g66afdc5
simConfig: {u'cache_efficient': True, u'addConns': True, u'verbose': 0, u'saveJson': True, u'weightLongInh': 1.0, u'recordStim': False, u'saveDataInclude': [u'simData', u'simConfig', u'netParams', u'net', u'netPops', u'netCells'], u'longConnPV5': 1, u'factor': 0.05, u'NMDAAlphaScale': 1.0, u'recordCells': [[u'PT5_1', 5], [u'PT5_2', 5], [u'PT5_3', 5], [u'PT5_4', 5], [u'PT5_5', 5], [u'PT5_6', 5], [u'PT5_7', 5], [u'PT5_8', 5], [u'PT5_9', 5], [u'PT5_10', 5]], u'glutDelay': 1.0, u'checkErrors': False, u'sizeX': 400, u'sizeY': 1600, u'sizeZ': 300, u'timing': True, u'dt': 0.05, u'cellsrec': 2, u'addLongConn': 1, u'saveDat': False, u'startLong': 0, u'addIClamp': 0, u'seed_wiring': 4123, u'rand123GlobalIndex': None, u'noise_ptps': 0, u'duration': 300, u'simLabel': u'network107', u'checkErrorsVerbose': False, u'scale': 1.0, u'recordTime': True, u'filename': u'../../data/v26/network107', u'EIgain1': 3.0, u'cvode_atol': 1e-06, u'IClamp1': {u'loc': 0.5, u'pop': u'PV5', u'start': 5, u'sec': u'soma', u'amp': 0.4, u'dur': 1000}, u'noise': 1, u'EEgain': 0.01, u'spillDelay': 10.0, u'e_inh_noise': -75.0, u'noise_seed': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], u'delayLong': 1.0, u'seeds': {u'loc': 3214, u'stim': 1234, u'conn': 4123}, u'ratiobdend': [0.666, 0.334], u'tstop': 1000.0, u'e_exc_noise': 0.0, u'savePickle': False, u'vinit': -65, u'weightLong': 0.0, u'NMDAgmax': 0.05, u'numCellsLong': 500, u'gatherOnlySimData': False, u'cell_list': [5], u'cvode_active': False, u'glutSpread': 11.0, u'saveCellConns': False, u'saveCSV': False, u'glutLoc': 0.3, u'noise_tau': 1.0, u'spillFraction': 0.0, u'singleCellPops': 0, u'noiseLong': 1.0, u'noise_amp': [1.0, 1.2222222222222223, 1.4444444444444444, 1.6666666666666665, 1.8888888888888888, 2.111111111111111, 2.333333333333333, 2.5555555555555554, 2.7777777777777777, 3.0], u'createNEURONObj': True, u'ihScale': 0.0, u'recordStep': 0.1, u'ratioapical': [0.8, 0.2], u'timestampFilename': False, u'printPopAvgRates': True, u'addSynMechs': True, u'saveMat': False, u'addNetStim_eee7ps': 1, u'IEgain': 0.02, u'hParams': {u'celsius': 32, u'v_init': -65.0}, u'CdurNMDAScale': 1.0, u'RmScale': 1.0, u'glutDecay': 0.0, u'backupCfgFile': None, u'saveHDF5': False, u'includeParamsLabel': True, u'CmaxNMDAScale': 1.0, u'saveTiming': False, u'sampleList': 80, u'saveFolder': u'../../data/v26', u'stimList': [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999], u'compactConnFormat': False, u'glutAmp': 0.7, u'saveCellSecs': True, u'longConnPT5': 0, u'createPyStruct': True, u'ratesLong': {u'dTC': [80.0, 100.0]}, u'IIgainPV1': 0.003, u'recordTraces': {u'v_soma': {u'var': u'v', u'loc': 0.5, u'sec': u'soma'}, u'v_Bdend1': {u'var': u'v', u'loc': 0.3, u'sec': u'Bdend1'}}, u'NMDABetaScale': 1.0, u'analysis': {u'plotRaster': {u'orderBy': u'gid', u'orderInverse': True, u'syncLines': False, u'saveFig': True, u'labels': u'overlay', u'showFig': True, u'lw': 1.2, u'popRates': False, u'marker': u'|', u'include': [[u'PT5_0', u'PT5_1', u'PT5_2', u'PT5_3', u'PT5_4', u'PT5_5', u'PT5_6', u'PT5_7', u'PT5_8', u'PT5_9', u'PT5_10', u'PV5'], []], u'figSize': [12, 10]}, u'plotTraces': {u'saveFig': True, u'showFig': False, u'colors': [u'black'], u'oneFigPer': u'cell', u'saveData': False, u'include': [[u'PT5_1', 0]], u'ylim': [-100, 30], u'figSize': [12, 8]}}, u'saveDpk': False, u'recordStims': False, u'printRunTime': False}
*** diff
only difference is changeset

*** slack discussion
sergio [3:02 PM]
I compared the simConfig dict in both json files and they are similar. The only difference is in the changeset of netpyne. I also run 2 nodes in comet (1 node/24 cores) but keep having similar ouput. I thinking of running the model in my laptop and check if there are differences
salvadord [3:04 PM]
the changeset is key — means some changes in netpyne so could perfectly well be the cause
need to ensure have exactly same version in both
1 vs 24 cores - identical output?
billl [3:06 PM]
good to  print out as part of output sim.gitchangeSet() (?sp) so that know later how it was done
sergio [3:07 PM]
similar to previous sim in comet with 5 nodes
salvadord [3:08 PM]
similar? should be identical irrespective of num of nodes, especially if running on same system (ie Comet)
billl [3:09 PM]
could check identical 1st with same number of nodes which if same and diff with diff would tell you that most likely some error in pseudorand handling
salvadord [3:10 PM]
ah well, guess could be diffs since some of the randomness not handled internally by netpyne (i.e. the gfluct stuff)
billl [3:11 PM]
right
that's the main one using now
bbl
sergio [3:12 PM]
the raster plot is slightly diff between 2 vs nodes in comet, but I might have done something in between running the 2 sims that can affect the output. I need to run again with 5 nodes and compare
billl [3:31 PM]
5 nodes is an odd (literally) choice -- usually do multiples of 2 so 4 or 8 better
sergio [3:32 PM]
ok
I’m going to change to 4 nodes and compare to 2 nodes
billl [3:33 PM]
thought we were comparing comet to zn ?
sergio [3:35 PM]
yes, just have some slight differences in the raster plot comparing a sim that I ran in comet with nodes vs the last one with 2 nodes. The voltage trace seems identical if compare 2 vs 5 nodes. Comet sim vs zn sim still different
billl [3:36 PM]
so need to compare comet and zn with same number of nodes
then if that the same compare 2 vs 4
sergio [3:36 PM]
ok

*** updated netpyne on comet and running sim with 2 nodes

*** running on zn
RMP is different if netsim is added

netstim added:
[[./gif/network114_traces.png]]

no netstim added:
[[./gif/network113_traces.png]]

*** tunning RMP with netstim present 

* 01-12-18
goal batches

** batch on comet 
*** last sim
[[./gif/network107_traces_comet_test5.png]]
[[./gif/network107_raster_comet_test5.png]]
similar results than before

*** run test batch
*** error
Open MPI does not support recursive calls of orterun

** batch on zn
*** checking batch on zn
make mistake running batch. 
set vinit parameter in batch.py as 'vinit'
previously changed to 'vinit_PT5'
 
*** running again on zn
*** RMP seems to be stabilized around -80mv with all the sims
-65mV:
[[./gif/EEgain_vinit2_2_0_traces.png]]

-80mV
[[./gif/EEgain_vinit2_2_3_traces.png]]

there are changes in the output

*** more negative RMP induce less spikes

** abstract for Brain Initiative investigators meeting
https://docs.google.com/document/d/13fimea2SYAPIJQJ2hcOCxxCsTa7nwnja5SV8izy1FOk/edit?usp=sharing

* 02-13-18

goal: meeting

** inh to bdend1
loc 0.3 of bdend1
cfg.EEgain = 0.001      # basal dend 
cfg.IEgain = 0.02     #PV to exc s
cfg.IIgainPV1 = 0.00001 # PV to PV
cfg.EIgain1 = 0.15 # exc to PV
cfg.glutAmp    = 0.8
[[./gif/network116_raster.png]]
[[./gif/traces_network116.png]]

** meeting
*** presentation prepare for it 
https://docs.google.com/presentation/d/1ashAyqiLof7ITS2e1dMKs1Rf7faFQv0yhEz13N4BOBQ/edit?usp=sharing

*** MH presented sim with NMDA, volt, calcium currents of plateaus in the detailed model.

** explore loc to bdend1

*** loc 0.8
[[./gif/traces_network117.png]]
[[./gif/network117_raster.png]]

*** loc 0.1
[[./gif/traces_network118.png]]
[[./gif/network118_raster.png]]

*** soma 0.5
[[./gif/traces_network119.png]]
[[./gif/network119_raster.png]]

local inhbition in the basal dend where the input is lacated controls the firing and dend plateau generation
distal inhibition does not control the firing or the generation of the plateau
proximal inhibition decrease firing but does not affect the plateau
somatic inhibition longer plateaus

similar to results in paper of "du et al 2017"

* 02-14-18

** presented data to slack
*** discussion
Hey Sergio, are you sure RMP is actually being varied in your sims?  I can’t see any difference between the plots in your Figure 3 stuff…

sergio [12:31 PM]
I had that problem, the RMP does not variate that much in the sims. I modified the reversal potential for the exc and inh components of the synaptic noise, but still there is a component that it is driving the RMP to -80 mV.

joe [12:33 PM]
How are you changing the RMP?  You’re setting e_pas in each section of the cell?

sergio [12:33 PM]
yep

joe [12:34 PM]
I’d expect to see more of an effect, which makes me think perhaps you’re not actually varying the values…  Could you run an RMP of like -40 and -100 to see if there is any difference in output?


sergio [12:35 PM]
sure, let me run those

*** running test RMP 
*** v29
*** RMP -40
[[./gif/network120_raster.png]]
[[./gif/network120_traces.png]]

*** RMP -100
[[./gif/network121_traces.png]]
[[./gif/network121_raster.png]]

*** change e_inh
orig def:
cfg.e_inh_noise = -85

new def:
cfg.e_inh_noise = cfg.vinit_PT5 - 10.0

*** running RMP -100
[[./gif/network122_traces.png]]
[[./gif/network122_raster.png]]

*** RMP -40
[[./gif/network123_traces.png]]
[[./gif/network123_raster.png]]

** discussion slack
sergio [3:44 PM]
replied to a thread:
are you able to get the plateau during stim?
yes, I can have plateaus during stim. Joe pointing out a problem with the RMP sims, the RMP doesn’t variate in the batch sims. I’m trying to fix that, it is a problem with the reversal potential of the noise.
billl [4:09 PM]
do you have an example with a plateau?
didnn't see in the examples you showed
sergio [4:18 PM]
uploaded this image: v_traces 
the clearest plateaus are the PT5_5, 7, and 10
billl [4:20 PM]
recall sdrjan's question -- he's look for timelimited plateaus in the population
geting plateau in single cell is what joe and penny are doing
what is the problem with RMP?  did you fix it?
can you now run some sims?
?
sergio [4:25 PM]
I was modifying the vinit in all the secs of PT5 cells, but I left the inh reversal potential fixed at -85 mV. The cells started with a RMP depending of vinit but then the RMP was balanced in a value around -80 mV. For the batches, I’m planning to change the values of the reversal potential for inh noise with the vinit.
billl [4:25 PM]
ok
how many sims in the batch?
sergio [4:26 PM]
12
billl [4:26 PM]
why bother?
if you're ready to do batches you need to do 2e3-1e4 at least
if you already know the answer then you can run just 1 -- why run 12?
sergio [4:29 PM]
sure, I can run more, just need to select better the range of values to run. and then do the analysis.
billl [4:29 PM]
so what ranges are you going to check?
sergio [4:30 PM]
added this Plain Text snippet: Untitled 

params["EEgain"] = [0.001, 0.01, 0.1] 

params["vinit_PT5"] = [-65,-70,-75,-80]

sergio [4:31 PM]
these are the previous values in the batch
billl [4:31 PM]
ok so none of those worked
what do you want to do now
thought we decided to use a vinit of -65??
sergio [4:31 PM]
I need to run again with the modifcation of the RMP
billl [4:31 PM]
let's not keep wasting time -- let's get started running some batches
how do you modify the RMP? -- vinit doesn't work?
why do you want totest multiple values of RMP?
sergio [4:33 PM]
the idea was to check the duration of the plateaus depending of the RMP
because the previous sims used RMP around -80mV, which was closer to the reversal potential for GABA
billl [4:34 PM]
i don't understand
right now we have no plateaus
(network) once we have plateaus we can check
so we decided to change the RMP to -65
were you able to do that?
sergio [4:36 PM]
just need to run a couple of sims to check the plateau at -65 with the new fixes. just 10 mins
billl [4:36 PM]
ok

*** RMP -65
[[./gif/network124_raster.png]]
[[./gif/network124_traces.png]]
still not stable at -65

*** RMP -75
[[./gif/network125_traces.png]]
[[./gif/network125_raster.png]]
RMP stabilizes at -80 mV

*** modified e_inh and e_exc
cfg.e_inh_noise = cfg.vinit_PT5 - 5.0 
cfg.e_exc_noise = cfg.vinit_PT5 + 70.0 

*** RMP -65 
[[./gif/network126_traces.png]]
[[./gif/network126_raster.png]]
RMP is stabilized at -70mV

*** modified e_exc 
cfg.e_exc_noise = cfg.vinit_PT5 + 80.0

*** RMP -65
[[./gif/network127_traces.png]]
[[./gif/network127_raster.png]]
more positive peak values in noise but no changes in RMP

*** modified e_inh and e_exc
cfg.e_inh_noise = cfg.vinit_PT5 - 2.0 
cfg.e_exc_noise = cfg.vinit_PT5 + 90.0

*** RMP -65
[[./gif/traces_network128.png]]
[[./gif/network128_traces.png]]
[[./gif/network128_raster.png]]
RMP closer to -65 mV

*** RMP -75
[[./gif/traces_network129.png]]
[[./gif/network129_traces.png]]
[[./gif/network129_raster.png]]

*** adjusted e_exc
cfg.e_exc_noise = cfg.vinit_PT5 + 80.0

*** RMP -80
[[./gif/traces_network130.png]]
[[./gif/network130_traces.png]]
[[./gif/network130_raster.png]]

* 02-15-18 batch in comet

goals: batches

** discussion on slack

sergio [6:53 PM]
it is more difficult to control the firing of the network at -65 mV
the other possibility is to add IE inputs to the basal dendrite
I did some exploration in the fig 4 here: https://neurosim.slack.com/files/U3BM87WN5/F94SYQKQ8/ee_synaptic_weights_inputs
sergio [6:57 PM]
mentioned this file:  
EEE network 29

Presentation from Google Drive
sergio [6:58 PM]
need to leave now, but let’s continue tomorrow
billl [10:11 AM]
need to increase inhib
time to start running some batches
can you do some today?
sergio [10:37 AM]
sure, let me set the batches and run them today
billl [10:37 AM]
show me what batches you are setting up before run them
so we can agree
eg maybe do 2 diff RMP -65 and -75
multiple different EI and IE and EE as before
also different erev for GABAslow and for GABAAfast
-70 -80 -90
sergio [10:39 AM]
perfect
billl [10:40 AM]
can do 4 diff levels for 7 diff things (expt 4 7) # 16384
but let's agree one what those levels are before you launch
also once you launch you need to work on your analysis routines so can identify which if any are showing network plats
sergio [10:43 AM]
ok, i’ll show the batch settings before running
billl [10:45 AM]
thx

** plan 
run batches in comet

** checking comet
*** asking salva about the batch submission
for batches just run "python batch.py"

set 'walltime' to 00:30:00 in batch.py

set output dir to local dir:
b.saveFolder = 'batch_data/'+b.batchLabel

*** ran batch test and worked

** setting batch

*** batch.py  
def multi_params():
	params = specs.ODict()

	params["EEgain"] = [0.001, 0.01, 0.1]
	params["IEgain"] = [0.01, 0.02, 0.03, 0.04, 0.05]
	params["EIgain"] = [0.1, 0.2, 0.5, 1.0, 2.0]	
	params["vinit_PT5"] = [-65,-75]
	params["GABAAfast_e"] = [-70, -80, -90]
	params["GABAAslow_e"] = [-70, -80, -90]

*** cfg.py
**** added different e_inh and e_exc for each vinit
if cfg.vinit_PT5 == -65:
	cfg.e_inh_noise = cfg.vinit_PT5 - 2.0 
	cfg.e_exc_noise = cfg.vinit_PT5 + 90.0 
elif cfg.vinit_PT5 == -75:
	cfg.e_inh_noise = cfg.vinit_PT5 - 2.0 #-85.0
	cfg.e_exc_noise = cfg.vinit_PT5 + 80.0 #-20.0

**** added GABAAfast and slow e params to control with batch
cfg.GABAAfast_e = -80
cfg.GABAAslow_e = -80 

*** discussion on slack
3*5*5*2*3*3 = 1350
don't we also have some glfuct variables to mess with?
salvadord [2:30 PM]
any reason for EEGain to increase x10, IE +0.01, and EI x2 ?
billl [2:31 PM]
think EE 0.1 we already showed was too big??
so might want to try 0.001 0.005 0.01
sergio [2:32 PM]
yes, EE 0.1 was too big
billl [2:32 PM]
IE gain similar 0.01 0.05 0.1 0.2
sergio [2:32 PM]
ok
billl [2:32 PM]
if something is already known to be useless don't test it since the 1 wrong param will now give you 100s or 1000s of useless sims :)
sergio [2:33 PM]
ok
billl [2:34 PM]
what glfluct do you want to test
sergio [2:34 PM]
for EI, I can do 0.1, 0.2, 0,5 and 1,0
billl [2:34 PM]
did we also have different stims to start the plats?
sergio [2:35 PM]
we can test different stim amp to induce plateaus
the one that I’m using is 0.7, for 20 inputs to the basal dend
billl [2:35 PM]
which ?
guess that 0.7/20 just gives you a reliable plat in the indivudal cell right?  so no need to test different ones there?
not sure
sergio [2:37 PM]
I’m fine to leave one value for the stim amplitude
billl [2:37 PM]
k
how about fluct?
efluct, ifluct, all getting same in a group vs all getting different
sergio [2:37 PM]
gfluct has the reversal for the inh and exc
billl [2:38 PM]
also the dend2 stim -- what are the possible patterns for that?  or we're not doing that stim yet?
sergio [2:39 PM]
on this sim, we are not doing this second stim yet. We will be testing the duration of the plateau
every single sim, it is going to be for 600 ms, 1 stim to bdend1 at 100 ms
billl [2:40 PM]
ok
is 600 ms enough time to see if stuff happens after the plat?
sergio [2:41 PM]
there is going to be activity that would last longer than 600 ms
in some sims
should I include the amplitude of the synaptic noise?
billl [2:43 PM]
longer -- that's what we're concerned with isn't it?
since you start at 100ms and plat can last as long as 500ms how would you see if activity lasting after plat?
maybe start at 50ms and run for 800ms ??
so have 250ms that should be baseline activity
syn noise == gfluct?
sergio [2:44 PM]
@syn noise == gfluct? yes
billl [2:45 PM]
ok so what amps do you want to test for that?
do we have sense of what need to do in terms of baseline activity -- when inc RMP to -65 would need less glfluct Eamp i guess
sergio [2:46 PM]
for the amp of noise, I am using default values of the gfluctp mod file
billl [2:47 PM]
how about the taus?
sergio [2:47 PM]
at -65mV, the baseline has a lot of activity
billl [2:47 PM]
so that's not good so prob need to link that to reduce amp
salva -- that easy to do somehow? -- link 2 params into single param choice -- need to set up as a def?
sergio [2:49 PM]
tau also default values of gfluctp mod file
at some point I have different values for tau, but they were too fast
billl [2:49 PM]
ok so you are happy with tau
sergio [2:49 PM]
yes
billl [2:49 PM]
but need to link amp with rmp
how about ifluct? thats ok?
salvadord [2:51 PM]
link 2 params - yes, easy
sergio [2:51 PM]
I can include a condition if there is RMP value to select a value for amplitude of gfluctp
billl [2:52 PM]
ok
so let's make a new list of params and reset tstop and stimonset and then calculate how many sims we're going to run and how much time you should ask for to run them
sergio [2:53 PM]
ok
salvadord [2:53 PM]
added this Python snippet: use groupedParams to link multiple params in batch (example below) 

def simultLongPopStims():

	params = specs.ODict()

	

	params[('pulse', 'pop')] = ['TPO', 'TVL', 'TVL', 'S2', 'S2', 'M2']

	params[('pulse2', 'pop')] = ['TVL', 'TPO', 'S2', 'TVL', 'M2', 'S2']

sergio [2:56 PM]
nice, let me change the params for the batch
salvadord [2:57 PM]
how much time ask for them — each sim is an individual job, so just need to set the time required for each sim, which in sergio’s case is quite low, <1h
then you can run as many jobs as you want
but I wouldn’t recommend too many dimensions as it gets more complicated to analyze
and also filenames get longer
and you generate a couple output files for each sim, so can start getting pretty crowded in the folder
billl [2:58 PM]
wanted many dimensions since we have so far no results so hoping to find someting
why more than 1 data fiel?  -- guess doesn't matter if 2
salvadord [2:59 PM]
sure, 6 or 7 dims is fine… just wouldnt go much higher
more than 1 data field? where did I say that?
billl [2:59 PM]
since we typically like to run 1e4-1e5 sims prob better if can just add to a few files and not create a file for each one
salvadord [2:59 PM]
ooh file
billl [2:59 PM]
data file
salvadord [3:00 PM]
the cfg file, the sbatch script to run it, and the output file — minimum
plus any graphs if you decide to plot as well
billl [3:00 PM]
why keep cfg file and sbatch script? -- can remove after loading
don't plot graphs -- you can't look at graphs
sergio [3:01 PM]
ok
salvadord [3:01 PM]
which sometimes good idea since then get disrtributed analysis/plotting
and useful to quickly look at fig if something interesting
but depends on the case
billl [3:01 PM]
can generate a fig in <1sec
salvadord [3:02 PM]
cfg file and sbatch — useful if want to rerun single sim, but can remove if prefer
billl [3:02 PM]
i would suggest that default should be to save 1 file (or a file append) / sim so not knocking out inodes
get too many inodes and hassle since ls doesn't work anymore
should be able to regen the cfg and sbatch givien the data filename
anywya let's run it now sergio the way it is set up; but no graphics
salvadord [3:03 PM]
<1 sec — depending on how much info you save of network, might need to recreate cells to plot some figs, so more like ~<1min
billl [3:04 PM]
single cell run for 1 min?  - ok 2 sec
salvadord [3:04 PM]
single cell?
billl [3:04 PM]
recreate cells to plot single cell fig i thought
or recreate 10 cells for 10 cells
but still very fast
salvadord [3:05 PM]
eg. to plot raster need info of cells, pops, so need to recreate basic net structure, unless save full data (which if net is big, not recommended)
but still relatively fast yeah
billl [3:06 PM]
to get org of raster? -- not easy to recreate what range of gids are what pops?
anyway let's try and see where there are problems;  since we haven't had any power users (except you and you're a special case)
sergio [3:07 PM]
ok
salvadord [3:07 PM]
y easy, but have to recreate, so just saying a bit more than 1 sec
billl [3:08 PM]
so might be something that should save since would only take <<1kb
anyway, sergio -- have another proposal for your params?
sergio [3:10 PM]
I would include the II connectivity also, but let me update the params that we have discussed
billl [3:10 PM]
k
salvadord [3:11 PM]
y could save pop info indep and then adapt analysis funcs to use that format
billl [3:11 PM]
yes, best is to make it easy to manage big projects eventually
lots of space/time tradeoffs
space/time/inode

*** plan 
no figs for batch
modify ranges for EE, EI and IE
run sim for 800 ms
stim at 50 ms

*** settings in batch.py
params["EEgain"] = [0.001, 0.005, 0.01]
params["IEgain"] = [0.01, 0.05, 0.1, 0.2]
params["EIgain"] = [0.1, 0.2, 0.5, 1.0]
params["IIgain"] = [0.0001, 0.0005, 0.001]
params["vinit_PT5"] = [-65,-75]
params["GABAAfast_e"] = [-70, -80, -90]
params["GABAAslow_e"] = [-70, -80, -90]

*** changes on noise_amp in cfg.py 
if cfg.vinit_PT5 == -65:
	cfg.e_inh_noise = cfg.vinit_PT5 - 2.0 
	cfg.e_exc_noise = cfg.vinit_PT5 + 90.0 
	cfg.noise_amp = 0.7

elif cfg.vinit_PT5 == -75:
	cfg.e_inh_noise = cfg.vinit_PT5 - 2.0 
	cfg.e_exc_noise = cfg.vinit_PT5 + 80.0 
	cfg.noise_amp = 1.0

*** ran single test sim vinit -65
[[./gif/traces_network130_test.png]]
[[./gif/network130_raster_test.png]]

*** discussion on slack

I changed the running time for the sim to 800 ms, and stim at 50 ms
billl [4:10 PM]
how many total sims?
sergio [4:11 PM]
2592
billl [4:12 PM]
ok let's run it
what's expected clocktime?
sergio [4:14 PM]
2 nodes, 24 cores each, 600 ms of sim, runs in 227 s in comet
billl [4:15 PM]
ok, so what's expected clocktime?
how many nodes will you ask for?  what are cores for?  are you multithreading?
sergio [4:16 PM]
that’s 163 h just doing 600ms for each sim
I can do 4 or 8 nodes
billl [4:17 PM]
aren't you using cores as nodes?
163h is way too much -- they won't let you do that
how long does 1 sim take?
sergio [4:19 PM]
600 ms takes 227 ms, let me run a single sim with 800 ms in comet and see the duration
billl [4:19 PM]
1/4 second -- so very fast
and you can get 192 nodes?
so about 800 sims/sec
sergio [4:20 PM]
sorry not 227ms is 227 s
billl [4:20 PM]
oh that's a very big difference
why does it take so long?
what is your integrator?
sergio [4:21 PM]
how can i check the integrator?
billl [4:21 PM]
you have to set it -- salva -- how do you set in netpyne?
if you load you can check it on the gui
under tools i thik
salvadord [4:23 PM]
2500 sims each of 227 secs should run relatively fast, <1 day
he’s using 48 cores for each sim (2 nodes)
billl [4:23 PM]
but can use up to 192 he said
salvadord [4:23 PM]
you dont need to ask for the total nun of hours
billl [4:23 PM]
let's use nodes as MPI uses it -- so 192 nodes right?
salvadord [4:23 PM]
just walltime for each job which is <1 hour, so pretty low
billl [4:24 PM]
oh so not running under MPI?
salvadord [4:24 PM]
y running mpi
billl [4:24 PM]
or running the network under MPI but not the batch under MPI?
i'm confused
salvadord [4:24 PM]
each job uses 48 nodes
each sim
billl [4:24 PM]
a job is a single sim
salvadord [4:24 PM]
then run 2500 jobs — put them in queue
billl [4:24 PM]
so with 48 nodes it's taking 227sec
salvadord [4:24 PM]
comet has thoussands of nodes
so many jobs will run in parallel
y 48 nodes -> 227 sec
billl [4:25 PM]
oh so not using MPI for batch?  -- ok guess doesn't make any difference since PBS will take care of doing same thing MPI would do
salvadord [4:25 PM]
yes
billl [4:25 PM]
since embrassingly parallel
ok so let's run it sergio
hmm now i'm not sure why we ever used MPI for batches
some advantage?
guess sim organization -- stuff like saving inodes
salvadord [4:26 PM]
not sure, guess in our machines have to use mpi since dont have job scheduling system
billl [4:29 PM]
thought we had PBS (back when it worked)
sergio [4:29 PM]
8 nodes, 24 cores for node, total of 192 cores
billl [4:29 PM]
192 nodes
if using MPI
unless using threading??
sergio [4:30 PM]
not sure about threading, let me look for it
ok 192 nodes, 24 cores for node
salvadord [4:32 PM]
we had pbs in cluster (‘ma’) but dont think on neurosim?
you are asking for 8 nodes for each job sergio?
script u showed me before was 2 nodes I think
sergio [4:33 PM]
yep, I did show you that
salvadord [4:33 PM]
oh you changed it?
billl [4:33 PM]
why not ask for 192 nodes?
salvadord [4:33 PM]
I would suggest sticking with 2 nodes, 8 will take much longer in queue
and doesnt really make sense for such short jobs
billl [4:33 PM]
i'm still confused
what does `node` mean here?
salvadord [4:34 PM]
better to exploit parallelization at batch level, not indiv sim
node = 24 cores
supercomputer nodes
billl [4:34 PM]
mpiexec -n nodes
ok well i don't like that usage but fine let's talk now abot MPI -- what do you call the arg to -n ??
salvadord [4:34 PM]
mpi nodes = cores
billl [4:35 PM]
ok so we will want to ask for 2 nodes and do -n 16
is that what you are doing sergio?
salvadord [4:35 PM]
hpc nodes = 24 cores = 24 mpi nodes
billl [4:35 PM]
sorry -n 24
salvadord [4:35 PM]
you dont need to worry abou the -n 24 — netpyne generates script
billl [4:35 PM]
or does ... ah ok
so netpyne checks the machine it is running on and finds out how many cores are being made available?
salvadord [4:36 PM]
you just set: `'nodes': 2, 'coresPerNode': 24,` in batch.py
aah no I mean, just use that format
billl [4:36 PM]
ic so user needs to know that
ok so sergio -- you have that set properly?
salvadord [4:36 PM]
y
billl [4:36 PM]
k
salvadord [4:36 PM]
eg in stampede, nodes have 28 cores, so have to change
sergio [4:36 PM]
at the end, 2 nodes, 24 cores. right?
billl [4:37 PM]
paralleize single sim across 24 MPI nodes; how many cells are you running?
sergio [4:37 PM]
1500 cells
billl [4:37 PM]
using dt=0.025 with CN integrator?
surprised that this is running so slow
but so be it -- you can launch and then maybe try different integrators on our machines to see if that helps
how to set cvode in netpyne salva?
sergio [4:39 PM]
in the model, cfg.dt = 0.05
billl [4:39 PM]
what is cfg.integrator ?
sergio [4:40 PM]
I haven’t used this one
salvadord [4:40 PM]
can set cfg.cvode_active = true
for integrator I don’t have option in netpyne
billl [4:41 PM]
how about implicit vs CN? -- maybe not worth checking
anyway let's launch before the day runs out
salvadord [4:41 PM]
note part of the total time is gathering data from nodes and saving
billl [4:41 PM]
ah right so might actually benefit from 1 HPC node since then all together
for future consideration; anyway ready to push the button sergio?
sergio [4:43 PM]
yes, I just set cfg.cvode_active = true
salvadord [4:43 PM]
added this Python snippet: timing 

Running simulation for 600 ms...

 Done; run time = 143.50 s; real-time ratio: 0.00.

​

Gathering data...

 Done; gather time = 35.77 s.

billl [4:43 PM]
saving for 42s!! -- just for raster?
salvadord [4:44 PM]
I assume there are some traces
sergio [4:44 PM]
no, it is the json
billl [4:44 PM]
you have cvode_active?? why?
salvadord [4:44 PM]
and perhaps saving full net
billl [4:44 PM]
we need to turn off all that other saving
just save raster
sergio [4:44 PM]
now, saving 20 cells
billl [4:44 PM]
don't save any cells
right now we are still running small batches but we need to move towards big batches so let's figure out how to do this
cvode active?  why?  -- that's faster??
salvadord [4:45 PM]
here info on how to save less - https://www.neuron.yale.edu/phpBB/viewtopic.php?f=45&t=3770&sid=d39a00b1bb434b97ed57c4834786e8a1#p16122
saving 20 cells - u mean recording traces from 20 cells?
sergio [4:47 PM]
yes
billl [4:47 PM]
sergio are you using cvode active?
sergio [4:48 PM]
I just changed to ‘True’
billl [4:48 PM]
why?
sergio [4:49 PM]
salva’s suggestion
billl [4:49 PM]
oh? salva?  why?  - you tested?  don't tink sergio has tested
i don't see that he made suggestion here sergio?   let's keep conversation just here pleaes
else gets very confusing
since you haven't tested that sergio you can't use that
sergio [4:50 PM]
ok
billl [4:50 PM]
get rid of that
and get rid of the cell saving
and other json saving
just save the raster
as per that forum posting salva just showed you
salvadord [4:51 PM]
my suggestion? oh you mean right now in chat? it was bill’s suggestion
billl [4:52 PM]
not mine!
:)
anyway no one suggested taht sergio
i was asking you waht integrator you were using and why and your answer was that you didn't know
so i suggested that we should check that
but after we get the batch going
sergio [4:53 PM]
my misinterpretation
salvadord [4:53 PM]
added this Python snippet: cvode convo right now 

billl [4:37 PM]

using dt=0.025 with CN integrator?

surprised that this is running so slow

but so be it -- you can launch and then maybe try different integrators on our machines to see if that helps

how to set cvode in netpyne salva?

billl [4:53 PM]
np
"on our mahcines"
sergio [4:54 PM]
for the recording cells, just need add `cfg.recordCells = None` or and empty list?
billl [4:55 PM]
maybe run a quick very small example tstop=2ms 2x2 params on our macine just to make sure everything runs and saves just raster before you setoff this giant batch
sergio [4:55 PM]
ok
salvadord [4:59 PM]
y recordCells = None or False or empty list works, but also make sure you dont have `cfg.analysis.plotTraces`
and would also suggest: - set cfg.saveCellSecs=False -- removes all data on cell sections prior to gathering from nodes
- set cfg.saveCellConns=False -- removes all data on cell connections prior to gathering from nodes
sergio [4:59 PM]
sure
ok I did those
billl [5:00 PM]
works ok?
sergio [5:00 PM]
and set `cfg.gatherOnlySimData = True`
let me run the quick test in our machines
billl [5:02 PM]
k
salvadord [5:05 PM]
if leave `cfg.gatherOnlySimData = False` then faster to plot figs later
sergio [5:05 PM]
ok

*** batch test on zn 2x2, tstop=2 ms 

*** ran batch on comet

* 01-16-18

goal: check the batches on comet, and analysis

** batches in comet
batches ran overnight
downloading data to personal laptop and then to neurosim

** meeting with salva
*** 1) find net with reasonable rates and transient (not persistent) response
- Select from batch sim

*** 2) Quantify plateaus, to make sure Eact actually means something
-- joe has some code
-- quantify amplitude + duration
-- quantify % of cells with plateau
-- need to record voltage from all cells -- inc recordStep to 0.5?: 800 cells * 1000 * 2 = 1.6M 

*** 3) compare Esync (apical input) with and without Eact (basal input)
- Compare:
-- only inputs to basal -- get plateaus + some spikes (minimize spikes)
-- inputs to basal + apical simultaneously -- more spiking, more sync
-- input to basal first + then to apical (delay of 200ms) 

*** 4) Find control case with same amount of exc input but no plateau
-- eg. if spread inputs (not clustered) do not generate plateau
-- changing NMDA (taus) or other mech parameters to avoid plateau generation
-- use inh inputs to avoid getting plateau -- but keep same total input

** plan analize batch

*** checking batches raster plots
0030121
0100022
0101102
0101122
0110012
0110122
0111102
0111112
0200110
0310010
1100001
1100022
1100101
1100101
1101002
1101012
1101022
1101112
1101122
1102002
1102012
1200110
1200112

* 02-19-18

goal: analysis batches

** joe implementation of plateau measurements
*** fixing batch_utils path to direct import
on netParams.py:

try: 
  import batch_utils
except:
  curpath = os.getcwd()
  while os.path.split(curpath)[1] != "sim":
    curpath = os.path.split(curpath)[0]
  sys.path.append(curpath)
  import batch_utils

** batch analysis
*** sims to check
2031102
2100000
2100011
2101012
2101102
2102122
2132112
2200120
2212011
2232110
2302121
2312001
2322111

*** re-run sims from batch
created runsim file on multi_params:
script:
cd /u/sergioangulo/projects/sergeee/eee/sim/layersim/
mpiexec -np $numprocesses nrniv -python -mpi init.py simConfig=batch_data/multi_params/multi_params_0_0_0_0_0_0_0_cfg.json netParams=batch_data/multi_params/multi_params_netParams.py $@  # Run the model

*** run single sim
neurosim:
[[./gif/multi_params_0_0_0_0_0_0_0_raster_neurosim.png]]

comet:
[[./gif/multi_params_0_0_0_0_0_0_0_raster_comet.png]]

too different sims in 2 machines.

*** salva's advice
check versions of netpyne
run without gfluct

*** turning off gfluctp
test with noise:
[[./gif/network130_raster_test2.png]]

test without noise on zn:
[[./gif/network130_raster_test3_noNoise.png]]

test without noise on comet:
[[./gif/network130_raster_comet.png]]

gfluct is different in comet

*** comparing no noise from neurosim to comet
no noise neurosim
[[./gif/multi_params_0_0_3_0_1_2_1_raster_neurosim.png]]

comet with noise
[[./gif/multi_params_0_0_3_0_1_2_1_raster_comet.png]]

*** raster plot from neurosim
[[./gif/multi_params_1_1_0_2_0_1_2_raster.png]]
vinit_PT5: -65

e_exc_noise: 25.0 
e_inh_noise: -67.0 

e_exc and e_inh have values from vinit=-65 

*** running e_exc and e_inh values for vinit=-75
[[./gif/multi_params_1_2_0_0_1_1_0_raster_noiseamp07.png]]
e_exc_noise: 5.0 
e_inh_noise: -77.0 
noise_amp: 0.7 

[[./gif/multi_params_1_2_0_0_1_1_0_raster_noiseamp1.png]]
noise_amp: 1.0 

*** added line tu plot traces
"plotTraces": {
                "include": [
                    [
                        "PT5_1",
                        0
                    ]                   
                ],
                "saveFig": true
            }
[[

* 02-21-18

goals: re-check comet batch sim, 

** check if noise can be similar if equal number of cores
 
*** running 24 cores, one node in comet
no noise:
[[./gif/network130_traces_comet_noNoise.png]]
[[./gif/network130_raster_comet_noNoise.png]]

noise:
[[./gif/network130_traces_comet_noise.png]]
[[./gif/network130_raster_comet_noise.png]]

*** running 24 cores on zn
no noise:
[[./gif/network130_traces_test4_noNoise.png]]
[[./gif/network130_raster_test4_noNoise.png]]

noise:
[[./gif/network130_traces_test4_noise.png]]
[[./gif/network130_raster_test4_noise.png]]

same cores does not produce same output 


** meeting 
- MH explained NMDA calcium, sodium and K currents
- Penny presented sims of Rin at RMP and plateau

** discussion with salva
check if gfluctp is the same in comet

*** Gfluctp same file in both

*** try noise.py test 
single compartment cell
just noise 
last 20 volt values:

**** on neurosim:
-65.1368050069
-65.136888019
-65.1356957916
-65.1341544801
-65.1328513008
-65.1356125658
-65.1382047753
-65.1430751852
-65.1485583889
-65.1534093063
-65.1611157158
-65.1667661979
-65.1696976039
-65.1724458102
-65.1752362418
-65.1794354314
-65.182115459
-65.1827770227
-65.1817693612


**** on comet
-62.2477058633
-62.1757749847
-62.1035225165
-62.5109978718
-62.4402524686
-62.3691873785
-62.7785311062
-62.7090032017
-62.6391576342
-62.5689938384
-62.4985112588
-62.4277093494
-62.3565875739
-62.2851454062
-62.2133823111
-62.0329035507
-61.9600148698
-61.8868030872
-61.8132677251

*** nrnran123.c and nrnran123.h different in both systems

* 02-21-18

check batches

** salva discussion
ask subha about how to use NEURON 7.5 in comet

sent email to subha

** checking batch without noise
0020002
0020012*
0020022*
0020102
0020122
0021022
0021122*
0030002*
0030012*
0030021
0030022*
0030022
0030102
0030112
0030121
0030122
0031002
0031012
0031022
0031102*
0031122*
0100122
0101002
0101012
0101102
0110001
0110002
0110011
0110012*
0110022
0110102*
0110111*
0110112
0110122
0111002
0111011
0111012
0111102
0111112
0112101
0112102
0120000*
0120001
0120002
0120010*
0120011
0120012*
0120102
0120111
0120112
0121102
0130002*
0130012
0131102
0132001
0132100
0132101
0200102*
0200112
0201101*
0210000*
0210002*
0210010
0210101
0210102*
0211101*
0212001
0220000
0222001
0222101
0230000
0230101
0232001
0300000*
0300100*
0302101
0310000*
0310100*
0312000
0312001*
1020002*
1020012*
1020022*
1020102
1020112*
1020122*
1021122*
1030001 osc
1030002
1030012
1030021 osc
1030102
1030112
1031002
1031012
1031022
1031102*
1031112*
1031122*
1032022*
1032122*
1100021
1101102*
1110011*
1110111*
1111012
1111101
1111111
1111112
1112022
1112101
1112122*
1200102
1201101

* 02-22-18

goal check batches

** reply by subha and salva

*** subha

Hi Sergio,

From a quick glance it looks like you are using nrniv installed under
/home/lytton/arch/nrn/x86_64/bin. You would have to change that path to
point to NEURON7.5 install path which I am not sure if it is present under
lytton¹s directory. Maybe Salva knows about that?
We do have NEURON7.5 installed for NSG. You can submit jobs through the
portal if that's easier. You would need to compress the entire directory
which I think is /home/sangulo/projects/eee/sim/layersim (from your job
script) and upload to the portal. I am on travel and don't have my laptop
with me. I will be back at work on Friday and can help you more if you
have more questions.

Thanks,
Subha

*** salva
Thanks Subha. I think what we were thinking is using the NSG NEURON7.5 but via ssh, if thats possible. So would just need to know where that is located so can change the bashrc paths. Can wait until you are back on Friday.

thanks
salva

** batch sim
1210100*
1210102
2020012*
2020022*
2020102
2020112*
2020122
2030012 osc
2030022 osc
2030102*
2031002
2031021
2031122
2032022*
2032122
2110011
2110111
2111011
2201101
2210102
2302101
2312001

*** running 0020012
[[./gif/multi_params2_0_0_2_0_0_1_2_raster.png]]
prolonged activity

*** running 0021122
[[./gif/multi_params2_0_0_2_1_1_2_2_raster.png]]
prolonged activity

choose shorter activity

* 02-23-18

goal: select activity

** shorter activity
*** 0110012
[[./gif/multi_params2_0_1_1_0_0_1_2_raster.png]]
reduced activity

moved stim to 200ms
[[./gif/multi_params2_0_1_1_0_0_1_2_traces.png]]
[[./gif/multi_params2_0_1_1_0_0_1_2_raster_stim200.png]]

*** 0110102
[[./gif/multi_params2_0_1_1_0_1_0_2_traces.png]]
[[./gif/multi_params2_0_1_1_0_1_0_2_raster.png]]
nice plateau and duration

*** 0110111
[[./gif/multi_params2_0_1_1_0_1_1_1_traces.png]]
[[./gif/multi_params2_0_1_1_0_1_1_1_raster.png]]
small plateau, short activity

*** 0200102
[[./gif/multi_params2_0_2_0_0_1_0_2_traces.png]]
[[./gif/multi_params2_0_2_0_0_1_0_2_raster.png]]
nice plateau and duration

*** 0201101
[[./gif/multi_params2_0_2_0_1_1_0_1_traces.png]]
[[./gif/multi_params2_0_2_0_1_1_0_1_raster.png]]
nice plateau, longer tail

*** 0210002
[[./gif/multi_params2_0_2_1_0_0_0_2_traces.png]]
[[./gif/multi_params2_0_2_1_0_0_0_2_raster.png]]
less plateaus, and  activity

*** 0210102
[[./gif/multi_params2_0_2_1_0_1_0_2_traces.png]]
[[./gif/multi_params2_0_2_1_0_1_0_2_raster.png]]
less plateaus, and activity

*** 0211101
[[./gif/multi_params2_0_2_1_1_1_0_1_traces.png]]
[[./gif/multi_params2_0_2_1_1_1_0_1_raster.png]]
nice plateau

*** 030000
[[./gif/multi_params2_0_3_0_0_0_0_0_traces.png]]
[[./gif/multi_params2_0_3_0_0_0_0_0_raster.png]]
long tail without activity

*** 0312001
[[./gif/multi_params2_0_3_1_2_0_0_1_traces.png]]
[[./gif/multi_params2_0_3_1_2_0_0_1_raster.png]]
small plateaus, less activity

*** 1030012
[[./gif/multi_params2_1_0_3_0_0_1_2_traces.png]]
[[./gif/multi_params2_1_0_3_0_0_1_2_raster.png]]
nice plateau, long activity

*** 1030102
[[./gif/multi_params2_1_0_3_0_1_0_2_traces.png]]
[[./gif/multi_params2_1_0_3_0_1_0_2_raster.png]]
small plateau, persitent activity

*** 1101102
[[./gif/multi_params2_1_1_0_1_1_0_2_traces.png]]
[[./gif/multi_params2_1_1_0_1_1_0_2_raster.png]]
nice plateau, no super long activity

*** 1110011
[[./gif/multi_params2_1_1_1_0_0_1_1_traces.png]]
[[./gif/multi_params2_1_1_1_0_0_1_1_raster.png]]
small plateau, and long tail

*** 1110111
[[./gif/multi_params2_1_1_1_0_1_1_1_traces.png]]
[[./gif/multi_params2_1_1_1_0_1_1_1_raster.png]]
small plateau, long tail
 
*** 2302101
[[./gif/multi_params2_2_3_0_2_1_0_1_traces.png]]
[[./gif/multi_params2_2_3_0_2_1_0_1_raster.png]]
small plateau, long tail

** detecting dep block
*** joe's code on dev.py
vRange detection [-50,-10]

on 0110102:
21 cells with dep block detected.

checking traces, only gid 947
[[./gif/network130_traces_gid_947.png]]

*** change range detection
range: [-40,-10]

3 cells detected:
[u'cell_239', u'cell_306', u'cell_947']
 
then tried: 
minSamples=120, vRange=[-35, 0]
and detected same cells

** detect plateaus
*** same idea as joe diff params
minSamples=350, vRange=[-62, -45]
92 plateaus
23%

* 02-26-18

goal: explore batches outcome
 
** check different params 
*** 0200102
network131
[[./gif/network131_raster.png]]
dep block, 1 cells
['cell_947']
plateau, 11 cells, 2.75%
['cell_221', 'cell_291', 'cell_304', 'cell_447', 'cell_466', 'cell_552', 'cell_789', 'cell_842', 'cell_853', 'cell_868', 'cell_956']

**** modified range for plateau 
vRange=[-65, -45]
Number of plateau cells: 55
Percent of plateau cells: 13.75%
Plateau cells:
['cell_203', 'cell_210', 'cell_221', 'cell_233', 'cell_239', 'cell_291', 'cell_292', 'cell_294', 'cell_296', 'cell_304', 'cell_364', 'cell_365', 'cell_372', 'cell_447', 'cell_448', 'cell_466', 'cell_520', 'cell_524', 'cell_535', 'cell_540', 'cell_545', 'cell_552', 'cell_558', 'cell_608', 'cell_618', 'cell_619', 'cell_632', 'cell_766', 'cell_776', 'cell_777', 'cell_786', 'cell_789', 'cell_794', 'cell_797', 'cell_805', 'cell_842', 'cell_847', 'cell_849', 'cell_853', 'cell_857', 'cell_865', 'cell_867', 'cell_868', 'cell_877', 'cell_920', 'cell_923', 'cell_931', 'cell_932', 'cell_936', 'cell_938', 'cell_939', 'cell_947', 'cell_951', 'cell_954', 'cell_956']

*** 0110111 
network132
[[./gif/network132_raster.png]]
vRange=[-65, -45]
Number of Depol Block cells: 3
Depol block cells:
['cell_282', 'cell_306', 'cell_947']
Number of plateau cells: 261
Percent of plateau cells: 65.25%
['cell_200', 'cell_201', 'cell_202', 'cell_203', 'cell_205', 'cell_207', 'cell_209', 'cell_210', 'cell_211', 'cell_212', 'cell_215', 'cell_216', 'cell_217', 'cell_219', 'cell_221', 'cell_223', 'cell_224', 'cell_225', 'cell_226', 'cell_228', 'cell_231', 'cell_233', 'cell_237', 'cell_239', 'cell_282', 'cell_283', 'cell_287', 'cell_289', 'cell_290', 'cell_291', 'cell_292', 'cell_293', 'cell_296', 'cell_298', 'cell_299', 'cell_300', 'cell_301', 'cell_302', 'cell_303', 'cell_304', 'cell_305', 'cell_306', 'cell_308', 'cell_310', 'cell_311', 'cell_313', 'cell_314', 'cell_315', 'cell_316', 'cell_317', 'cell_360', 'cell_362', 'cell_363', 'cell_366', 'cell_367', 'cell_368', 'cell_369', 'cell_370', 'cell_371', 'cell_372', 'cell_373', 'cell_374', 'cell_375', 'cell_376', 'cell_377', 'cell_382', 'cell_383', 'cell_385', 'cell_387', 'cell_388', 'cell_392', 'cell_396', 'cell_397', 'cell_441', 'cell_442', 'cell_447', 'cell_448', 'cell_449', 'cell_451', 'cell_452', 'cell_453', 'cell_454', 'cell_456', 'cell_458', 'cell_460', 'cell_462', 'cell_463', 'cell_464', 'cell_466', 'cell_467', 'cell_468', 'cell_471', 'cell_472', 'cell_474', 'cell_478', 'cell_520', 'cell_521', 'cell_522', 'cell_523', 'cell_524', 'cell_525', 'cell_526', 'cell_528', 'cell_529', 'cell_530', 'cell_531', 'cell_533', 'cell_538', 'cell_539', 'cell_540', 'cell_541', 'cell_542', 'cell_543', 'cell_544', 'cell_545', 'cell_549', 'cell_550', 'cell_551', 'cell_553', 'cell_554', 'cell_557', 'cell_558', 'cell_601', 'cell_602', 'cell_603', 'cell_605', 'cell_607', 'cell_608', 'cell_610', 'cell_613', 'cell_618', 'cell_619', 'cell_620', 'cell_621', 'cell_622', 'cell_623', 'cell_624', 'cell_626', 'cell_628', 'cell_630', 'cell_631', 'cell_632', 'cell_633', 'cell_634', 'cell_635', 'cell_636', 'cell_637', 'cell_639', 'cell_681', 'cell_682', 'cell_683', 'cell_684', 'cell_686', 'cell_687', 'cell_689', 'cell_691', 'cell_692', 'cell_693', 'cell_694', 'cell_698', 'cell_700', 'cell_701', 'cell_702', 'cell_704', 'cell_705', 'cell_707', 'cell_708', 'cell_709', 'cell_710', 'cell_711', 'cell_713', 'cell_716', 'cell_719', 'cell_761', 'cell_763', 'cell_764', 'cell_766', 'cell_768', 'cell_769', 'cell_770', 'cell_773', 'cell_774', 'cell_775', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_784', 'cell_786', 'cell_787', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_793', 'cell_794', 'cell_795', 'cell_797', 'cell_798', 'cell_805', 'cell_840', 'cell_842', 'cell_843', 'cell_844', 'cell_846', 'cell_848', 'cell_849', 'cell_850', 'cell_851', 'cell_852', 'cell_853', 'cell_854', 'cell_855', 'cell_857', 'cell_859', 'cell_860', 'cell_861', 'cell_862', 'cell_865', 'cell_866', 'cell_867', 'cell_868', 'cell_870', 'cell_872', 'cell_874', 'cell_875', 'cell_876', 'cell_879', 'cell_921', 'cell_922', 'cell_923', 'cell_924', 'cell_925', 'cell_926', 'cell_927', 'cell_929', 'cell_930', 'cell_931', 'cell_932', 'cell_934', 'cell_935', 'cell_936', 'cell_938', 'cell_939', 'cell_940', 'cell_941', 'cell_943', 'cell_944', 'cell_947', 'cell_948', 'cell_949', 'cell_950', 'cell_951', 'cell_952', 'cell_953', 'cell_956', 'cell_957', 'cell_958', 'cell_959', 'cell_973']
longer activity

*** 0201101
network133
[[./gif/network133_raster.png]]
vRange=[-65, -45]
Number of Depol Block cells: 5
Depol block cells:
['cell_239', 'cell_282', 'cell_466', 'cell_923', 'cell_947']
Number of plateau cells: 200
Percent of plateau cells: 50.0%
Plateau cells:
['cell_200', 'cell_201', 'cell_202', 'cell_203', 'cell_205', 'cell_207', 'cell_208', 'cell_210', 'cell_211', 'cell_212', 'cell_215', 'cell_216', 'cell_217', 'cell_218', 'cell_219', 'cell_221', 'cell_225', 'cell_231', 'cell_232', 'cell_233', 'cell_239', 'cell_283', 'cell_286', 'cell_287', 'cell_288', 'cell_290', 'cell_292', 'cell_293', 'cell_294', 'cell_296', 'cell_299', 'cell_300', 'cell_301', 'cell_304', 'cell_305', 'cell_306', 'cell_307', 'cell_308', 'cell_309', 'cell_312', 'cell_313', 'cell_314', 'cell_318', 'cell_360', 'cell_363', 'cell_364', 'cell_365', 'cell_366', 'cell_368', 'cell_369', 'cell_370', 'cell_371', 'cell_372', 'cell_373', 'cell_374', 'cell_375', 'cell_383', 'cell_388', 'cell_389', 'cell_396', 'cell_397', 'cell_444', 'cell_445', 'cell_447', 'cell_448', 'cell_450', 'cell_451', 'cell_452', 'cell_455', 'cell_462', 'cell_463', 'cell_464', 'cell_467', 'cell_468', 'cell_469', 'cell_471', 'cell_472', 'cell_476', 'cell_478', 'cell_520', 'cell_521', 'cell_522', 'cell_524', 'cell_526', 'cell_528', 'cell_532', 'cell_534', 'cell_535', 'cell_538', 'cell_539', 'cell_540', 'cell_545', 'cell_546', 'cell_551', 'cell_553', 'cell_557', 'cell_558', 'cell_604', 'cell_605', 'cell_607', 'cell_608', 'cell_610', 'cell_611', 'cell_612', 'cell_614', 'cell_617', 'cell_618', 'cell_619', 'cell_620', 'cell_621', 'cell_623', 'cell_624', 'cell_628', 'cell_629', 'cell_630', 'cell_631', 'cell_632', 'cell_633', 'cell_634', 'cell_635', 'cell_636', 'cell_639', 'cell_681', 'cell_684', 'cell_685', 'cell_689', 'cell_691', 'cell_692', 'cell_693', 'cell_694', 'cell_700', 'cell_702', 'cell_704', 'cell_705', 'cell_708', 'cell_709', 'cell_710', 'cell_711', 'cell_715', 'cell_762', 'cell_763', 'cell_764', 'cell_766', 'cell_768', 'cell_773', 'cell_774', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_784', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_794', 'cell_797', 'cell_798', 'cell_805', 'cell_841', 'cell_842', 'cell_846', 'cell_849', 'cell_850', 'cell_853', 'cell_857', 'cell_858', 'cell_859', 'cell_860', 'cell_861', 'cell_862', 'cell_865', 'cell_867', 'cell_868', 'cell_870', 'cell_872', 'cell_875', 'cell_876', 'cell_920', 'cell_921', 'cell_923', 'cell_926', 'cell_930', 'cell_931', 'cell_932', 'cell_934', 'cell_936', 'cell_938', 'cell_939', 'cell_943', 'cell_944', 'cell_947', 'cell_951', 'cell_952', 'cell_953', 'cell_954', 'cell_955', 'cell_956', 'cell_959']

*** 1110111
network134
[[./gif/network134_raster.png]]
vRange=[-65, -45]
Number of Depol Block cells: 3
Depol block cells:
['cell_282', 'cell_306', 'cell_947']
Number of plateau cells: 261
Percent of plateau cells: 65.25%
Plateau cells:
['cell_200', 'cell_201', 'cell_202', 'cell_203', 'cell_205', 'cell_207', 'cell_209', 'cell_210', 'cell_211', 'cell_212', 'cell_215', 'cell_216', 'cell_217', 'cell_219', 'cell_221', 'cell_223', 'cell_224', 'cell_225', 'cell_226', 'cell_228', 'cell_231', 'cell_233', 'cell_237', 'cell_239', 'cell_282', 'cell_283', 'cell_287', 'cell_289', 'cell_290', 'cell_291', 'cell_292', 'cell_293', 'cell_296', 'cell_298', 'cell_299', 'cell_300', 'cell_301', 'cell_302', 'cell_303', 'cell_304', 'cell_305', 'cell_306', 'cell_308', 'cell_310', 'cell_311', 'cell_313', 'cell_314', 'cell_315', 'cell_316', 'cell_317', 'cell_360', 'cell_362', 'cell_363', 'cell_366', 'cell_367', 'cell_368', 'cell_369', 'cell_370', 'cell_371', 'cell_372', 'cell_373', 'cell_374', 'cell_375', 'cell_376', 'cell_377', 'cell_382', 'cell_383', 'cell_385', 'cell_387', 'cell_388', 'cell_392', 'cell_396', 'cell_397', 'cell_441', 'cell_442', 'cell_447', 'cell_448', 'cell_449', 'cell_451', 'cell_452', 'cell_453', 'cell_454', 'cell_456', 'cell_458', 'cell_460', 'cell_462', 'cell_463', 'cell_464', 'cell_466', 'cell_467', 'cell_468', 'cell_471', 'cell_472', 'cell_474', 'cell_478', 'cell_520', 'cell_521', 'cell_522', 'cell_523', 'cell_524', 'cell_525', 'cell_526', 'cell_528', 'cell_529', 'cell_530', 'cell_531', 'cell_533', 'cell_538', 'cell_539', 'cell_540', 'cell_541', 'cell_542', 'cell_543', 'cell_544', 'cell_545', 'cell_549', 'cell_550', 'cell_551', 'cell_553', 'cell_554', 'cell_557', 'cell_558', 'cell_601', 'cell_602', 'cell_603', 'cell_605', 'cell_607', 'cell_608', 'cell_610', 'cell_613', 'cell_618', 'cell_619', 'cell_620', 'cell_621', 'cell_622', 'cell_623', 'cell_624', 'cell_626', 'cell_628', 'cell_630', 'cell_631', 'cell_632', 'cell_633', 'cell_634', 'cell_635', 'cell_636', 'cell_637', 'cell_639', 'cell_681', 'cell_682', 'cell_683', 'cell_684', 'cell_686', 'cell_687', 'cell_689', 'cell_691', 'cell_692', 'cell_693', 'cell_694', 'cell_698', 'cell_700', 'cell_701', 'cell_702', 'cell_704', 'cell_705', 'cell_707', 'cell_708', 'cell_709', 'cell_710', 'cell_711', 'cell_713', 'cell_716', 'cell_719', 'cell_761', 'cell_763', 'cell_764', 'cell_766', 'cell_768', 'cell_769', 'cell_770', 'cell_773', 'cell_774', 'cell_775', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_784', 'cell_786', 'cell_787', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_793', 'cell_794', 'cell_795', 'cell_797', 'cell_798', 'cell_805', 'cell_840', 'cell_842', 'cell_843', 'cell_844', 'cell_846', 'cell_848', 'cell_849', 'cell_850', 'cell_851', 'cell_852', 'cell_853', 'cell_854', 'cell_855', 'cell_857', 'cell_859', 'cell_860', 'cell_861', 'cell_862', 'cell_865', 'cell_866', 'cell_867', 'cell_868', 'cell_870', 'cell_872', 'cell_874', 'cell_875', 'cell_876', 'cell_879', 'cell_921', 'cell_922', 'cell_923', 'cell_924', 'cell_925', 'cell_926', 'cell_927', 'cell_929', 'cell_930', 'cell_931', 'cell_932', 'cell_934', 'cell_935', 'cell_936', 'cell_938', 'cell_939', 'cell_940', 'cell_941', 'cell_943', 'cell_944', 'cell_947', 'cell_948', 'cell_949', 'cell_950', 'cell_951', 'cell_952', 'cell_953', 'cell_956', 'cell_957', 'cell_958', 'cell_959', 'cell_973']

*** 1101102 
network135
[[./gif/network135_raster.png]]
Number of Depol Block cells: 6
Depol block cells:
['cell_239', 'cell_282', 'cell_306', 'cell_466', 'cell_923', 'cell_947']
Number of plateau cells: 224
Percent of plateau cells: 56.0%
Plateau cells:
['cell_200', 'cell_201', 'cell_202', 'cell_203', 'cell_207', 'cell_208', 'cell_210', 'cell_211', 'cell_212', 'cell_214', 'cell_215', 'cell_216', 'cell_217', 'cell_218', 'cell_219', 'cell_221', 'cell_223', 'cell_224', 'cell_225', 'cell_228', 'cell_231', 'cell_232', 'cell_233', 'cell_239', 'cell_282', 'cell_283', 'cell_284', 'cell_286', 'cell_287', 'cell_290', 'cell_291', 'cell_295', 'cell_296', 'cell_298', 'cell_299', 'cell_301', 'cell_303', 'cell_304', 'cell_305', 'cell_306', 'cell_307', 'cell_308', 'cell_311', 'cell_312', 'cell_313', 'cell_314', 'cell_318', 'cell_360', 'cell_362', 'cell_363', 'cell_366', 'cell_367', 'cell_368', 'cell_370', 'cell_371', 'cell_373', 'cell_374', 'cell_375', 'cell_376', 'cell_377', 'cell_382', 'cell_385', 'cell_387', 'cell_389', 'cell_392', 'cell_395', 'cell_396', 'cell_397', 'cell_444', 'cell_447', 'cell_448', 'cell_451', 'cell_452', 'cell_453', 'cell_458', 'cell_462', 'cell_463', 'cell_464', 'cell_467', 'cell_468', 'cell_471', 'cell_472', 'cell_474', 'cell_475', 'cell_478', 'cell_520', 'cell_521', 'cell_522', 'cell_524', 'cell_529', 'cell_531', 'cell_533', 'cell_537', 'cell_538', 'cell_539', 'cell_540', 'cell_543', 'cell_544', 'cell_545', 'cell_548', 'cell_549', 'cell_551', 'cell_553', 'cell_554', 'cell_556', 'cell_557', 'cell_558', 'cell_600', 'cell_602', 'cell_603', 'cell_605', 'cell_607', 'cell_608', 'cell_609', 'cell_610', 'cell_612', 'cell_613', 'cell_614', 'cell_617', 'cell_618', 'cell_621', 'cell_622', 'cell_624', 'cell_626', 'cell_628', 'cell_630', 'cell_631', 'cell_632', 'cell_633', 'cell_634', 'cell_635', 'cell_636', 'cell_639', 'cell_681', 'cell_682', 'cell_683', 'cell_684', 'cell_685', 'cell_686', 'cell_689', 'cell_691', 'cell_692', 'cell_693', 'cell_694', 'cell_698', 'cell_700', 'cell_702', 'cell_705', 'cell_706', 'cell_707', 'cell_708', 'cell_709', 'cell_710', 'cell_711', 'cell_718', 'cell_719', 'cell_761', 'cell_762', 'cell_763', 'cell_764', 'cell_768', 'cell_769', 'cell_773', 'cell_774', 'cell_775', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_783', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_794', 'cell_795', 'cell_797', 'cell_798', 'cell_799', 'cell_805', 'cell_840', 'cell_841', 'cell_842', 'cell_843', 'cell_846', 'cell_849', 'cell_850', 'cell_853', 'cell_854', 'cell_858', 'cell_860', 'cell_861', 'cell_862', 'cell_864', 'cell_865', 'cell_866', 'cell_867', 'cell_868', 'cell_870', 'cell_872', 'cell_874', 'cell_875', 'cell_876', 'cell_877', 'cell_879', 'cell_920', 'cell_921', 'cell_929', 'cell_931', 'cell_932', 'cell_934', 'cell_936', 'cell_938', 'cell_939', 'cell_940', 'cell_943', 'cell_944', 'cell_945', 'cell_952', 'cell_953', 'cell_954', 'cell_956', 'cell_959']

*** 0211101
network136
[[./gif/network136_raster.png]]
Number of Depol Block cells: 1
Depol block cells:
['cell_239']
Number of plateau cells: 182
Percent of plateau cells: 45.5%
Plateau cells:
['cell_200', 'cell_201', 'cell_203', 'cell_205', 'cell_207', 'cell_208', 'cell_210', 'cell_211', 'cell_212', 'cell_215', 'cell_216', 'cell_217', 'cell_218', 'cell_219', 'cell_221', 'cell_225', 'cell_231', 'cell_233', 'cell_238', 'cell_239', 'cell_283', 'cell_287', 'cell_288', 'cell_290', 'cell_292', 'cell_293', 'cell_294', 'cell_296', 'cell_301', 'cell_304', 'cell_305', 'cell_306', 'cell_308', 'cell_309', 'cell_313', 'cell_314', 'cell_360', 'cell_365', 'cell_366', 'cell_368', 'cell_369', 'cell_370', 'cell_371', 'cell_372', 'cell_373', 'cell_374', 'cell_375', 'cell_386', 'cell_388', 'cell_389', 'cell_396', 'cell_397', 'cell_444', 'cell_445', 'cell_447', 'cell_448', 'cell_450', 'cell_451', 'cell_452', 'cell_454', 'cell_458', 'cell_468', 'cell_471', 'cell_472', 'cell_476', 'cell_478', 'cell_520', 'cell_522', 'cell_524', 'cell_528', 'cell_529', 'cell_532', 'cell_533', 'cell_535', 'cell_538', 'cell_539', 'cell_545', 'cell_546', 'cell_548', 'cell_549', 'cell_551', 'cell_558', 'cell_604', 'cell_605', 'cell_607', 'cell_608', 'cell_610', 'cell_611', 'cell_612', 'cell_613', 'cell_614', 'cell_617', 'cell_618', 'cell_619', 'cell_620', 'cell_621', 'cell_623', 'cell_624', 'cell_628', 'cell_629', 'cell_630', 'cell_632', 'cell_635', 'cell_636', 'cell_681', 'cell_682', 'cell_684', 'cell_685', 'cell_689', 'cell_694', 'cell_700', 'cell_702', 'cell_705', 'cell_707', 'cell_708', 'cell_709', 'cell_710', 'cell_716', 'cell_761', 'cell_762', 'cell_763', 'cell_766', 'cell_768', 'cell_773', 'cell_774', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_784', 'cell_786', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_794', 'cell_796', 'cell_797', 'cell_798', 'cell_805', 'cell_842', 'cell_846', 'cell_847', 'cell_849', 'cell_850', 'cell_852', 'cell_853', 'cell_855', 'cell_857', 'cell_858', 'cell_859', 'cell_860', 'cell_861', 'cell_862', 'cell_865', 'cell_867', 'cell_868', 'cell_869', 'cell_870', 'cell_872', 'cell_876', 'cell_921', 'cell_926', 'cell_928', 'cell_929', 'cell_930', 'cell_931', 'cell_932', 'cell_936', 'cell_938', 'cell_939', 'cell_943', 'cell_944', 'cell_946', 'cell_947', 'cell_951', 'cell_952', 'cell_953', 'cell_955', 'cell_956', 'cell_959']

*** 0210002
network137
[[./gif/network137_raster.png]]
Number of Depol Block cells: 0
Depol block cells:
[]
Number of plateau cells: 122
Percent of plateau cells: 30.5%
Plateau cells:
['cell_201', 'cell_203', 'cell_209', 'cell_210', 'cell_215', 'cell_216', 'cell_218', 'cell_221', 'cell_231', 'cell_239', 'cell_282', 'cell_283', 'cell_288', 'cell_291', 'cell_292', 'cell_294', 'cell_296', 'cell_304', 'cell_306', 'cell_308', 'cell_313', 'cell_365', 'cell_366', 'cell_368', 'cell_369', 'cell_372', 'cell_373', 'cell_376', 'cell_386', 'cell_387', 'cell_398', 'cell_399', 'cell_409', 'cell_412', 'cell_421', 'cell_428', 'cell_430', 'cell_447', 'cell_448', 'cell_450', 'cell_451', 'cell_455', 'cell_463', 'cell_466', 'cell_476', 'cell_482', 'cell_487', 'cell_489', 'cell_499', 'cell_511', 'cell_520', 'cell_524', 'cell_529', 'cell_535', 'cell_540', 'cell_542', 'cell_545', 'cell_546', 'cell_552', 'cell_554', 'cell_558', 'cell_559', 'cell_605', 'cell_608', 'cell_617', 'cell_618', 'cell_619', 'cell_620', 'cell_624', 'cell_632', 'cell_633', 'cell_653', 'cell_672', 'cell_674', 'cell_684', 'cell_700', 'cell_704', 'cell_708', 'cell_716', 'cell_741', 'cell_760', 'cell_766', 'cell_769', 'cell_772', 'cell_776', 'cell_777', 'cell_781', 'cell_783', 'cell_784', 'cell_786', 'cell_789', 'cell_794', 'cell_797', 'cell_811', 'cell_812', 'cell_823', 'cell_842', 'cell_847', 'cell_849', 'cell_850', 'cell_853', 'cell_855', 'cell_857', 'cell_868', 'cell_874', 'cell_875', 'cell_877', 'cell_915', 'cell_923', 'cell_929', 'cell_931', 'cell_932', 'cell_936', 'cell_937', 'cell_938', 'cell_946', 'cell_947', 'cell_951', 'cell_952', 'cell_954', 'cell_975', 'cell_976']

*** 0110012
network138
[[./gif/network138_raster.png]]
Number of Depol Block cells: 0
Depol block cells:
[]
Number of plateau cells: 297
Percent of plateau cells: 74.25%
Plateau cells:
['cell_201', 'cell_202', 'cell_203', 'cell_205', 'cell_208', 'cell_209', 'cell_210', 'cell_211', 'cell_212', 'cell_215', 'cell_216', 'cell_217', 'cell_218', 'cell_219', 'cell_221', 'cell_224', 'cell_225', 'cell_226', 'cell_228', 'cell_231', 'cell_233', 'cell_238', 'cell_239', 'cell_283', 'cell_284', 'cell_286', 'cell_287', 'cell_290', 'cell_291', 'cell_292', 'cell_293', 'cell_296', 'cell_298', 'cell_299', 'cell_300', 'cell_301', 'cell_302', 'cell_303', 'cell_304', 'cell_305', 'cell_306', 'cell_308', 'cell_309', 'cell_311', 'cell_312', 'cell_313', 'cell_314', 'cell_316', 'cell_319', 'cell_321', 'cell_360', 'cell_362', 'cell_363', 'cell_364', 'cell_365', 'cell_366', 'cell_367', 'cell_368', 'cell_369', 'cell_370', 'cell_371', 'cell_372', 'cell_373', 'cell_375', 'cell_376', 'cell_382', 'cell_383', 'cell_385', 'cell_388', 'cell_389', 'cell_393', 'cell_396', 'cell_397', 'cell_398', 'cell_399', 'cell_409', 'cell_412', 'cell_414', 'cell_428', 'cell_430', 'cell_444', 'cell_445', 'cell_447', 'cell_448', 'cell_449', 'cell_450', 'cell_451', 'cell_452', 'cell_453', 'cell_454', 'cell_455', 'cell_456', 'cell_458', 'cell_459', 'cell_460', 'cell_461', 'cell_462', 'cell_463', 'cell_465', 'cell_466', 'cell_467', 'cell_468', 'cell_469', 'cell_470', 'cell_471', 'cell_472', 'cell_475', 'cell_476', 'cell_478', 'cell_482', 'cell_487', 'cell_489', 'cell_499', 'cell_511', 'cell_520', 'cell_521', 'cell_522', 'cell_523', 'cell_524', 'cell_525', 'cell_527', 'cell_528', 'cell_529', 'cell_532', 'cell_534', 'cell_535', 'cell_537', 'cell_538', 'cell_539', 'cell_540', 'cell_542', 'cell_545', 'cell_546', 'cell_550', 'cell_551', 'cell_552', 'cell_553', 'cell_554', 'cell_557', 'cell_558', 'cell_574', 'cell_600', 'cell_601', 'cell_602', 'cell_603', 'cell_605', 'cell_608', 'cell_609', 'cell_611', 'cell_612', 'cell_617', 'cell_618', 'cell_619', 'cell_620', 'cell_621', 'cell_623', 'cell_624', 'cell_626', 'cell_628', 'cell_629', 'cell_630', 'cell_631', 'cell_632', 'cell_633', 'cell_634', 'cell_635', 'cell_636', 'cell_637', 'cell_638', 'cell_639', 'cell_646', 'cell_653', 'cell_674', 'cell_681', 'cell_682', 'cell_683', 'cell_684', 'cell_685', 'cell_686', 'cell_687', 'cell_689', 'cell_690', 'cell_691', 'cell_692', 'cell_693', 'cell_694', 'cell_698', 'cell_700', 'cell_701', 'cell_702', 'cell_704', 'cell_705', 'cell_707', 'cell_708', 'cell_709', 'cell_710', 'cell_711', 'cell_713', 'cell_714', 'cell_715', 'cell_716', 'cell_719', 'cell_741', 'cell_760', 'cell_761', 'cell_762', 'cell_763', 'cell_764', 'cell_766', 'cell_767', 'cell_768', 'cell_769', 'cell_772', 'cell_773', 'cell_774', 'cell_775', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_783', 'cell_784', 'cell_786', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_795', 'cell_796', 'cell_797', 'cell_798', 'cell_811', 'cell_812', 'cell_823', 'cell_841', 'cell_842', 'cell_843', 'cell_844', 'cell_846', 'cell_848', 'cell_849', 'cell_850', 'cell_852', 'cell_853', 'cell_854', 'cell_855', 'cell_857', 'cell_860', 'cell_861', 'cell_862', 'cell_863', 'cell_865', 'cell_867', 'cell_868', 'cell_870', 'cell_871', 'cell_872', 'cell_874', 'cell_875', 'cell_876', 'cell_877', 'cell_878', 'cell_879', 'cell_899', 'cell_915', 'cell_916', 'cell_921', 'cell_922', 'cell_923', 'cell_924', 'cell_925', 'cell_929', 'cell_931', 'cell_932', 'cell_934', 'cell_935', 'cell_936', 'cell_937', 'cell_938', 'cell_939', 'cell_940', 'cell_943', 'cell_944', 'cell_946', 'cell_947', 'cell_948', 'cell_949', 'cell_951', 'cell_952', 'cell_953', 'cell_956', 'cell_957', 'cell_959', 'cell_973', 'cell_975', 'cell_976']

*** 0110112
network139
[[./gif/network139_raster.png]]
Number of Depol Block cells: 3
Depol block cells:
['cell_306', 'cell_466', 'cell_947']
Number of plateau cells: 136
Percent of plateau cells: 34.0%
Plateau cells:
['cell_200', 'cell_201', 'cell_203', 'cell_210', 'cell_211', 'cell_212', 'cell_215', 'cell_216', 'cell_217', 'cell_218', 'cell_219', 'cell_221', 'cell_231', 'cell_233', 'cell_238', 'cell_239', 'cell_291', 'cell_296', 'cell_301', 'cell_303', 'cell_304', 'cell_306', 'cell_308', 'cell_314', 'cell_360', 'cell_363', 'cell_365', 'cell_366', 'cell_368', 'cell_369', 'cell_370', 'cell_371', 'cell_372', 'cell_374', 'cell_375', 'cell_385', 'cell_388', 'cell_396', 'cell_445', 'cell_447', 'cell_448', 'cell_450', 'cell_451', 'cell_458', 'cell_466', 'cell_468', 'cell_471', 'cell_472', 'cell_478', 'cell_524', 'cell_526', 'cell_528', 'cell_529', 'cell_537', 'cell_538', 'cell_539', 'cell_545', 'cell_546', 'cell_553', 'cell_554', 'cell_558', 'cell_604', 'cell_605', 'cell_608', 'cell_612', 'cell_614', 'cell_617', 'cell_619', 'cell_620', 'cell_621', 'cell_624', 'cell_629', 'cell_630', 'cell_632', 'cell_634', 'cell_635', 'cell_636', 'cell_681', 'cell_683', 'cell_684', 'cell_686', 'cell_689', 'cell_694', 'cell_702', 'cell_709', 'cell_710', 'cell_761', 'cell_769', 'cell_774', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_784', 'cell_786', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_794', 'cell_797', 'cell_798', 'cell_805', 'cell_842', 'cell_846', 'cell_847', 'cell_849', 'cell_850', 'cell_853', 'cell_855', 'cell_857', 'cell_858', 'cell_860', 'cell_861', 'cell_862', 'cell_865', 'cell_867', 'cell_868', 'cell_870', 'cell_872', 'cell_874', 'cell_875', 'cell_923', 'cell_931', 'cell_934', 'cell_936', 'cell_938', 'cell_939', 'cell_943', 'cell_944', 'cell_946', 'cell_947', 'cell_953', 'cell_956', 'cell_959']

*** 0110102
network140
[[./gif/network140_raster.png]]
Number of Depol Block cells: 2
Depol block cells:
['cell_306', 'cell_947']
Number of plateau cells: 155
Percent of plateau cells: 38.75%
Plateau cells:
['cell_201', 'cell_203', 'cell_208', 'cell_210', 'cell_211', 'cell_212', 'cell_215', 'cell_216', 'cell_217', 'cell_218', 'cell_219', 'cell_221', 'cell_231', 'cell_233', 'cell_238', 'cell_239', 'cell_282', 'cell_286', 'cell_291', 'cell_296', 'cell_299', 'cell_301', 'cell_303', 'cell_304', 'cell_306', 'cell_308', 'cell_311', 'cell_312', 'cell_313', 'cell_314', 'cell_316', 'cell_360', 'cell_365', 'cell_366', 'cell_368', 'cell_369', 'cell_370', 'cell_371', 'cell_372', 'cell_373', 'cell_374', 'cell_375', 'cell_388', 'cell_396', 'cell_397', 'cell_447', 'cell_448', 'cell_450', 'cell_451', 'cell_458', 'cell_466', 'cell_468', 'cell_471', 'cell_472', 'cell_474', 'cell_478', 'cell_520', 'cell_524', 'cell_526', 'cell_528', 'cell_529', 'cell_538', 'cell_539', 'cell_540', 'cell_546', 'cell_549', 'cell_552', 'cell_553', 'cell_554', 'cell_558', 'cell_605', 'cell_607', 'cell_608', 'cell_611', 'cell_612', 'cell_614', 'cell_617', 'cell_619', 'cell_620', 'cell_621', 'cell_624', 'cell_628', 'cell_629', 'cell_630', 'cell_632', 'cell_634', 'cell_635', 'cell_636', 'cell_681', 'cell_683', 'cell_684', 'cell_686', 'cell_689', 'cell_700', 'cell_702', 'cell_708', 'cell_709', 'cell_710', 'cell_711', 'cell_719', 'cell_761', 'cell_762', 'cell_763', 'cell_769', 'cell_773', 'cell_774', 'cell_776', 'cell_777', 'cell_780', 'cell_781', 'cell_782', 'cell_784', 'cell_786', 'cell_788', 'cell_789', 'cell_790', 'cell_792', 'cell_794', 'cell_797', 'cell_798', 'cell_805', 'cell_846', 'cell_847', 'cell_849', 'cell_850', 'cell_853', 'cell_854', 'cell_855', 'cell_857', 'cell_860', 'cell_861', 'cell_862', 'cell_865', 'cell_867', 'cell_868', 'cell_870', 'cell_872', 'cell_874', 'cell_875', 'cell_876', 'cell_879', 'cell_923', 'cell_930', 'cell_931', 'cell_934', 'cell_936', 'cell_938', 'cell_939', 'cell_940', 'cell_943', 'cell_944', 'cell_946', 'cell_947', 'cell_953', 'cell_956']

*** best sims  0110102 0110111 1101102 

** joe's detection of plateaus
batch_analysis.meas_trace_plat_amp()
batch_analysis.meas_trace_plat_dur()

Joe is trying to work in the analysis

** comet solved noise
using NEURON7.5 produce same noise
 
*** noise test
-65.1368050069
-65.136888019
-65.1356957916
-65.1341544801
-65.1328513008
-65.1356125658
-65.1382047753
-65.1430751852
-65.1485583889
-65.1534093063
-65.1611157158
-65.1667661979
-65.1696976039
-65.1724458102
-65.1752362418
-65.1794354314
-65.182115459
-65.1827770227
-65.1817693612

similar to neurosim

* 02-27-18

goal: prepare presentation for meeting
 
** presentation for meeting
https://docs.google.com/presentation/d/1N_bVm06f7vQtoi5nAaDhgPBArplf5OtkYlNFA2wkRw0/edit?usp=sharing

** meeting
select sim 0110102
start stimulation later in simulation
reduce noise amplitud, joe suggested to use a factor of 0.2
1011002
** joe developed routine to analyze plateaus
eee/sim/layersim/dev_joe.py

need also to update eee/sim/batch_analysis.py from joe's repo

** running simulation v31, network141  
noise_amp: 0.2
[[./gif/network141_raster.png]]
[[./gif/traces_network141.png]]

*** analysis with joe's routines
[[./gif/hist_platdurs_log_network141.png]]
[[./gif/hist_platdurs_network141.png]]
[[./gif/hist_platamps_log_network141.png]]
[[./gif/hist_platamps_network141.png]]
[[./gif/hist_spkfreqs_log_network141.png]]
[[./gif/hist_numspikes_log_network141.png]]

* 02-28-18

goal: select noise amp

** noise amp exploration

*** noise amp 0.5
[[./gif/network142_raster.png]]
[[./gif/traces_network142.png]]
[[./gif/hist_spkfreqs_log_network142.png]]
[[./gif/hist_platdurs_log_network142.png]]
[[./gif/hist_platamps_log_network142.png]]
[[./gif/hist_numspikes_log_network142.png]]
increased noise induced more oscilation of memb potential at the end of the plateau.
increased duration and amplitude of plateaus even in no_plateau cells

*** noise amp 0.7
[[./gif/network143_raster.png]]
[[./gif/traces_network143.png]]
[[./gif/hist_spkfreqs_log_network143.png]]
[[./gif/hist_platdurs_log_network143.png]]
[[./gif/hist_platamps_log_network143.png]]
[[./gif/hist_numspikes_log_network143.png]]

*** noise amp 0.1
[[./gif/network144_raster.png]]
[[./gif/traces_network144.png]]
[[./gif//hist_spkfreqs_log_network144.png]]
[[./gif/hist_platdurs_log_network144.png]]
[[./gif/hist_platamps_log_network144.png]]
[[./gif/hist_numspikes_log_network144.png]]

*** noise amp 1.0
[[./gif/hist_spkfreqs_log_network145.png]]
[[./gif/hist_platdurs_log_network145.png]]
[[./gif/hist_platamps_log_network145.png]]
[[./gif/hist_numspikes_log_network145.png]]
[[./gif/traces_network145_network145.png]]
[[./gif/network145_raster_network145.png]]
higher noise induce more plateau-like measurements in no_plateau cells 

** presentation to the group in slack
https://docs.google.com/presentation/d/1ieSLrqe52UV4fQCZfCPuzfB-5PWjwV_34sPM_9R8A2Q/edit?usp=sharing

** discussion

different noise amps with the new analysis tool
I prefer to be in the low range for the noise amp
salvadord [8:23 PM]
nice analysis… yeah seems like the nois_amp=0.2 is a good compromise
billl [8:37 AM]
so what is plan for next set based on this?
sergio [9:50 AM]
The next step will be to compare inputs to basal dends and apical dends. The hypothesis is that apical dend inputs increase synchrony in the network
Message Input


* 03-01-18

goal: optimize network

** discussion on slack
sergio [9:50 AM]
The next step will be to compare inputs to basal dends and apical dends. The hypothesis is that apical dend inputs increase synchrony in the network
billl [11:06 AM]
we should also run some batches coned in on area around this sim
so can get ideally even better
also i think wanted to make a little longer with longer time before the stim
also wanted to adjust the glfuct
sergio [11:08 AM]
ok let me set the params for new batch.
billl [11:09 AM]
we decided gflcut was way too high?
or just the inhib part
btw invited subha to join the project since you are leaving soon hoping she will take over this
but still would love for us to get a paper out on your watch!
salvadord [11:09 AM]
think gfluct amp is what he’s showing in figs above right? so 0.2 looks like good level
sergio [11:09 AM]
ok
yes, I just modified the noise amp of the default params for exc and inh noise amplitude
do you want to modify this params (exc and inh noise amp) separately?
billl [11:12 AM]
yes think would bea good idea since the inh one was the one that produced the weird stuff (i think)
sergio [11:15 AM]
ok
salvadord [11:15 AM]
is the weird stuff happening in the last sims?
billl [11:16 AM]
looks ok with noise amp of 0.1 or 0.2
so can get rid of the higher ones now
sergio [11:17 AM]
0.2 looks good, I’m afraid 0.1 is too little
billl [11:19 AM]
ok so let's stick with 0.2 but maybe vary ifluct and efluct separately a little bit around there
now that we are finding a good zone of course your changes will be +/-10-50% instead of OOMs
time for exercise; bbl
sergio [11:22 AM]
ok, I’m going set the batches and show here before running
billl [11:22 AM]
thx

** plan set new batch and vary gfluct

params["EEgain"] = [0.0008, 0.001, 0.0012]
params["IEgain"] = [0.04, 0.05, 0.06]
params["EIgain"] = [0.15, 0.2, 0.25]
params["IIgain"] = [0.00008, 0.0001, 0.00012]
params["exc_noise_amp"] = [0.18, 0.2, 0.22]
params["inh_noise_amp"] = [0.18, 0.2, 0.22]


*** discussion on slack
sergio [12:17 PM]
added this Plain Text snippet: batch new settings 

params["EEgain"] = [0.0005, 0.001, 0.002]

params["IEgain"] = [0.04, 0.05, 0.06]

params["EIgain"] = [0.1, 0.2, 0.5, 1.0]

params["IIgain"] = [0.00005, 0.0001, 0.0002]

params["exc_noise_amp"] = [0.15, 0.2, 0.25, 0.3]

params["inh_noise_amp"] = [0.15, 0.2, 0.25, 0.3]

sergio [12:17 PM]
params for the last sims are:
billl [12:18 PM]
i assume that the one in the middle of each is what you are on now -- the one we liked?
why change EEGain by OOM and IEGain by 10%?
sergio [12:19 PM]
added this Plain Text snippet: current params 

cfg.EEgain = 0.001 

cfg.IEgain = 0.05 

cfg.IIgain = 0.0001 

cfg.EIgain = 0.2 

cfg.vinit_PT5 = -75 mv

billl [12:20 PM]
noise_amps?
inh_noise_amp?
sergio [12:20 PM]
let me modify by 10% the EE
billl [12:20 PM]
i'm not telling you to do that; i'm asking you for the rationale
sergio [12:21 PM]
my rationale was to use values inside previous range
billl [12:22 PM]
some with OOM, some with 10% -- presumably you have idea of robustness for the different params
sergio [12:22 PM]
for example for the EE the prvious value range was [0.001, 0.005, 0.01]
billl [12:23 PM]
so was OOM previously .. ok so why ? :)
ok so no good reason perhaps? -- moving on -- what about the glfuct settings?
sergio [12:26 PM]
I was thinking to include a range of values that were not explore before. But I understand we need refine this batch, and I can change that to a smaller range
yep
gfluct can be modified by changing std, tau, reversal potential, and g
exc and inh for each parameter
salvadord [12:29 PM]
uploaded and commented on this file:  
Bian12.pdf

1 MB PDF
I like this paper on depol block
salvadord [12:29 PM]
@penny
sergio [12:29 PM]
the noise amp modifies the std param for gfluct
penny [12:30 PM]
commented on salvadord’s file Bian12.pdfThanks Salva!
billl [12:30 PM]
noise amp -- got that
see qeustion above
sergio [12:32 PM]
the question is why I set those values for noise amp?
billl [12:32 PM]
nope
billlbilll
inh_noise_amp?
sergio [12:35 PM]
https://neurosim.slack.com/archives/C2C7K1JKE/p1519921181000344
billlbilll
ok so let's stick with 0.2 but maybe vary ifluct and efluct separately a little bit around there
we were talking at this point to modify efluct and ifluct
billl [12:35 PM]
right
sergio [12:36 PM]
are those params the same inh and exc_noise_amp? am i wrong?
billl [12:36 PM]
i only saw exc_amp in above
same as what?
it's your file -- i don't know
are they both same?  should we make them different?
sergio [12:38 PM]
I included exc_noise_amp (same as exc std) and inh_noise_amp (same as inh std)
billl [12:43 PM]
oh my fault; i needed to expand the snippet to see all of it; sorry
sergio [12:43 PM]
added this Plain Text snippet: Untitled 

params["EEgain"] = [0.0008, 0.001, 0.0012]

params["IEgain"] = [0.04, 0.05, 0.06]

params["EIgain"] = [0.15, 0.2, 0.25]

params["IIgain"] = [0.00008, 0.0001, 0.00012]

params["exc_noise_amp"] = [0.18, 0.2, 0.22]

params["inh_noise_amp"] = [0.18, 0.2, 0.22]

billl [12:43 PM]
yup i went back and see now
ok so let's run
sergio [12:44 PM]
np
ok
billl [12:45 PM]
guess will see if 10% is enough to make any difference but fine if it doesn't since that will be a test of robustness
but if doesn't ight run a new set with +/- 50%
bbi30m
sergio [12:45 PM]
ok

** running batch on comet

** joe updated the analysis routine
pulling and update

need to add to cfg.py:
cfg.synTime =100.0

and linked to the start time on netstim

* 03-02-18

goal: analysis of batch

** check comet 

*** downloading results
*** checking results
00 has beeter plateau shape than 01
02 shortened plateau duration (<50ms)
10 longer plateau (100-150 ms)
20 good plateaus (100-150 ms)

no differences on 1st param
no differences in 3rd param
increased frequency (slightly) with 4th param
increased frequency (slightly) with 5th param
increased frequency (slightly) with 6th param

** run selected sims
*** default settings before batch
[[./gif/network146_raster.png]]
[[./gif/traces_network146.png]]
[[./gif/hist_spkfreqs_log_network146.png]]
[[./gif/hist_platdurs_log_network146.png]]
[[./gif/hist_platamps_log_network146.png]]
[[./gif/hist_numspikes_log_network146.png]]

*** 000222
[[./gif/network147_raster.png]]
[[./gif/traces_network147.png]]
[[./gif/hist_spkfreqs_log_network147.png]]
[[./gif/hist_platdurs_log_network147.png]]
[[./gif/hist_platamps_log_network147.png]]
[[./gif/hist_numspikes_log_network147.png]]

*** 020222
[[./gif/network148_raster.png]]
[[./gif/traces_network148.png]]
[[./gif/hist_spkfreqs_log_network148.png]]
[[./gif/hist_platdurs_log_network148.png]]
[[./gif/hist_platamps_log_network148.png]]
[[./gif/hist_numspikes_log_network148.png]]

*** incresing IE, poduce shorter plateus aand decreased frequencies
*** a combination of less II, increased noise amp, induced longer plateaus and increase frequencies
 
* 03-05-18
Goal finish checking batch

** examples from the batch
figs shared on slack
https://docs.google.com/presentation/d/1_frkj-4S3fSRNybywu6BUiXkcvo6epFgdbx8xyMZzEo/edit?usp=sharing

** running frequency analysis of batch
using routine by salva in netpyne
*** data grouped by pop
*** try to group data by plateau and not plateau 
lower EI produce higher frequency
[[./gif/multi_params4_matrix_IIgain_exc_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_IEgain_exc_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_IEgain_IIgain_PT5_1.png]]
[[./gif/multi_params4_matrix_EIgain_exc_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_EIgain_IIgain_PT5_1.png]]
[[./gif/multi_params4_matrix_EIgain_IEgain_PT5_1.png]]
[[./gif/multi_params4_matrix_EEgain_exc_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_EEgain_IIgain_PT5_1.png]]
[[./gif/multi_params4_matrix_EEgain_IEgain_PT5_1.png]]
[[./gif/multi_params4_matrix_EEgain_EIgain_PT5_1.png]]
[[./gif/multi_params4_matrix_exc_noise_amp_inh_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_IIgain_inh_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_IEgain_inh_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_EIgain_inh_noise_amp_PT5_1.png]]
[[./gif/multi_params4_matrix_EEgain_inh_noise_amp_PT5_1.png]]


* 03-05-18
Goals: prepare inform for meeting

** sims 

*** 002222
network 149
[[./gif/network149_raster.png]]
[[./gif/traces_network149.png]]
[[./gif/hist_spkfreqs_log_network149.png]]
[[./gif/hist_platdurs_log_network149.png]]
[[./gif/hist_platamps_log_network149.png]]
[[./gif/hist_numspikes_log_network149.png]]
no difference in freq to 147, small diff on plateau duration and amp

*** 002000
network 150
[[./gif/network150_raster.png]]
[[./gif/traces_network150.png]]
[[./gif/hist_spkfreqs_log_network150.png]]
[[./gif/hist_platdurs_log_network150.png]]
[[./gif/hist_platamps_log_network150.png]]
[[./gif/hist_numspikes_log_network150.png]]

** meeting

*** presentation
https://docs.google.com/presentation/d/1tCvhVUiQiww8uFMyOosCJSoHyIebQSsC0fVQK5IzgPo/edit?usp=sharing

*** notes
**** measure coherence
**** add a new pattern stim and try different locations: adend apical or proximal, bdend
**** cells were stim but plateau was not elicited. Probably inh activity aborted the plateau gneration
**** check number scale of histogram (no log scale)
**** turn off inh background activity and compare
**** show plateau duration on raster plot

* 03-07-18

goal: modify inh activity and second stim

** inh activity
*** no background inh activity
cfg.EEgain = 0.0008    # basal dend 
cfg.IEgain = 0.04   #PV to exc s
cfg.IIgain = 0.00012    # PV to PV
cfg.EIgain = 0.15  # exc to PV
[[./gif/network151_raster.png]]
[[./gif/traces_network151.png]]
no inh bkg activity induce dep block 

*** increased inh drive EI 1.0
[[./gif/network151_raster_inh1.png]]
[[./gif/traces_network151_inh1.png]]
less dep block, persistent activty

*** EI 0.5
[[./gif/traces_network151_inh05.png]]
[[./gif/network151_raster_inh05.png]]
more dep block and persist activity

*** EI 0.75
[[./gif/traces_network151_inh075.png]]
[[./gif/network151_raster_inh075.png]]
less persist activity

*** EI 1.25
[[./gif/traces_network151_inh125.png]]
[[./gif/network151_raster_inh125.png]]

* 03-08-18

goal: check inh bkg

** check new params
*** IE 0.035, EI 1.2
network152
[[./gif/network152_raster.png]]
[[./gif/traces_network152.png]]
dep block (100cells) and no clear plateau

*** IE 0.04, EI 1.0
network153
[[./gif/network153_raster.png]]
[[./gif/traces_network153.png]]
dep block 147 more clear plateau
[[./gif/hist_spkfreqs_network153.png]]
[[./gif/hist_platdurs_network153.png]]
[[./gif/hist_platamps_network153.png]]
[[./gif/hist_numspikes_network153.png]]

*** EI 0.15
[[./gif/network154_raster.png]]
[[./gif/traces_network154.png]]
dep block 400 cells
[[./gif/hist_spkfreqs_network154.png]]
[[./gif/hist_platdurs_network154.png]]
[[./gif/hist_platamps_network154.png]]
[[./gif/hist_numspikes_network154.png]]

***  IE 0.04, EI 1.5
network155
[[./gif/network155_raster.png]]
[[./gif/traces_network155.png]]
dep block 19 cells
[[./gif/hist_spkfreqs_network155.png]]
[[./gif/hist_platdurs_network155.png]]
[[./gif/hist_platamps_network155.png]]
[[./gif/hist_numspikes_network155.png]]

* 03-09-18
goal: finish inh, work on second stim 

** adding plateau analysis routine to sync.py
*** added as def plat_analysis
stored cells and traces as dict
stored data in dict as data_plats
dump data into a pickle file --data_plat.pkl
*** added def for plot plateau as plot_plat and plot hist
get data with same xlim and ylim
included function to have same binwidth size across figs
bins=np.arange(min(data), max(data) + binwidth, binwidth)

[[./gif/hist_spkfreqs_network155.png]]
[[./gif/hist_platdurs_network155.png]]
[[./gif/hist_platamps_network155.png]]
[[./gif/hist_numspikes_network155.png]]

* 03-12-18
goal work on second stim

** presentation of data 
https://docs.google.com/presentation/d/1Kext5RmtSH2OV5978Gl-uOKs44CSnBYgvESQhReE2_U/edit?usp=sharing

** different location for second stim
*** apical dend
[[./gif/traces_network156.png]]
[[./gif/network156_raster.png]]

*** create batch to try different location, stim times 
params['secStim'] = ['Adend1','Adend3', 'Bdend2']
params["synTime2"] = np.linspace(200.0,600.0,5)
params["glutAmp2"] = [0.5, 0.7, 0.9]

*** create second batch to try 3 stims different times
params['secStim'] = ['Adend1','Adend3', 'Bdend2']
params["glutAmp2"] = [0.5, 0.7, 0.9]
params["intervalStim"] = [50, 100, 150]

** individual sims
*** adend3 single stim
network 157
[[./gif/traces_network157.png]]
[[./gif/network157_raster.png]]

*** dend2 single stim
network 158
[[./gif/traces_network158.png]]
[[./gif/network158_raster.png]]

* 03-13-18

goal: meeting 

** meeting
*** presentation
https://docs.google.com/presentation/d/1Kext5RmtSH2OV5978Gl-uOKs44CSnBYgvESQhReE2_U/edit?usp=sharing

*** meeting 
- leave PV5 out of the raster plot
- use different times for 2nd stim (5 times)
- MH suggest a generalized synapse, one  per compartment 
- Why does it take a long time to run a single sim? 
- use eee7.py cells without spines  
- reduce the nseg on bdend to 5 (orig value is 99)

** updated eee7.py
*** modified file params
h.load_file('stdrun.hoc')
Vrest       = -75.0 
h.v_init    = -75.0  
h.celsius   = 32.0
bdendnseg = 5
gbar_kdr = 0.0131103978049 * 0.2
gbar_h = 0.000140956438043 

*** running time 240 s for 1 s of simulation

*** comparing to nseg = 99, running time

*** no spines, no plateau
nseg = 99
[[./gif/traces_network159.png]]
[[./gif/network159_raster.png]]

nseg = 5
[[./gif/traces_network160.png]]
[[./gif/network160_raster.png]]

*** discussion
so now down to 5 from 99?
still getting plateuas?
sergio [5:20 PM]
with 5 nseg, the running time was 135s
but I don’t see plateaus
billl [5:22 PM]
so prob need to do the single cells sims and get the right params
joe anything on that?
if not then maybe you can run some single cells sergio and just try increaseing Ra
joe [5:23 PM]
I’ll look into it now.
billl [5:23 PM]
thx
sergio [5:23 PM]
uploaded this image: no spines, nseg =5 
no spines, nseg =5
joe [5:23 PM]
What/where is the cell you’re using right now, Serg?
billl [5:23 PM]
if you guys can figure out a useful way to work together that would be great for future productivity
sergio [5:24 PM]
I'll share it with you
billl [5:24 PM]
maybe for now joe you can work with this old sim since that has had plateaus; before getting back to the sims similar to the penny cell
since that one is further from production
(it seems)
joe [5:24 PM]
Sounds good.
sergio [5:28 PM]
it is on my repo, it is located on eee/sim/cells/eee7.py
I just pushed the changes

** eee7ps.py with nseg =5
*** running time = 172 s and plateaus
[[./gif/traces_network161.png]]
[[./gif/network161_raster.png]]
plateaus are present

** discussion on slack
so now down to 5 from 99?
still getting plateuas?
sergio [5:20 PM]
with 5 nseg, the running time was 135s
but I don’t see plateaus
billl [5:22 PM]
so prob need to do the single cells sims and get the right params
joe anything on that?
if not then maybe you can run some single cells sergio and just try increaseing Ra
joe [5:23 PM]
I’ll look into it now.
billl [5:23 PM]
thx
sergio [5:23 PM]
uploaded this image: no spines, nseg =5 
no spines, nseg =5
joe [5:23 PM]
What/where is the cell you’re using right now, Serg?
billl [5:23 PM]
if you guys can figure out a useful way to work together that would be great for future productivity
sergio [5:24 PM]
I'll share it with you
billl [5:24 PM]
maybe for now joe you can work with this old sim since that has had plateaus; before getting back to the sims similar to the penny cell
since that one is further from production
(it seems)
joe [5:24 PM]
Sounds good.
sergio [5:28 PM]
it is on my repo, it is located on eee/sim/cells/eee7.py
I just pushed the changes
joe [5:32 PM]
Cool. I’ll find param values that get us plateaus again.
sergio [5:35 PM]
thanks Joe!
sergio [5:56 PM]
also, I just ran a sim with cells with spines and `nseg=5`, the running was 172 s, and there are plateaus
billl [5:56 PM]
what changed?
how many compartments in the spines?
sergio [5:57 PM]
just the nseg
billl [5:57 PM]
but you just changed the nseg above and said you got no plateuas
sergio [5:57 PM]
255 dend spines
billl [5:57 PM]
ouch
get rid of 'em
255 on each cell
or 255 total on all the cells?
sergio [5:58 PM]
255 for each cell
billl [5:58 PM]
2 cmp per spine i think (neck and head) so 500 segs with 1500 cells is 750,000 segs!!
oh would only be the pyrs so 500,000
still supertoomuch
sergio [5:59 PM]
ok
billl [6:00 PM]
but also ?what changed? above ??
sergio [6:00 PM]
I’ll be working with joe, with the cell without spines and get the plateaus
billl [6:00 PM]
ok
sergio [6:01 PM]
the first cell was without spines and reduced nseg (5), which doesn’t have plateaus, and the second cell has spines and reduced nseg (5), and this one has the plateaus
billl [6:02 PM]
ok so trick was to have a very small compartment
joe [6:02 PM]
Sergio, are you still working with the `cfg` and `netParams` files in `layersim`?
billl [6:02 PM]
so you put the NMDA onto all 255 spines?
sergio [6:02 PM]
no, only to 20 spines
billl [6:03 PM]
so could do with just those 20 spines
joe [6:03 PM]
No sense messing around with spines, right?  I thought we decided to get rid of them?
billl [6:03 PM]
and get same results
yeah would like to get rid of them but would also like a shortcut
how about try the 20 then try 10 then try without
sergio [6:03 PM]
joe, yes, still working at eee/sim/layersim
billl [6:03 PM]
see what works
sergio [6:04 PM]
ok
salvadord [6:05 PM]
but I assume 20 spines you provide input now are the ones in basal? so wouldn’t just want to have a cell with those 20 spines, right?
billl [6:06 PM]
why not -- those spines don't make much difference except for these input effects i think?
it just provides the possibility of getting the voltage clamp
since such a tiny compartment it's easy to max it out with current
salvadord [6:07 PM]
might want to stim elsewhere other times… and might be hard to justify why spines only in that section
billl [6:07 PM]
it's purely to get plateaus
penny you are also putting inputs into spines
can you get o have you tried to get plats without spines?
it's an adhoc highly-reduced model
a model for getting spines
salvadord [6:08 PM]
ok … seems a bit hardcoded, if we want to try other things in future… but guess works for now
billl [6:08 PM]
yeah entirely hardcoded but easy to add more later if eg we wan those other AMPA stims to also be into spines -- which i think we don't want
is interesting idea for what spines are for
1 thing spines are for
penny still around ? -- any disc with srdjan about this?
salvadord [6:11 PM]
ok, thought spines might have sginificant effect on cell behavior, but good if not
billl [6:11 PM]
they add a little bit of membrane area so there's a compensatino that's sometimes used for that -- change leakage by 3% or something; lms
oh 2x -- "Spines were not modeled explicitly, but their effects on membrane area were modeled by decreasing Rm and increasing Cm by a factor of 2 in spiny compartments (Shelton, 1985; Holmes, 1989; Larkman, 1991)."
but that's for a full model -- for the reduced model we're already nominally doing these compensations
bill holmes' thesis -- "Holmes, W.R., Cable Theory Modeling of the Effectiveness of Synaptic Inputs in Cortical Pyramidal Cells, Ph.D. thesis, University of California, Los Angeles, 1986"
penny [6:19 PM]
I didn’t use actual spine. Its only a spine factor for all the dendrites in the model
billl [6:19 PM]
so your inputs are not on spines
what is your Ra?
penny [6:19 PM]
Yes, not on spine.
billl [6:19 PM]
oh so we don't need spines guys
(what is your spine factor btw? -- 2x?)
penny [6:21 PM]
I am using 1.5. Other models use 2. I guess both are fine
billl [6:21 PM]
yeah
penny [6:22 PM]
The problem of spines in the detailed model right now is the NMDA evoked Ca2+ input can’t get to basal shaft. Need to model the Ca diffusion too to make it work.
billl [6:22 PM]
that's right up our alley
so Ra?
penny [6:23 PM]
Ra = 90
billl [6:23 PM]
oh so not very high
that same number you using sergio?
sergio [6:24 PM]
lms
penny [6:24 PM]
I thought 90-110 are all reasonable. Let me check too
billl [6:24 PM]
hope not using the HH default which is 34.5 i think
yeah 100 considered reasonable for mammalian cells
but seems pretty low to effectively isolate a cmp to get that vclamp effect that mh was talking about
sergio [6:25 PM]
Ra =114
penny [6:25 PM]
I see. Let me try 100 too and see how does the results look like.
billl [6:25 PM]
so that's not the problem
well 90 100 114 are all same for us
so joe/sergio did you try the trick of 2 sections with sec1 nseg=5 sec2 nseg=1 ??
sergio [6:29 PM]
no, I haven’t try that trick
joe [6:29 PM]
Not yet… But I forget what the purpose of that trick was…
billl [6:33 PM]
so we could put the input in at halffway point of basdend
instead of putting it at the end
where are we putting it now?
sergio [6:35 PM]
at 0.3
billl [6:36 PM]
so that's the or a problem
you're wasting all your compartments
let's do the 5-1 trick and see if that works
(understand it?)
sergio [6:38 PM]
no, I still don’t understand the trick, right now I have 1 sec (bdend1) with nseg =5
billl [6:39 PM]
need 2 secs
sec1 has nseg=5
joe [6:39 PM]
Ummm… So we don’t want the entire branch isopotential, but beyond where the stim will be isopotential is fine?
billl [6:39 PM]
sec2 has nseg=1
sergio [6:39 PM]
I see
billl [6:39 PM]
we def don't want sec1 isopot since whole idea is to isolate the loc of the syn
put stim at point 0 of sec2
bsec2(0.0)
sergio [6:42 PM]
and the length of the 2 secs will be 0.5/0.5 of the original length?
billl [6:45 PM]
yes
sergio [6:49 PM]
ok
Message Input

** plan 
do the trick of 2 secs

*** eee7.py
- added 2 secs in replace of bdend1, now bdend1 and bdend2
- previous bdend2 is now bdend3
- bdend1 has 5 nseg, connected to soma, length is multiplied by 0.5
- bdend2 has 1 nseg, connected to bdend1, length is multiplied by 0.5
- stim added to bdend2 at location 0.0, number per synapse = 2, weight = 7.0

*** running time 124 s
*** plots
[[./gif/traces_network162.png]]
[[./gif/network162_raster.png]]

* 03-14-18

** discussion on slack
let's just do a single cell to get this to work
how is your setup different from penny's in terms of compartmental isolation
(no sense in running a network if already no that none of the cells in the network are working)
joe can you take a look at this -- how does penny isolate the cmp?
joe [11:09 AM]
uploaded and commented on this image: glutAmp_allKScale_cell_0_vtrace_1.png 
glutAmp_allKScale_cell_0_vtrace_1.png
I’m getting decent plateaus out of simplified morph without spines.  Playing with a few params to improve a bit more.
billl [11:10 AM]
the bdend should go up to about 0 -- isn't that what penny has?  and what sergio had before?
joe [11:10 AM]
I don’t think Penny isolates her cmp at all, it’s already a bit isolated because she uses detailed morph.
billl [11:10 AM]
this was the discussion we had with mh yesterday -- bdend clamps v
yeah that's what i mean -- how is hers isolated
how many cmps between her NMDA site and the soma?
for penny
joe [11:12 AM]
Let’s ask Penny when she’s back…  For now, another hour or so, and I think I’ll have a good plateau model.
billl [11:12 AM]
don't need to ask her (she won't know prob) -- you have her model ; take a look
joe [11:15 AM]
She stims in basal[34], which is attached to basal[26], which is attached to soma…
In terms of nsegs, she uses a function in her cell model to determine a good number.
billl [11:18 AM]
if you load the model you can check basal[34].nseg etc. and also note where the NMDA is placed
joe [11:23 AM]
In [13]: cell.basal[34].nseg
Out[13]: 15In [14]: cell.basal[26].nseg
Out[14]: 3
billl [11:24 AM]
ok so let's try 15
joe [11:24 AM]
Will do.
billl [11:24 AM]
where in the other one is the stim ?  0.5
joe [11:26 AM]
Penny uses 9 syns/exsyns spread in the range [0.3, 0.6] in basal[34]
billl [11:30 AM]
so let's try that too
should be able to get the same then can modify
joe [11:34 AM]
I’m on it.
penny [11:40 AM]
Yay, Joe is right. The stimulation sites are around 60 ~ 120 um away from soma. 4 or 5 segments between soma and the first NMDA site

** joe's routine
I just pushed and then pulled and tested, so this should work.

Single command to set up a clean version:

rm -r eee_temp; mkdir eee_temp ; cd eee_temp ; hg clone ssh://no.neurosim.downstate.edu://u/graham/projects/eee ; cd eee ; ipython setup.py

Then open a new terminal and try:

cd ~/eee_temp/eee/sim/batches/batch_20180313/ ; ./runmybatches ; ipython -i analyze.py

The output figures are saved here:

~/eee_temp/eee/sim/batches/batch_20180313/batch_figs

So now I would decide what param I want to vary, set that up as a new batch in:

~/eee_temp/eee/sim/batches/batch_20180313/my_batches.py

There are a bunch of sample batches in there, so you can find a similar one and copy and paste.

Then the go-to command to run and analyze is:

cd ~/eee_temp/eee/sim/batches/batch_20180313/ ; ./runmybatches ; ipython -i analyze.py

When I open a new terminal and hit the up arrow, this command appears, which is easier than always copying and pasting.


** parameter exploration discussion
penny [2:35 PM]
There is a value called “tha” in na.mod, it is the half activation voltage for Na channel. It can be adjusted too to change the firing threshold. But need to be careful with it, 1 mV shift for this value change the response a lot.
joe [2:41 PM]
Sergio, if you could look into modifying “tha”, then I could get the back-propagating AP and f-I analyses going again for these cells…

** running batch
*** don't plot figures, message
Batch 'RmScale_glutAmp' is not 1D or 2D.  See eee/sim/batches/analyze.py.
Batch 'RaScale_glutAmp' is not 1D or 2D.  See eee/sim/batches/analyze.py.

** tha located on nax_bs
can't mody nax_bs on neurosim, need to modify it on local machine
can't modify nax_bs on local machine

* 03-16-18
** discussion on slack
didn't the penny loc work?  what did it show?
this is just 1 sim :)
also RPPR due soon --   275  15-Mar    era-notify@mail.nih.gov [230] [EXTERNAL]  NIH Automated Email: Progress Report for Grant 5 R01 EB022903-03, Due by 05/15/2018
who wants to take charge of this task? -- adam can step you through it since he just finished the other one

sergio [9:37 AM]
let me work on penny stim locations

billl [9:38 AM]
it's just 1 loc

billl [9:46 AM]
can we run a single sim?

sergio [9:51 AM]
yes, sorry mi internet is not working well, I’ll do that sim

billl [9:51 AM]
this has been frustrating -- when i ask a simple thing that would be easy with neuron it seems somehow hard with netpyne?  -- shouldn't be hard either way

joe [9:53 AM]
I’ve been working in /u/graham/projects/eee/sim/batches/batch_20180313
Executing batch_init.py gives a single sim.
It uses Penny’s locs.

billl [9:53 AM]
ok so ... did i towkr?

joe [9:54 AM]
The problem is that we are getting depol blockade, and so a very low range of good glutAmps..

joe [9:54 AM]
shared this image: Varying g_Na 

billl [9:54 AM]
1 sim please -- i don't want to see varying gNa
what does the sim show?

joe [9:54 AM]
shared this image: glutAmp_allKScale_02_cell_0_vtrace_1.png 

joe [9:54 AM]
Varying g K

billl [9:55 AM]
my question is about isolation in the 1 sim

joe [9:56 AM]
The model has dendrite nsegs = 15
We’ve been exploring g_Na and g_K to get better plateaus, but with limited success.  We were thinking of adjusting “tha” in the Na mod to reduce spiking threshold.  (The plateaus have to be quite large to get spiking right now, and then quickly spiking becomes depol blockade).

billl [10:15 AM]
i have a simple question so would like to see sim result
right now you have no isolation
please run 1 sim and compare to penny sim and see why it is different
from what i can see the isolation should be identical
there's no sense in explore gNa or gK until you get comparable isolation
that's not what we are looking for yet

joe [10:18 AM]
I’m happy to run a sim, but I guess I’m not quite sure what exactly your simple question is… :sweat_smile:

billl [10:19 AM]
can you get same bdend results as penny gets when using same Rin Ra secs, nsegs?
if not we have to figure out why not
perhaps first thing is to show that you can run the penny sim (1 sim) and get the result that she has reported -- clamp to ~0 mV
can you get that with her sim?
this would run in <1 min i woudl think?? -- no alteration in the sim; just run it and show results??

joe [10:29 AM]
Hey Penny, are your latest parameter values in your repo? Would you mind running one sim that shows a decent plateau? Then I’ll use those values and run your sim in Netpyne, and we can ensure we’re on the same page.

billl [10:30 AM]
so joe the penny one you currently have does not show a plateau?  can you show me and penny what that sim shows
as before, once concern i have is that you don't have a mechanism to run a single sim and show arbitrary results;  i'm concerned that you've gotten yourself locked in to your analysis routines - -analysis is a great thing for a later stage in the process so this is not time wasted but for this early stage when nothing works it's important to be able to do something quick and dirty and get a result quickly

joe [10:32 AM]
uploaded this image: glutAmp06__multicell_vtrace_1.png 


joe [10:32 AM]
uploaded this image: glutAmp06_cell_0_plateau_overlay.png 


billl [10:32 AM]
ok so i did ask for 1 but we're getting closer -- that's something i can understsand

joe [10:32 AM]
These figs are from a couple days ago, and Penny’s param values seem to be evolving constantly.

billl [10:32 AM]
that's ok so we don't need her latest values
you have a sim that runs ok
so now you set your dend1 and dend2 with same values ; what are results in the dend (forget about soma for now)
i assume that dend1-dend2 are in series as bdend
perhaps show me the relevant portion of the h.topology() call for both your simplifieid sim and penny sim so we can make sure they are identical
you can show whole topo for simple but whole topo for MC cell is too much

joe [10:43 AM]
Bill, prior to this week’s meeting, I was working with a simplified cell model based on Penny’s mod files and param values.  Sergio has been working with the original simplified cell model based on Salva’s M1 stuff, which I originally worked with for plateaus.  On Tuesday, you wanted me to switch back to the M1-based so we could get try to network stuff going…  

Question: would you like me to work on simplifying Penny’s detailed model?  Or on getting the M1 to match hers?  Or both?

billl [10:49 AM]
i had thought that sergio and you were working on the same cell model -- another major discrepancy that has fallen thru the cracks :(
not sure why we would be working with salva model at all -- we are developing fresh models to get plateaus
originally we had said but i guess we (mostly meaning me) not clear that you were developing simplified models so that they could be used in large networks;  that was what was in the grant proposal
sergio -- guess you and joe had some other understanding of the task??
perhaps sergio started with the M1 model since was easy to just get off the ground for the first month or so but hadn't realized that we had never used our own models
anyway answer is to use our models based now off of penny's model but simplified

joe [10:59 AM]
Great, glad we’re on the same page now.  Sergio and I started using the simplified model before Penny developed the detailed one.  We’ll all work together to get a functional plateau-producing simplification of Penny’s detailed model now.

Give me a bit to switch back over and I’ll show you what’s going on in the simp model.

billl [11:00 AM]
great;thx

** plan
have a cell model for network, developed with penny's params.

** single cell on joe's repo

ran python batch_init.py on batch_20180313

*** error message
my% python batch_init.py

NEURON -- VERSION 7.5 master (0388d94) 2017-08-09

Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016

See http://neuron.yale.edu/neuron/credits

loading membrane mechanisms from x86_64/.libs/libnrnmech.so

Additional mechanisms from files

 vecst.mod nstim.mod MyExp2SynBB.mod MyExp2SynNMDABB.mod NMDAeee.mod h_BS.mod kap_BS.mod kdmc_BS.mod kdr_BS.mod nax_BS.mod cadad.mod cat_mig.mod can_mig.mod cal_mig.mod h_migliore.mod h_kole.mod kBK.mod gabab.mod nafx.mod kdrin.mod IKsin.mod hin.mod canin.mod kapin.mod kctin.mod cadyn.mod kapcb.mod catcb.mod vecstim.mod AMPA.mod GABAA.mod

*******

  Note: NeuroML import failed; import/export functions for NeuroML will not be available.

  Install the pyNeuroML & libNeuroML Python packages: https://www.neuroml.org/getneuroml

*******

Scaling Na in Bdend1 by 0.75

Scaling gbar kdr in Bdend1 by 1.25

Scaling gbar kap in Bdend1 by 1.25

Scaling gpeak kBK in Bdend1 by 1.25

Scaling Na in Bdend2 by 0.75

Scaling gbar kdr in Bdend2 by 1.25

Scaling gbar kap in Bdend2 by 1.25

Scaling gpeak kBK in Bdend2 by 1.25

Scaling Na in soma by 0.75

Scaling gbar kdr in soma by 1.25

Scaling gbar kap in soma by 1.25

Scaling gbar kdmc in soma by 1.25

Scaling gpeak kBK in soma by 1.25

Scaling Na in Adend1 by 0.75

Scaling gbar kdr in Adend1 by 1.25

Scaling gbar kap in Adend1 by 1.25

Scaling gpeak kBK in Adend1 by 1.25

Scaling Na in Adend2 by 0.75

Scaling gbar kdr in Adend2 by 1.25

Scaling gbar kap in Adend2 by 1.25

Scaling gpeak kBK in Adend2 by 1.25

Scaling Na in Adend3 by 0.75

Scaling gbar kdr in Adend3 by 1.25

Scaling gbar kap in Adend3 by 1.25

Scaling gpeak kBK in Adend3 by 1.25

Scaling Na in axon by 0.75

Scaling gbar kdr in axon by 1.25

Scaling gbar kap in axon by 1.25

Scaling gbar kdmc in axon by 1.25

ExSyn

locs

[ 0.3     0.3375  0.375   0.4125  0.45    0.4875  0.525   0.5625  0.6   ]

dists

[ 30.   22.5  15.    7.5   0.    7.5  15.   22.5  30. ]

delays:

[ 40.   32.5  25.   17.5  10.   17.5  25.   32.5  40. ]

weights:

[0.0, 0.0, 0.049999999999999982, 0.12500000000000006, 0.20000000000000001, 0.12500000000000006, 0.049999999999999982, 0.0, 0.0]

Syn

locs

[ 0.3     0.3375  0.375   0.4125  0.45    0.4875  0.525   0.5625  0.6   ]

dists

[ 30.   22.5  15.    7.5   0.    7.5  15.   22.5  30. ]

delays:

[ 25.    21.25  17.5   13.75  10.    13.75  17.5   21.25  25.  ]

weights:

[0.0, 0.0, 0.049999999999999982, 0.12500000000000006, 0.20000000000000001, 0.12500000000000006, 0.049999999999999982, 0.0, 0.0]

ERROR: SimConfig->'analysis'->'plotTraces': plotTraces must be a bool or dict with keys in list ['include', 'timeRange', 'overlay', 'oneFigPer', 'rerun', 'figSize', 'saveData', 'showFig']. Keys supplied are ['saveFig', 'timeRange', 'showFig', 'oneFigPer', 'include', 'figSize'].

ERROR: SimConfig->'analysis'->'plotTraces'->'saveFig': saveFig must be tuple if specified. Value provided is True.

Creating network of 1 cell populations on 1 hosts...

Traceback (most recent call last):

  File "batch_init.py", line 27, in <module>

    sim.net.createCells()

  File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 76, in createCells

    newCells = ipop.createCells() # create cells for this pop using Pop method

  File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 58, in createCells

    cells = self.createCellsFixedNum()

  File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 138, in createCellsFixedNum

    cells.append(self.cellModelClass(gid, cellTags)) # instantiate Cell object

  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 228, in __init__

    if create: self.create()  # create cell

  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 259, in create

    self.createNEURONObj(prop)  # add sections, mechanisms, synaptic mechanisms, geometry and topolgy specified by this property set

  File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 421, in createNEURONObj

    mechParamValueFinal = mechParamValue[iseg]

IndexError: list index out of range

my% pwd

/u/sergioangulo/eee_temp/eee/sim/batches/batch_20180313

*** error was fixed bu updating netpyne
*** plot from batch_20180313
[[./gif/batch_20180313_traces.png]]

** joe working dir to compare with detailed model
*** dir on joe's repo
/u/graham/projects/eee/sim/eee_detailed_model/netpyne/batch_simp
running single sim works
*** plots
[[./gif/batch_simp_traces.png]]
dep block on detailed cell

*** now use same stim params between detailed cell and simplified cell
detailed cell:
cfg.synTime           = 200.0
cfg.numSyns           = 9
cfg.numExSyns         = 9
cfg.glutAmp           = 0.2
cfg.glutAmpExSynScale = 1.0
cfg.synLocStart       = 0.2
cfg.synLocSpread      = 0.4 # 0.4 makes the spread from 0.2 to 0.6
cfg.synDelay          = 12.5
cfg.exSynDelay        = 16.0

simplified cell:
cfg.synTime           = 200.0
cfg.numSyns           = 9
cfg.numExSyns         = cfg.numSyns
cfg.glutAmp           = 0.2
cfg.glutAmpExSynScale = 1.0
cfg.glutAmpDecay      = 5.0 # percent/um
cfg.synLocMiddle      = 0.45 
cfg.synLocRadius      = 0.15 
cfg.initDelay         = 10.0
cfg.synDelay          = 0.5 # ms/um
cfg.exSynDelay        = 1.0 # ms/um

Modified params on simplified cell:
cfg.synLocMiddle      = 0.4 
cfg.synLocRadius      = 0.2 

*** plots
[[./gif/batch_20180313_traces_2.png]]
only epsp

*** checking params, joe uses 0.3 to 0.6 on loc as original values
[[./gif/batch_data/batch_20180313_traces_3.png]]

** discussion on slack
model is running, but we need fix the params
joe [4:16 PM]
Sergio has the model running, I’m working with Penny to parameterize both models the same way.
billl [4:16 PM]
the model should  be able to run in about 20 sec?
what model is running? -- running networks again?  but we have no cell
sergio [4:17 PM]
single cell
billl [4:17 PM]
you were going to show me results from the model joe?
no results after 4 hours??
you're holdin' out on me here!
if you're communicating extensively with penny why not put it here where i can at least have the assurance that something going on and see what the problems might be ...
i'm still perplexed as to why if you use exactly the same dend you don't get almost same results in the dend itself
so was hoping to see you show me that you don't get same results (or better yet that you do)
joe [4:21 PM]
uploaded and commented on this image: Same cell model, diff parameterizations 
Same cell model, diff parameterizations
Top: Penny’s
Bottom: Joe’s
joe [4:22 PM]
Let’s talk parameterization.
billl [4:22 PM]
they are perfectly identical!
that's the reduced model??
joe [4:22 PM]
No, no…
billl [4:22 PM]
so what is problem
oh no
joe's is penny's
so it's penny's
ok so i was asking joe about joe's
joe?
joe [4:23 PM]
shared sergio’s image: batch_simp_traces.png 
batch_simp_traces.png
joe [4:23 PM]
Here’s the current simp model.
billl [4:23 PM]
i just want the bdends
so the bdend is too low and the soma is too high
why not superimpose in the way penny has with the diff colors
i'm not clear if all 4 are on identical y axis?
since have diff labeling
joe [4:24 PM]
Should be… I just put up a ‘raw’ data image spit out by Netpyne.
billl [4:24 PM]
so show these 4 superimposed underneath the other ones superimposed
joe [4:24 PM]
What would you like to see?
billl [4:24 PM]
compare with joe's penny's
joe [4:24 PM]
Okay, gimme a sec.
joe [4:35 PM]
uploaded and commented on this image: 20180315_133437.png 
20180315_133437.png
Here’s a fig to hold you over for a minute.  Problem plotting simple model because dend has diff name…  Working on it…
billl [4:36 PM]
ok, ok but anxiety building ....
joe [4:43 PM]
uploaded this image: 20180315_134243.png 
20180315_134243.png
billl [4:43 PM]
topos?
so you can see that problem has nothing to do with gna or gk so that was not helping us resolve; as we said on tues it's a problem with transfer impedeance
joe [4:47 PM]
added this Plain Text snippet: Untitled 

Last login: Thu Mar 15 13:44:20 on ttys326

graham-mac% cd /u/graham/projects/eee/sim/eee_detailed_model/netpyne/batch_comp/ ; ipython -i instantiate.py

geom_nseg: changed from 85 to 475 total segments

billl [4:48 PM]
just want to compare the corresponding basoilar dend -- the one we are using for the NMDA
from the MC vs the simplified
(SC)
are they ident?
you may want to use same names to make the process easier all the way thru
*identical
joe [4:50 PM]
Yeah, I just renamed Bdend1 in simple model as basal_34
billl [4:50 PM]
good
so what is the topo for basal34 for the MC vs SC?
joe [4:56 PM]
added this Plain Text snippet: topos 

MC:

|-|    <netpyne.cell.CompartCell object at 0x10c66e810>.soma_0(0-1)

  `--|    <netpyne.cell.CompartCell object at 0x10c66e810>.basal_26(0-1)

    `--------------|    <netpyne.cell.CompartCell object at 0x10c66e810>.basal_34(0-1)

SC:

|-|    <netpyne.cell.CompartCell object at 0x10c66e850>.soma_2(0-1)

 `--------------------------------------------------------------------------------------------------|    <netpyne.cell.CompartCell object at 0x10c66e850>.basal_34(0-1)

billl [4:57 PM]
so she has only 1 section for #34 with ?15 segs; you have ?99 segs
so let's make nseg the same
and check again
then let's check diam next
joe [5:02 PM]
uploaded and commented on this image: glutAmp01__multicell_vtrace_1.png 
glutAmp01__multicell_vtrace_1.png
nsegs = 15
Looks about the same.
joe [5:04 PM]
Here’s the geometry of SC:
       # Geometric properties
       somaL     = 48.4
       somaDiam  = 28.2
       axonL     = 594.3
       axonDiam  = 1.41
       apicL     = 261.9
       apicDiam  = 1.58
       bdendL    = 200.0
       bdendDiam = 2.28
I just copied and pasted from the old M1-based model, so these are free parameters…
billl [5:05 PM]
all we care about now is bdend34
let's compare those
joe [5:07 PM]
In [9]: mc.secs[‘basal_34’][‘geom’][‘diam’]
Out[9]: 0.7051320293798398
billl [5:09 PM]
that's in netpyne
let's make sure that we see in in neuron to make sure that there is no mistranslation
but good to look at it in netpyne too
also need to go thru all the segs not just the section
sergio [5:11 PM]
on the hoc file for the detailed cell the diams go from 1.28 (prox) to 0.32 (dist)
billl [5:12 PM]
ok so that's very different
i think
so document that from the interpreter too to make sure that that's what you actually end up with
for both cell typs
then fix the SC
joe [5:13 PM]
Is there an easy way to check actual NEURON values from Netpyne `sim` data structure?  @salvadord?
billl [5:13 PM]
yeah it's sim.net.cells i think
can dir(sim)  dir(sim.net) and folow it down
oh also need to use .keys() since some are in dicts
eg think end up with a ['Section'] or similar
this is in the tut i think or documentation
salvadord [5:15 PM]
`sim.net.cells[0].secs.hSec.diam`
joe [5:15 PM]
In [16]: mc = sim.net.cells[0]In [17]: mc.secs[‘basal_34’][‘geom’][‘diam’]
Out[17]: 0.7051320293798398In [18]: sc = sim.net.cells[1]In [19]: sc.secs[‘basal_34’][‘geom’][‘diam’]
Out[19]: 2.28
Ahhh, hsec.  Thanks!
salvadord [5:15 PM]
`sim.net.cells[0].secs.soma.hSec.diam`
billl [5:15 PM]
but hSec is a sec so need then to do for segs in ...
have to look at all the segs
joe [5:19 PM]
added this Plain Text snippet: diams 

In [25]: for seg in mc.secs['basal_34'].hSec:

  ...:   print(seg.diam)

  ...:   

0.888912220982

0.890824032039

billl [5:23 PM]
ok so let's start by fixing that
btw are we sure we have same location for NMDA
what locations?
can use pp.get_loc() -- something like that
sergio [5:24 PM]
https://neurosim.slack.com/archives/C2C7K1JKE/p1521042045000135
pennypenny
Yay, Joe is right. The stimulation sites are around 60 ~ 120 um away from soma. 4 or 5 segments between soma and the first NMDA site
billl [5:24 PM]
pyseg = pnt.get_segment()
sergio [5:24 PM]
these are the loc from penny’s
billl [5:24 PM]
ok so where are they
what are the locations in the 0-1 dend sec axis
sergio [5:25 PM]
and SC model uses 0.3 to 0.6
let me check that
joe [5:35 PM]
This is part of the reason I was interested in discussing parameterization first…  The number of synapses in Penny’s model is related to the weight applied, and I’d like to separate those two things.for w in weight:
       Pool_num = 8 + int(20*w)
billl [5:37 PM]
but for starters we're just replicating penny
so how about fixing those diams -- that's 1 enormous difference
you were able to replicate penny using netpyne for the MC
joe [5:37 PM]
Okay, we can do diams first.
billl [5:38 PM]
so seems trivial to do it for the SC?  (everything allways seems trivial to the guy who doesn't have to do it)
i mean we are using the same dend with the same name in both
so i was thinking would be exactly same def  in netpyne
joe [5:38 PM]
So simp dend should have two secs, one with diam of basal_26 and one with diam of basal_34?
billl [5:38 PM]
sure
26 and 34 are 2 dends where penny situates most of the action?
joe [5:39 PM]
26 leads to 34, which is where action is
billl [5:39 PM]
we can put in 3 if she's working 3 of them heavily or maybe need to put in a 3rd just to serve as the extra impedence drain rather than building that into the soma?
26-34 are 2 secs of same dend then so not 2 dends??
yeah so we need those 2 secs for 1 dend and then need at least 1 other and perhaps 2 other dends
joe [5:40 PM]
26 branches to 34 and something else
billl [5:40 PM]
confused -- can i see that piece of the topology
26 branches?? -- neuron generally only allows bifurcation (2 branches) ??
oh i'm sorry
misunderstood  your syntax
yes, english is my first language
joe [5:41 PM]
:joy:
billl [5:42 PM]
so if it has 2 things off the end we prob need those 2 pieces
joe [5:42 PM]
Okay, so basically just copy and paste diams/lengths of Penny’s active subtree?
billl [5:42 PM]
yup
joe [5:43 PM]
I’ll get on that.
penny [5:44 PM]
I checked other branches too. Didn’t find big difference caused by bifurcation yet. But would be nice to test to make sure
billl [5:45 PM]
once we get somehitng that looks similar to penny's we can get rid of little pieces and see also

*** check AMPA/NMDA  insertion sites on basal_34 
loading cell from eee_detailed_model/netpyne/batch_vcomp
for i in sim.net.cells[0].secs.basal_34.synMechs:
...     print i.loc
... 
0.2
0.25
0.3
0.35
0.4
0.45
0.5
0.55
0.6
0.2
0.25
0.3
0.35
0.4
0.45
0.5
0.55
0.6

** soma on detailed cell model
soma_0: Diam 500, L 1e-09, area 5e-07
soma_1: Diam 13.91, L 5.21, area 72.47
soma_2: Diam 9.75, L 2.59, area 25.25
soma_3: Diam 9.41, L 10.76, area 101.25
total area 198.97
 
* 03-16-18
goal: new cell for network

** discussion on slack
billl [11:05 AM]
any sims?
joe [11:08 AM]
Working on it.  I’ve decided to do the simplification a little more methodically.  Right now the simp model is the same as detailed model.  I’m removing the detailed axon and putting in a simple one, then I’ll adjust simp axon L/diam to match behavior.  Then I’ll collapse apical tree into single cylinder, and tune geom, then other basals.
joe [11:30 AM]
I replaced the detailed axon with a simple one in CA229simp.py.
I’m working in /u/graham/projects/eee/sim/eee_detailed_model/netpyne/batch_comp/
Now the soma doesn’t see any activity, and I’m trying to figure out why.
I just pushed, so if you want to pull and help figure out problem, that’d be great…

** plan check joe's sim
joe replaced basal_36 with axon
axon was connected to soma_2
after stim on basal dendrite, soma was not registering the changes in voltage

*** changes by joe
keep basal dendrite
add axon as a single compartment

** working dir 
eee/sim/eee_detailed_model/netpyne/batch_comp

** working with joe to chck distances on apical dend
working on file dev.py on eee/sim/eee_detailed model/netpyne/batch_comp

file executes instantiate.py

then look into sim.net.cells[0]

and iterates into the apicals

* 03-19-18
goal finish cell for network 

** find average length of apicals and basal
*** apical length
joe found method using h.distance()
first set point 0 
h.distance(0,0.5,sec=cell.secs.soma_0.hSec)

then iterates over every apical section
for key, item in secs.iteritems():
    total_length= []
    if 'basal' in key:
        lengths.append(item.geom.L)
        dists = []

        sec = item['hSec']
        children = len(sec.children())
        print "children: "+str(children)
        
        for seg in sec.allseg():
            dist = h.distance(seg.x, sec=sec)
            dists.append(dist)
        #print dists
        if children ==0:
            term_length.append(np.max(dists))
            print("term_length = " + str(term_length))

*** and do a mean of the distance values
print("mean terminal length = " + str(np.mean(term_length)))

*** value is 454.5

*** adding all the L for each sec 
lengths.append(item.geom.L)

*** sum all Ls for apical is 2838.9
*** average length for basal 157.2
*** sum all Ls for basal is 2354.26

** turn off all the active current on basal dends
*** turn off current via cfg.py
added control of calcium currents
including 2 mechs:
-ca
-it

*** added control calcium currents dendCaScale 
 if hasattr(cfg, 'allCaScale') or hasattr(cfg, 'dendCaScale'):

            if 'ca' in sec['mechs']:
                orig_ca = sec['mechs']['ca']['gbar']
                if hasattr(cfg, 'dendCaScale') and ("basal" in secName) and  (cfg.dendCaScale != 1.0):# or "apical" in secName) and  (cfg.dendCaScale != 1.0):
                    sec['mechs']['ca']['gbar'] = list(np.array(orig_ca, ndmin=1) * cfg.dendCaScale)
                    print ("Scalling (dend) gbar ca in %s by %s" % (secName, str(cfg.dendCaScale)))
                if hasattr(cfg, 'allCaScale') and (cfg.allCaScale != 1.0):
                    sec['mechs']['ca']['gbar'] = list(np.array(orig_ca, ndmin=1) * cfg.allCaScale)
                    print("Scaling (all) gbar ca in %s by %s" % (secName, str(cfg.allCaScale)))

            if 'it' in sec['mechs']:
                orig_it = sec['mechs']['it']['gbar']
                if hasattr(cfg, 'dendCaScale') and ("basal" in secName) and  (cfg.dendCaScale != 1.0):# or "apical" in secName) and  (cfg.dendCaScale != 1.0):
                    sec['mechs']['it']['gbar'] = list(np.array(orig_it, ndmin=1) * cfg.dendCaScale)
                    print ("Scalling (dend) gbar it in %s by %s" % (secName, str(cfg.dendCaScale)))
                if hasattr(cfg, 'allCaScale') and (cfg.allCaScale != 1.0):
                    sec['mechs']['it']['gbar'] = list(np.array(orig_it, ndmin=1) * cfg.allCaScale)
                    print("Scaling (all) gbar it in %s by %s" % (secName, str(cfg.allCaScale)))

*** plots
- full active currents
[[./gif/glutAmp__multicell_vtrace_1.png]]

- only apical dend active currents
[[./gif/glutAmp_noActCur_onlybasal__multicell_vtrace_1.png]]

-no active currents in apical and basal dends 
[[./gif/glutAmp_noActCur__multicell_vtrace_1.png]]

* 03-20-18
goal: meeting 

- shared with joe modifications of netParams.py

** meeting
*** mh: needs to match input impedance and transfer impedance

** check transfer impedance 
create an experiment to inject current in the distal part of a branch of a apical dendrite and basal dendrite.

then compare voltage diference between distal and soma.

selected Adend_13 to inject current and measure volt
 
current amplitude: 5.0

current pulse duration: 0.5

loc of current injected: 0.9

distance between soma and most distal adend_13: 688.8
adend_13 L: 51.3  
loc of injected current: 46.17 on adend_13
distance between soma and loc injected current: 683.7


*** plot
[[./gif/batch_comp_traces_gid_0.png]]

* 03-21-18

goal: include cell on network and finish measurements of tranfer impedance

** add new cell from joe
located at:

*** cellRule
cellRule = netParams.importCellParams(label='PT5_0', conds={'cellType': 'PT5_0', 'cellModel': 'HH_reduced'}, 
        fileName='../cells/CA229simp.py', cellName='MakeCA229simp')
*** need to add new mechs and compile
added mod files from joe's repo
**** error after doing compilation
/u/sergioangulo/projects/sergeee/eee/sim/cells/CA229simp.pyc in add_all(self)
    234     def add_all(self):
    235         for sec in self.all:
--> 236             sec.insert('vmax')
    237             sec.insert('pas')
    238             sec.e_pas = pasVm

ValueError: argument not a density mechanism name.

*** added vmax on multiparams.

*** new error
zn% ipython -i netParams.py
Python 2.7.12 (default, Dec  4 2017, 14:50:18)
Type "copyright", "credits" or "license" for more information.

IPython 5.4.1 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.
NEURON -- VERSION 7.5 master (0388d94) 2017-08-09
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2016
See http://neuron.yale.edu/neuron/credits

loading membrane mechanisms from x86_64/.libs/libnrnmech.so
Additional mechanisms from files
 vecst.mod vmax.mod nstim.mod MyExp2SynBB.mod MyExp2SynNMDABB.mod nafx.mod kdrin.mod IKsin.mod hin.mod canin.mod kapin.mod kctin.mod cadyn.mod vecstim.mod Gfluctp.mod
geom_nseg: changed from  34  to  82  total segments
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
/u/sergioangulo/projects/sergeee/eee/sim/layersim/netParams.py in <module>()
     74
     75   cellRule = netParams.importCellParams(label='PT5_0', conds={'cellType': 'PT5_0', 'cellModel': 'HH_reduced'},
---> 76         fileName='../cells/CA229simp.py', cellName='MakeCA229simp')
     77
     78   if cfg.noise:

/usr/site/nrniv/local/python/netpyne/netpyne/specs.py in importCellParams(self, label, conds, fileName, cellName, cellArgs, importSynMechs, somaAtOrigin, cellInstance)
    518             label = int(self._labelid)
    519             self._labelid += 1
--> 520         secs, secLists, synMechs, globs = utils.importCell(fileName, cellName, cellArgs, cellInstance)
    521         cellRule = {'conds': conds, 'secs': secs, 'secLists': secLists, 'globals': globs}
    522

/usr/site/nrniv/local/python/netpyne/netpyne/utils.py in importCell(fileName, cellName, cellArgs, cellInstance)
    177         modulePointer = tempModule
    178         if isinstance(cellArgs, dict):
--> 179             cell = getattr(modulePointer, cellName)(**cellArgs) # create cell using template, passing dict with args
    180         else:
    181             cell = getattr(modulePointer, cellName)(*cellArgs)  # create cell using template, passing list with args

/u/sergioangulo/projects/sergeee/eee/sim/cells/CA229simp.pyc in MakeCA229simp()
    743 ############################################
    744 def MakeCA229simp():
--> 745     cell = CA229simp()
    746     return cell

/u/sergioangulo/projects/sergeee/eee/sim/cells/CA229simp.pyc in __init__(self)
    121         self.optimize_nseg()
    122         self.add_axon()
--> 123         self.add_all()
    124         self.addsomachan()
    125         self.addapicalchan()

/u/sergioangulo/projects/sergeee/eee/sim/cells/CA229simp.pyc in add_all(self)
    237             sec.insert('pas')
    238             sec.e_pas = pasVm
--> 239             sec.insert('na')
    240             sec.insert('na_ion')
    241             sec.insert('k_ion')

ValueError: argument not a density mechanism name.


*** error while compiling
collect2: error: ld returned 1 exit status
/usr/site/../arch/nrn/x86_64/bin/nrnmech_makefile:94: recipe for target 'libnrnmech.la' failed
make: *** [libnrnmech.la] Error 1

*** try a fresh repo
added cell CA229simp.py to repo
added setup
compile on nrnivmodl and added simlynks

*** compiling normally

*** running simulation, but no connectivity rules working properly and stims

*** added instantiate.py

*** checksecs names for CA229simp.py
apical_0
soma_3
soma_2
soma_1
soma_0
basal_7
basal_6
basal_5
basal_4
basal_3
basal_2
basal_1
basal_0
axon_0
basal_9
basal_8

* 03-22-18
Goal finished adding CA229simp.py

** problems
*** new  AMPA and NMDA mod files
increasing NMDAgmax induce activity
cfg.NMDAgmax       = 0.01*10
orig value = 0.01
previous value = 0.05; before includng  new mod files

*** noise is not working 

checking insertion on gfluctp

on soma_2:
pointps: {noise: {loc: 0.5, std_e: 0.00264, g_e0: 0.0121, tau_i: 10.49, hPointp: Gfluctp[0], tau_e: 2.728, std_i: 0.005808, g_i0: 0.0573, E_e: 5.0, E_i: -77.0, mod: 'Gfluctp'}}

gfluctp is inserted but is not working
[[./gif/network162_traces.png]]

inserted gfluct as point process and syn mechs  but changed very slighly 
[[./gif/network162_traces_2.png]]

checking insertion, but gfluctp was not inserted 

**** solution
using insertion as point process, and changing the sec label for the def myinit2() on init.py
[[./gif/network162_traces_3.png]]

** reduce noise and change gmax
*** noise
orig noise amp = 0.22 * 5
new value = 0.5
[[./gif/network162_traces_4.png]]

*** gmax
orig value = 0.01 * 10
new value = 0.5
[[./gif/network162_traces_5.png]]

* 03-26-18
Goal: Finish updating cell

** discussion on slack
So it still requires the cfg and netParams files from `eee/sim/eee_detailed_model/netpyne/batch_rearr/` to properly set all the params.
I’m gonna get some lunch.  When I get back I’ll work on getting everything into the cell model file itself.

** updated cell
*** new compartment list
apical_0
soma_3
soma_2
soma_1
soma_0
basal_7
basal_6
basal_5
basal_4
basal_3
basal_2
basal_1
basal_0
axon_0
basal_9
basal_8

*** stim to basal_8, basal_9 lumped basal tree
*** update netParams from eee/sim/eee_detailed_model/netpyne/batch_rearr/
*** adding netstim
**** error
TypeError                                 Traceback (most recent call last)
/u/sergioangulo/projects/sergeee/eee/sim/layersim/netParams.py in <module>()
    411             for i in range(len(ns['synMech'])):
    412                 netParams.stimTargetParams[nslabel+'_'+cur_pop+'_'+ns['synMech'][i]] = \
--> 413                     {'source': nslabel, 'conds': {'pop': cur_pop}, 'sec': ns['sec'], 'synsPerConn': cfg.numSyns, 'loc': list(float(cur_locs)), 'synMech': ns['synMech'][i], 'weight': list(cur_weights), 'delay': list(cur_delays)}
    414
    415             #for nslabel in [k for k in dir(cfg) if k.startswith('NetStim')]:

TypeError: only length-1 arrays can be converted to Python scalars
**** solution
take out float from location
**** new error
stim = getattr(h, params['type'])(sec['hSec'](params['loc']))
TypeError: a float is requiredstim = getattr(h, params['type'])(sec['hSec'](params['loc']))
TypeError: a float is required
**** ask joe
**** change type from "VecStim" to "NetStim" and worked
*** plots
[[./gif/network162_traces_6.png]]
[[./gif/network162_raster_6.png]]

** balancing the network
*** increasing background inh drive 
orig value:
cfg.weightLongInh = 1.0

new value
cfg.weightLongInh = 5.0

*** plots
[[./gif/network162_traces_7.png]]
[[./gif/network162_raster_7.png]]
no plateau on soma

* 03-27-18

** get plateaus 
active currents didn't get plateaus
decrease inhibition didn't induce plateau
more negative RMP didn't induce plateaus
decreasing noise amplitude didn't induce plateaus
turning off the noise, induce plateaus
Increasing Rm and Ra didn't induce plateau
change location to proximal dend (0.2) sligthly get plateaus
decreasing Ra to 0.5 induce plateaus

*** plots reducing Ra by 0.5 factor
[[./gif/network162_traces_8.png]]
[[./gif/network162_raster_8.png]]

*** passive dendrites didn't alter plateaus
*** turning on background inh activity
[[./gif/network162_traces_9.png]]
[[./gif/network162_raster_9.png]]
less firing from PT5, but plateaus

*** reduce inh backgraound activty and increasing  E->I
[[./gif/network162_traces_10.png]]
[[./gif/network162_raster_10.png]]
nice activity of PV5

*** increaced E->E activity
[[./gif/network162_traces_11.png]]
[[./gif/network162_raster_11.png]]
increased firing

** meeting
https://docs.google.com/presentation/d/1wDV7mWrDxZZWVt7mymul4tuZCSfT4urddPPezN0ks3M/edit?usp=sharing
*** match input impedance
*** axon induce a better action potential shape
*** mh: voltage in axon shouldn't see the plateau
*** srdjan: axon contributes to plateau, dc shift, augmented weight
*** srdjan: spikelet should be vissible in the basal dend and soma
*** srdjan: Volt amplitude of plateau in basal is too big
*** max amplitude in basal dend should be 45-50 mV
*** srdjan: modify RMP to -70; e for NMDA -10mV; e for Na
*** bill: rationale for network connectivty rules? E->E to all and ramdon 
*** future: natural way to induce plateaus

** spikelets
*** turn on active currents
[[./gif/network165_traces.png]]
[[./gif/network165_raster.png]]
spikelets are seen at the start 

*** no active currents
[[./gif/network166_traces.png]]
[[./gif/network166_raster.png]]
no spikelets

*** discussion
billl [6:04 PM]
what's diff in run time?
joe [6:07 PM]
The spikes look taller relative to the plateau, with active basal currents.  Srdjan was concerned about that.
billl [6:08 PM]
he likes the spikelets too
main change to get the spikes bigger and plat smallers is to increase ena (currently 20??) and dec enmda -- curently 0?
sergio [6:10 PM]
there is no difference on running time
stil, I haven’t changed the e_NMDA and e_Na
billl [6:12 PM]
hmm; how can there be no diff??  how did you measure?
what are the times?
joe [6:14 PM]
Question, Bill: is NEURON smart enough not to calculate active currents when g is set to zero?  I didn’t actually remove active currents from basals, just set conductance to 0.
sergio [6:14 PM]
185 sec vs. 179 sec; without and with active currents
billl [6:20 PM]
sergio -- for how many cells?
joe - no not smart enough
sergio [6:20 PM]
1500
billl [6:20 PM]
can do uninsert() command at end of load
to just try out
without reediting all the files
joe [6:21 PM]
Got it.  So when I get to cleaning up the cell models (prob tmrw), I’ll actually remove the currents.
billl [6:21 PM]
maybe put in an if True:  so have it as siwthc for this
joe [6:21 PM]
Right.  I was thinking a switch.
A sep switch for each sec type.
billl [6:22 PM]
4 types? apical basilar-plat basil-stim axonal
joe [6:22 PM]
Yup.
billl [6:23 PM]
sounds good
sergio [6:23 PM]
`uninsert()` before `sim.runSim()`?
billl [6:23 PM]
yes
for seg in sec ... for sec in basaldendlist ... for mech in mechlist ...
hmm not sure you have these lists easily available?
netpyne makes easier?
salvadord [6:24 PM]
Ideally should do in source cell model file
Before netpyne imports
billl [6:24 PM]
yeah makes more sense
bbl
sergio [6:26 PM]
ok
joe [6:28 PM]
Some sec lists are available in current cell models, but they’re not really consistent.  That’ll come as part of the cell model file cleanup.  Mañana.
billl [6:43 PM]
thx

*** inserting uninsert()
h.uninsert() at the end on CA229simp.py

**** error
/u/sergioangulo/projects/sergeee/eee/sim/cells/CA229simp.py in <module>()
    760     return cell
    761
--> 762 h.uninsert()

TypeError: Cannot access uninsert (NEURON type 315) directly.

* 03-28-18

**** uninsert def
Delete the indicated mechanism from the currently accessed section. Not for point processes.

**** uninsert sintax
h('forall uninsert hh')
works as long as all existing sections have hh.

h('uninsert hh', sec=dend)
is a workaround that does what you want, i.e. uninserts a mechanism from an individual section.

**** joe will be working in switch for active mechs for basal dends

** explore glut amp and loc for network model 
*** batch params 
params["glutAmp"] = [1.0, 2.0, 3.0, 4.0, 5.0]
params["glutAmpExSynScale"] = [1.0, 2.0, 3.0, 4.0, 5.0] 
params["synLocMiddle"] = [0.2,0.5,0.8]


** uninsert mechs
*** added definition to cell model
def uninsert_mech(self):
        for sec in self.basals:
            sec.uninsert('na')
            sec.uninsert('kv')
            sec.uninsert('kap')
            sec.uninsert('kad')
            sec.uninsert('kBK')
            sec.uninsert('ca')
            sec.uninsert('it')
*** call function at __init___()
*** running time 62 sec for 1 sec of sim
*** plots
[[./gif/traces_network167.png]]
[[./gif/network167_raster.png]]

*** running time with adding active currents 103 sec for 1 sec of sim
*** plots with active currents
[[./gif/traces_network168.png]]
[[./gif/network168_raster.png]]
presence of spikelets

* 04-02-18
goal: finish network with new cell

** comments about the insertion of active currents in basals

sergio [5:22 PM]
using the `uninsert()` function in the cell model works. The sim runs faster (62 sec vs 103 sec; without vs with active currents in the basal dend). The downside is that without active currents, there is not spikelets in the basal dend

billl [8:26 PM]
i think that is a minor tradefoff but as joe suggested we can keep a switch so as to be able to do boht ways -- fast for trying stuff then with spikelets for nicer figs

** checking updates from Joe 
*** sec list
apical_0
soma_3
soma_2
soma_1
soma_0
basal_7
basal_6
basal_5
basal_4
basal_3
basal_2
basal_1
basal_0
axon_0
basal_9
basal_8

same number of secs than a week ago

** Checking batch from comet 

*** distal stims to basal dends don't induce plateaus in soma 
stim glutamate amp = 3.0

distal stims:
[[./gif/stim_batch3_3_3_2_traces.png]]

proximal stims:
[[./gif/stim_batch3_3_3_0_traces.png]]

** checking e for NMDA

suggested value eNMDA =-10 mV 
glut amp = 4.0
no active currents
[[./gif/network169_traces.png]]
[[./gif/network169_raster.png]]

original value eNMDA = 0 mV
[[./gif/network170_traces.png]]
[[./gif/network170_raster.png]]

more negative eNMDA induced plateaus but less spikes 

** modifying RMP to -70mV
*** plots
**** no active currents in basals
eNMDA =-10mV
RMP =-70 mv
[[./gif/network171_traces.png]]
[[./gif/network171_raster.png]]
[[./gif/traces_network171.png]]

more positive RMP increase the firing frequency. Plateau still with  amplitude of 20 mV  

**** active currents in basals
[[./gif/traces_network171_2.png]]
[[./gif/network171_raster_2.png]]
active currents increase amplitude spikes, decrease plateau dend amplitude, and slightly decrease spike freq 

** modifying Na 
*** Na in netpyne 
In [4]: sim.net.cells[0].secs.soma_0.mechs.na
Out[4]: {gbar: 150.0, _repr_mimebundle_: {}}

*** Na in mod file
gbar orig value is 1000
increasing na gbar by a factor of 1.2
[[./gif/traces_network172.png]]
[[./gif/network172_raster.png]]

gbar in soma_0 was increased to 180

Increased na gbar AP induced higher peak amplitude and frequency

** set new location for stim and amp
stim loc = 0.3
stim amp = 2.5

[[./gif/traces_network173.png]]
[[./gif/network173_raster.png]]

* 04-03-18

goal: meeting

** coments from yesterday 
billl [6:30 PM]
great.   now sync with stim?

*** plan work on sync

** meeting
*** reduce number of APs
*** srdjan: long term goal: natural parameter to induce plateaus
*** Bill: short term goal: sync based of second inputs, with different patterns of frequency dependency
*** Bill: 0-1 spikes per plateau
*** Bill: decrease noise, decrease stim amplitude; look for plateau amplitud of 10 mV; check transfer impedance; increase E->E

** noise
*** no noise  
[[./gif/network175_traces.png]]
[[./gif/network175_raster.png]]

*** minimal noise 
noise amp = 0.1
[[./gif/network176_traces.png]]
[[./gif/network176_raster.png]]
noise doesn't alter plateau spike freqs

*** Ra
orig value, RaScale = 0.5

RaScale  = 0.7
[[./gif/network177_traces.png]]
[[./gif/network177_raster.png]]
[[./gif/traces_network177.png]]
deacrease firing and amplitude of plateau

RaScale = 0.65 
[[./gif/traces_network178.png]]
[[./gif/network178_traces.png]]
[[./gif/network178_raster.png]]

** stim amp
orig value: 2.5

RaScale: 0.7 
stim amp:2.0  
[[./gif/traces_network179.png]]
[[./gif/network179_traces.png]]
[[./gif/network179_raster.png]]
less spikes, still plateau 

RaScale: 0.7 
stim amp:1.5  
[[./gif/traces_network180.png]]
[[./gif/network180_traces.png]]
[[./gif/network180_raster.png]]
few spikes, still plateau 

RaScale: 0.7 
stim amp:1.0  
[[./gif/traces_network181.png]]
[[./gif/network181_traces.png]]
[[./gif/network181_raster.png]]
no spikes, still plateau

RaScale: 0.5
stim amp:1.0
[[./gif/traces_network182.png]]
[[./gif/network182_traces.png]]
[[./gif/network182_raster.png]]
few spikes, higher plateau

* 04-04-18

goal: poster

** link:
https://docs.google.com/presentation/d/10o0kajN5D8MlRbL1RVS9UqbuuCqtoyPz2UcG_v9I-_8/edit?usp=sharing

** sims for poster
*** stim amp 3.0; Ra 0.7
[[./gif/traces_network183.png]]
[[./gif/network183_traces.png]]
[[./gif/network183_raster.png]]


*** stim amp 4.0; Ra 0.7
[[./gif/traces_network184.png]]
[[./gif/network184_traces.png]]
[[./gif/network184_raster.png]]


*** stim amp 5.0; Ra 0.7
[[./gif/traces_network185.png]]
[[./gif/network185_traces.png]]
[[./gif/network185_raster.png]]

** added stim to apical
stim to basal dend: 
amp =2.0, time =200ms 

stim to apical:
amp = 5.0
sec = apical_0
loc = 0.5

*** stim time 200 ms
[[./gif/network190_traces.png]]
[[./gif/network190_raster.png]]

*** stim time 250 ms
[[./gif/network191_traces.png]]
[[./gif/network191_raster.png]]

*** stim time 300 ms
[[./gif/network192_traces.png]]
[[./gif/network192_raster.png]]

*** stim time 350 ms
[[./gif/network193_traces.png]]
[[./gif/network193_raster.png]]

*** stim  time 400 ms
[[./gif/network194_traces.png]]
[[./gif/network194_raster.png]]

*** stim time 500 ms
[[./gif/network195_traces.png]]
[[./gif/network195_raster.png]]


* 04-06-18
goal: finish poster

** increased stim to a apical
*** stim time 200 ms
[[./gif/network196_traces.png]]
[[./gif/network196_raster.png]]

*** stim time 300 ms
[[./gif/network197_traces.png]]
[[./gif/network197_raster.png]]

*** stim time 400 ms
[[./gif/network198_traces.png]]
[[./gif/network198_raster.png]]

** sync across subsets
[[./gif/stimApicalLow_sync.png]]
[[./gif/stimApicalHigh_sync.png]]

** figs for poster on eee/data/v45 

* 04-12-18 Brain Initiative meeting 

- Presented poster of network model 
- Check inhibitory connectivty to elicit oscilations
- Srdjan: run sim for long period of time to elicit plateaus

* 04-13-18
goal: check inh oscillations 

** checking neymotin 2011
Fig 2. OLM inh cells, basket cells and Pyr cells
OLM inhibition to apical dend in Pyr
Basket to soma in Pyr
Septum drives OLM by theta stim
basket fire on gamma (ING)
pyr also fires on gamma (PING)

** induce gamma osc on network
*** increase I-I
orig value: 0.00012

*** error
Mechanism CaDynamics_E2 needs to be re-translated.
It's version 6.2.0 "c" code is incompatible with this neuron version.

*** error after running in all the machines at neurosim

* 04-20-18

** fix c code problem by using fresh clone of repo
** error message on netParam de bugging
no% ipy netParams.py
---------------------------------------------------------------------------
LookupError                               Traceback (most recent call last)
/u/sergioangulo/projects/tempdir/eee/sim/layersim/netParams.py in <module>()
     69 
     70   cellRule = netParams.importCellParams(label='PT5_0', conds={'cellType': 'PT5_0', 'cellModel': 'HH_reduced'}, 
---> 71         fileName='../cells/CA229simp.py', cellName='MakeCA229simp')
     72 
     73   sec = 'soma_2'
/usr/site/nrniv/local/python/netpyne/netpyne/specs.pyc in importCellParams(self, label, conds, fileName, cellName, cellArgs, importSynMechs, somaAtOrigin, cellInstance)
    519             label = int(self._labelid)
    520             self._labelid += 1
--> 521         secs, secLists, synMechs, globs = utils.importCell(fileName, cellName, cellArgs, cellInstance)
    522         cellRule = {'conds': conds, 'secs': secs, 'secLists': secLists, 'globals': globs}
    523 
/usr/site/nrniv/local/python/netpyne/netpyne/utils.pyc in importCell(fileName, cellName, cellArgs, cellInstance)
    202     h.initnrn()
    203 
--> 204     setGlobals(origGlob)  # restore original globals
    205 
    206     return secDic, secListDic, synMechs, globs
/usr/site/nrniv/local/python/netpyne/netpyne/utils.pyc in setGlobals(glob)
    110 def setGlobals (glob):
    111     for k,v in glob.iteritems():
--> 112         setattr(h, k, v)
    113 
    114     # # remove vars are not in glob ?
LookupError: 'v_init' is not a defined hoc variable name.

*** discussion with Joe
do you think is a problem with a netpyne update?

joe [4:52 PM]
I just checked Netpyne versions, and my machine is same as zn…
It doesn’t crash on my machine.
Can you run it locally?

sergio [4:53 PM]
I don’t have NEURON running on my machine

joe [4:53 PM]
Ah, okay.

sergio [4:53 PM]
I mean, it is crashing

joe [4:53 PM]
Oh, bummer.
Just on this, or all the time?

sergio [4:54 PM]
for a while, I can’t compile
it is a problem with a strange file…  libnrn… something

joe [4:56 PM]
We should get that fixed…  Very useful to run locally!
Okay, I get same error as you when running netParams.py
on zn
Could be a difference in NEURON version…  Let me check that…

sergio [4:57 PM]
also
recently it was updated by adam
to a version that includes rxd

joe [4:59 PM]
added this Plain Text snippet: Untitled 
graham-mac% nrniv --version
NEURON -- VERSION 7.5 master (72f115e) 2017-05-05
zn% nrniv --version
NEURON -- VERSION 7.5 master (4f1e575) 2018-03-17
Collapse 

joe [4:59 PM]
Yeah, the NEURON versions are different.

sergio [5:00 PM]
aha

joe [5:00 PM]
I’m not totally sure that’s the problem…

sergio [5:03 PM]
yes, it is strange

joe [5:05 PM]
I’ll be back in 20 min.
And then I’ll try to run a batch I know works on zn to see what happens.

sergio [5:05 PM]
ok

joe [5:31 PM]
added this Plain Text snippet: Searched my notebook 
  LookupError: 'v_init' is not a defined hoc variable name.
  Add Comment Collapse
  sergio [2:36 PM] 
  I’m having this error message when I run `netParams.py`
  salvadord [2:37 PM] 
  this prob due to recent removal of call to h.load(‘stdrun.hoc’) from netpyne — try adding that line to the cell model being imported
  sergio [2:38 PM] 
  ok
  [2:42] 
  working now, I added `h.load_file('stdrun.hoc')` to eee7ps.py
Collapse 

joe [5:32 PM]
Can you try adding that to the cell file and seeing if it works then?
I’m going to see if my sims run on zn.

sergio [5:33 PM]
Ok let me add it

joe [5:39 PM]
My batch sims do run on `zn`

sergio [5:43 PM]
it worked!
I added `h.load_file('stdrun.hoc')`
to the cell file

joe [5:43 PM]
Awesome!
I don’t know why it worked on mine without that, but glad we figured it out.

*** fix 
 add "h.load_file('stdrun.hoc')" to CA229simp.py

* 05-01-18

goal: work on network with joe, meeting, planning next month 

** discussin on slack
joe [10:29 AM]
Hey Sergio, I’m running network sims, but with the current settings, there is no activity in the pyramidal cells…  What param(s) would you suggest I play around with first to start seeing some spiking?

sergio [10:32 AM]
the stim to PT5 cells is turned off. The stim to basal dends is on `cfg.NetStimSyn` and `cfg.NetStimExSyn`

joe [10:41 AM]
Yeah, I noticed that.  I wasn’t ready to add the stim back in yet, I just wanted to start seeing some background activity, as a baseline/control.

sergio [10:43 AM]
for the bkg activity we will need to increase the synaptic noise amplitude
or drive the cells with a different input

joe [10:45 AM]
Okay, right now the synaptic noise comes from Gfluctp?
I just pushed to my repo, so go ahead and pull and add your nb and we’ll try to stay synced.  :sweat_smile:

sergio [10:46 AM]
yep, synaptic noise from Gfluctp
perfect, I’ll add my nb

joe [10:47 AM]
I’ll start setting up a batch of sims to explore different Gfluctp amplitudes.


sergio [10:50 AM]
ok

** network model on joe's repo
dir location:
eee/sim/batches_network/batch_20180424

cell models:
Cell models are now eeeD.py (detailed morph) and eeeS.py (simplified morph)

** fixed 'v_init' error 
added on eeeS.py:
h.load_file('stdrun.hoc')

** meeting
*** remove inh cell from raster plot
*** increase I->I, explore intrinsic osc (ING, PING)
*** find density of E->E inputs, increase them
*** second stim to basal dend vs apical dend, diferent times and number   
*** distribute the work with Joe.  I am going to be on charge of the second stim exploration, and Joe will work on the connectivity

** taking off the PV5 from raster plot and adding bkg activity
[[./gif/network208_traces.png]]
[[./gif/network208_raster.png]]
cfg.exc_noise_amp = 0.22 *4.5
cfg.inh_noise_amp = 0.22 *4.5

* 05-02-18

goal: explore different loc for second stim

** question about second stim to joe
sergio [12:47 PM]
Hi Joe, I’m going to explore different loc for the 2nd stimulus. Which basal branch do you recommend to do the 2nd stim?. Now, I induce the plateaus on the `basal_8`.
joe [12:53 PM]
Basal 0 to 8 are all one tree.  Basal_9 is the rest of the basal trees collapsed into one cylinder.
So second stim should be in basal_9.
Might be a good idea to throw a stimulus into a basal branch of the detailed cell model, then compare with a stimulus into basal_9 of the simplified model…
sergio [12:57 PM]
ok, it sounds good

** E->E input changed to basal_9

** 2nd stim
*** adding 2nd stim to basal_9 at 300 ms
[[./gif/network209_traces.png]]
[[./gif/network209_raster.png]]
increased synchronization

*** adding 2nd stim to apical_0 at 300 ms
[[./gif/network210_traces.png]]
[[./gif/network210_raster.png]]
replication of last experiment

*** only 2nd stim to basal_9 at 300 ms
[[./gif/network211_traces.png]]
[[./gif/network211_raster.png]]
generation of EPSP

*** increased noise by 4.5 and stim to basal_9
[[./gif/network212_traces.png]]
[[./gif/network212_raster.png]]
induction of spikes but not in all the cells

*** increased noise and stim to basal_9, basal_8
[[./gif/network213_traces.png]]
[[./gif/network213_raster.png]]
increased sync during 2nd stim

*** increased noise and stim to basal_8 
[[./gif/network214_traces.png]]
[[./gif/network214_raster.png]]
plateau only

* 05-03-18

goal reduce the number of pops

** modifications on netParams

*** reduction of of pops
pops from PT5_1 to PT5_4
cellParamLabels = ['PT5_1', 'PT5_2', 'PT5_3', 'PT5_4'] 

modified number of cells to 250 per pop

*** Changed input connectivity:
E->E convergence: 3
E->I convergence: 3

*** modified connList
connList = [[0,i] for i in range(numcellsPT5)]

*** modified Netstims 
created new pop 'plateau' to fire at the time of stim for plateau 

pop 'plateau' added to 'ns_list' and plotted of raster 

number of cells of 'plateau': 40

stim_2, y es de netstim to the second input, basal or apical 
 
number of cells of stim_2: 40

*** plots
[[./gif/network215_traces.png]]
[[./gif/network215_raster.png]]

** decreasing bkg activity
cfg.exc_noise_amp = 0.22 *4.0
cfg.inh_noise_amp = 0.22 *4.0
[[./gif/network216_traces.png]]
[[./gif/network216_raster.png]]
better activity

* 05-04-18

goal: check connecticity rules

** discussing conectivity rules with Joe

Joe, do you want check the connectivity rules before we continue with the model?
joe [12:27 PM]
What do you mean?  Have you changed the connectivity rules?
sergio [12:34 PM]
beacuse, I reduced the number of pops, for the E->E and E->I, I change the convergence to 3
so the total incoming input is 12
joe [12:34 PM]
I was just looking at that\u2026
I haven\u2019t run sims since you changed\u2026 let me do that now\u2026
sergio [12:35 PM]
ok


joe [1:05 PM]
Here’s the output I get from the network model, @sergio
It looks pretty good to me.
sergio [1:06 PM]
yep, the second stim is going to a basal dend
joe [1:06 PM]
Not too much activity before plateau, looks like synchrony during.
Now, the second stim is what exactly?  NMDA/AMPA again?
sergio [1:08 PM]
AMPA/NMDA, but it induces a small EPSP
joe [1:10 PM]
Okay, and it’s a single receptor instead of the 24 we activate for the glutamate puff.
sergio [1:10 PM]
yes
joe [1:11 PM]
The noise looks pretty big again, I see you have `cfg.exc_noise_amp = 0.22 *4.0`
I thought just the `0.22` gave pretty good noise.
sergio [1:13 PM]
I did increase it to have some bkg activity, but need to analyze the plateaus to check that they are still there
0.22 is a good noise level
joe [1:15 PM]
Let’s put the same `Stim_2` in twice: once before the plateau and once during.
sergio [1:17 PM]
perfect
joe [1:17 PM]
Maybe something like this: `Stim_2` at t=100, `glut_stim` at t=300, and then `Stim_2` again at t=400
joe [1:17 PM]
uploaded this image: network217_raster.png 
network217_raster.png
joe [1:18 PM]
uploaded this image: network217_traces.png 
network217_traces.png
joe [1:18 PM]
Last two figs are with noise = 0.22
I think the traces look better, but yeah, it’d be nice to have more activity in the raster…
Can we do that by increasing connectivity rather than increasing noise?
sergio [1:20 PM]
let me try that
which parameter did you modify to increase bkg?
joe [1:21 PM]
The only way I’ve played around with so far is to increase the excitatory noise amplitude.
joe [1:22 PM]
shared this image: 20180501_104729.png 
20180501_104729.png
joe [1:22 PM]
I didn’t increase the inhib amp.
Just increasing the excitatory noise amp seems to give better traces (not as jumpy as when both are increased)
I’ll be running a bunch of errands today, but I’ll be around off and on.  Back in a bit.
sergio [1:24 PM]
ok
let me try modifying the exc synaptic noise amp
joe [1:25 PM]
We should also look at connectivity.
sergio [1:30 PM]
yep
I’m going for lunch, bbl
joe [2:21 PM]
uploaded this image: network218_raster.png 
network218_raster.png
joe [2:21 PM]
uploaded this image: network218_traces.png 
network218_traces.png
joe [2:22 PM]
Stim_2 at 100 and 400.  Only has an effect on the plateau, which is great.
sergio [2:26 PM]
perfect
sergio [2:32 PM]
let me try increasing the bkg
joe [2:35 PM]
Sounds good.  How did we lose the PV cells in the raster plots?
sergio [2:36 PM]
it was a suggestion in the meeting
joe [2:39 PM]
Got it.  Just wanted to make sure it wasn’t accidental.
How do I turn them back on?
sergio [2:42 PM]
you can change the line 348 on netParams, to include PV5 cells `L5.append('PV5')`

** plots from discussion
cfg.glutAmp2 = 7.5
[[./gif/network217_traces.png]]
[[./gif/network217_raster.png]]
noise amp x 1.0

** adding exc noise to increase bkg activity 
*** low amplitude second stim
cfg.exc_noise_amp = 0.22 *6.0
cfg.glutAmp2 = 5.0
[[./gif/network218_raster.png]]
[[./gif/network218_traces.png]]

*** high amplitude second stim
cfg.glutAmp2 = 7.5
[[./gif/network219_traces.png]]
[[./gif/network219_raster.png]]
increased noised allows ease spike by 2nd stim 

*** low low amplitude second stim
cfg.glutAmp2 = 2.5
[[./gif/network220_traces.png]]
[[./gif/network220_raster.png]]
no spike with 2nd stim

*** int amplitude second stim
cfg.glutAmp2 = 4.0
[[./gif/network221_traces.png]]
[[./gif/network221_raster.png]]
induces sync and some spikes pre plateau

* 05-07-18
goal: explore connectivity rules, synchrony in non-plateau sub pops

** discussion on slack
sergio [3:52 PM]
uploaded this image: Increased exc noise amp by 6.0 
Increased exc noise amp by 6.0
sergio [3:53 PM]
uploaded this image: volt traces for exc noise amp increased by 6.0 
volt traces for exc noise amp increased by 6.0
sergio [3:55 PM]
I will need to reduce the amp for the second stim to avoid the spike at 100 ms
salvadord [4:07 PM]
looking good”
!
penny [4:55 PM]
Hey guys, I have a department presentation next Thursday. Which network figures do you guys suggest to use?
sergio [5:12 PM]
I think the most interesting part is the sync with the second stim. It follows the results with the detailed cell model.  By Monday or Tuesday we can have something that you can present
joe [5:20 PM]
uploaded this image: network219_raster.png 
network219_raster.png
joe [5:20 PM]
uploaded this image: network219_traces.png 
network219_traces.png
joe [5:20 PM]
A train of inputs is interesting.
penny [5:25 PM]
Thanks! That is very neat!
So for each PT5 cell, only a subset of them are receiving the plateau? I am trying to understand the white space
billl [6:53 PM]
we had half getting plateau and half as control not getting activated


** study sync on non-plateau cells
*** initial params
noise level factor 0.22
glutAmp2 =7.5
[[./gif/network222_traces.png]]
[[./gif/network222_raster.png]]

*** initial params no second stim
[[./gif/network223_traces.png]]
[[./gif/network223_raster.png]]

*** no second stim, EE 2.5
[[./gif/network224_traces.png]]
[[./gif/network224_raster.png]]
no major changes

*** no second stim, EE 5.0
[[./gif/network225_traces.png]]
[[./gif/network225_raster.png]]
increase firing but not sync

*** no second stim, EE 7.5
[[./gif/network226_traces.png]]
[[./gif/network226_raster.png]]
dep block anf increased freq

*** second stim, EE 2.5 
[[./gif/network227_traces.png]]
[[./gif/network227_raster.png]]
no changes

*** second stim, EE 5.0
[[./gif/network228_traces.png]]
[[./gif/network228_raster.png]]
nice sync, PING?

*** second stim, EE 7.5
[[./gif/network229_traces.png]]
[[./gif/network229_raster.png]]
hypersync acitivity before of the second stim


*** second stim, EE 3.25
[[./gif/network230_traces.png]]
[[./gif/network230_raster.png]]
weak sync

*** second stim to apical dend, EE 1.0
[[./gif/network231_traces.png]]
[[./gif/network231_raster.png]]

*** second stim to apical, EE 2.5
[[./gif/network232_traces.png]]
[[./gif/network232_raster.png]]
weak sync

*** second stim to apical, EE 5.0
[[./gif/network233_traces.png]]
[[./gif/network233_raster.png]]
strong sync, PING

*** second stim to apical, EE 7.5
[[./gif/network234_traces.png]]
[[./gif/network234_raster.png]]
no dep block, but strong firing


*** increased exc noise by 3.0, EE 5.0, 2nd stim to apical  
[[./gif/network235_traces.png]]
[[./gif/network235_raster.png]]
strong sync, PING

*** increased exc noise by 6.0, EE 5.0, 2nd stim to apical  
[[./gif/network236_traces.png]]
[[./gif/network236_raster.png]]
less sync

* 05-08-18

goal: meeting and continuing working on sync

** meeting
presentation
https://docs.google.com/presentation/d/1x0oHOwKUgBp6WgsgOVo3eKwxHFeGF3MQHfhtzi2ZRAE/edit?usp=sharing

*** srdjan 2nd stim every 50 ms
*** use a intemediate EE input weight 

** stim to apical dend every 50 ms
noise 0.22 
*** EE 1.0
[[./gif/network237_traces.png]]
[[./gif/network237_raster.png]]
firing only during the plateau but after the stim

*** EE 2.5
[[./gif/network238_traces.png]]
[[./gif/network238_raster.png]]
increase firing of non-plateau cells

*** EE 5.0
[[./gif/network239_traces.png]]
[[./gif/network239_raster.png]]
strong sync during plateau

*** EE 1.0, noise 0.22*6.0 
[[./gif/network240_traces.png]]
[[./gif/network240_raster.png]]

*** EE 1.0, noise 0.22*3.0
[[./gif/network241_traces.png]]
[[./gif/network241_raster.png]]
restricted firing during 2nd stim

*** EE 2.5, noise 0.22*3.0
[[./gif/network242_traces.png]]
[[./gif/network242_raster.png]]
increasing firing after 2nd stim in non-plateau cells

*** EE 2.5, noise 0.22*6.0
[[./gif/network243_traces.png]]
[[./gif/network243_raster.png]]
increasing firing after 2nd stim in non-plateau cells

* 05-09-18
goal: check more noise with stim

** contract update

** incrased synaptic noise and EE
*** EE 5.0, noise 0.22*3.0
[[./gif/network244_traces.png]]
[[./gif/network244_raster.png]]

*** EE 5.0, noise 0.22*6.0
[[./gif/network245_traces.png]]
[[./gif/network245_raster.png]]
too much activity 

** figure to present in slack
https://docs.google.com/presentation/d/1ZtvyKbvn2lzEzSDrA0GtGOENnpet--ylHi4erWsg0Ds/edit?usp=sharing

* 05-10-18
goal: explore ING

** discussion on slack
sergio [10:44 AM]
I did a stimulation as suggested by Srdjan. A second stim every 50 ms, and tried with different EE weight inputs, and exc noise amplitude levels
billl [10:44 AM]
what was srdjans's concern the other day;  i had trouble understanding him and then i had to go
sergio [10:46 AM]
one concerns was about the weight of EE, I showed  simulations with high EE weight that induced hypersync and oscillation during the plateau
billl [10:46 AM]
thought we wanted osc during plat
ok so 1.0 gives a very clean result here
how does that compare with the one you showed with the osc?
sergio [10:48 AM]
the one with osc showed a strong sync with non-plateau cells
billl [10:49 AM]
why are the nonplateau cells firing at all with the osc?  osc must be very high ampitude?
why not keep the osc down low as would be with eg PING
i don't see any osc fig??
which?
sergio [10:51 AM]
uploaded this image: High EE (5.0) 
High EE (5.0)
sergio [10:51 AM]
this is when the network has a EE = 5.0
but the firing remains during the plateau
billl [10:52 AM]
firing is only during the plateau
sergio [10:52 AM]
uploaded this image: high EE 
high EE
billl [10:52 AM]
ok so that's just a latchup not osc
should be able to get ING for an osc or maybe PING - prob ING since we don't want the E cells firing much
should we use what you showed a min ago with EE=1.0 and start building a paper around that?
sergio [10:54 AM]
EE=1.0 sounds good
so for the ING, I’m going start exploring I->I
billl [10:55 AM]
k

** plan
continue with EE = 1.0 and explore II

** exploring II
*** original values
cfg.weightLongInh = 2.0
[[./gif/network246_traces.png]]
[[./gif/network246_raster.png]]
there is not bkg activity of interneurons 

*** higher long inh weight value, with bkg inh activity
cfg.weightLongInh = 3.0
[[./gif/network247_traces.png]]
[[./gif/network247_raster.png]]

*** long inh weight =4.0
[[./gif/network248_traces.png]]
[[./gif/network248_raster.png]]
higher background activity

*** long inh weight =3.5
[[./gif/network249_traces.png]]
[[./gif/network249_raster.png]]
nice bkg activity

*** increasing II by factor of 10
long inh = 3.5
II * 10
[[./gif/network250_traces.png]]
[[./gif/network250_raster.png]]
no ocs in inh cells

*** increasing II by factor of 100
II * 100
[[./gif/network251_traces.png]]
[[./gif/network251_raster.png]]
no osci and decreased firing

* 05-11-18
goal: explore ING

** ING
from last sims, the nework didn't induce osc by increasing the bkg activity and the I->I connectivity input

ING has been described as part of feedbak with Inh and Exc

one possibility is to add bkg activity to exc cells and check is feedback to inh cells can induce ING

*** changes in network
removed netstim
added bkg activity to PT5
cfg.weightLong =  10.0 
cfg.weightLongInh = 3.5
[[./gif/network252_traces.png]]
[[./gif/network252_raster.png]]
random firing

*** increased long stim weight 
cfg.weightLong =  10.0 * 2.0
cfg.weightLongInh = 3.5
[[./gif/network253_traces.png]]
[[./gif/network253_raster.png]]
random firing

*** incrased EE 
cfg.weightLong =  10.0 * 2.0
cfg.weightLongInh = 3.5
EE = 5.0
[[./gif/network254_traces.png]]
[[./gif/network254_raster.png]]
increased intial firing but not osc

*** increased EE and II
cfg.weightLong =  10.0 * 2.0
cfg.weightLongInh = 3.5
EE = 5.0
II =  0.00012 *10 
[[./gif/network255_traces.png]]
[[./gif/network255_raster.png]]
no osc

*** increased EE and IE
cfg.weightLong =  10.0 * 2.0
cfg.weightLongInh = 3.5
EE = 5.0
IE = 0.001 * 5.0
[[./gif/network256_traces.png]]
[[./gif/network256_raster.png]]
no osc but one strong activity in the first part


* 05-14-18
goal: explore ING an dPING

** varying synaptic strength  
*** increased EE and EI
[[./gif/network257_traces.png]]
[[./gif/network257_raster.png]]
no osc 

** try longer sim and see if network sync 
*** 2 sec sim EE =5.0
[[./gif/network258_traces.png]]
[[./gif/network258_raster.png]]
slow osc (3-4 cycles per second)

*** EE = 5.0, bkg long stim to exc =11.0
[[./gif/network259_traces.png]]
[[./gif/network259_raster.png]]
slightly faster osc 

*** EE =5.0,IE*2.0, bkg long stim = 11.0
[[./gif/network260_traces.png]]
[[./gif/network260_raster.png]]
no clear osc 

*** EE = 5.0, IE*0.8, long stim == 11.0
[[./gif/network261_traces.png]]
[[./gif/network261_raster.png]]
stronger firing than network259

*** EE = 5.0, IE*0.8, EI*0.5, long stim =  11.0
[[./gif/network262_traces.png]]
[[./gif/network262_raster.png]]
clear osc 3 Hz

*** Changed II
EE = 5.0, IE*0.8, EI*0.5, II*0.5, long stim = 11.0
[[./gif/network263_traces.png]]
[[./gif/network263_raster.png]]
nice osc 3 Hz

*** Decreased long stim (10.0)
EE = 5.0, IE*0.8, EI*0.5, II*0.5, long stim = 10.0
[[./gif/network264_traces.png]]
[[./gif/network264_raster.png]]
less firing but better slow osc 

*** Long stim = 9.0
EE = 5.0, IE*0.8, EI*0.5, II*0.5, long stim = 9.0
[[./gif/network265_traces.png]]
[[./gif/network265_raster.png]]
slower osc, 1-2 per sec

*** long stim = 12.0
EE = 5.0, IE*0.8, EI*0.5, II*0.5, long stim = 12.0
[[./gif/network266_traces.png]]
[[./gif/network266_raster.png]]
increased firing and ocs

* 05-15-18
goal: osc and meeting

** turned off inh bkg activity
*** increased EI
EE = 5.0, IE*0.8, EI*0.7, II*0.5, long stim = 10.0, long inh= 0 
[[./gif/network267_traces.png]]
[[./gif/network267_raster.png]]
high freq firing, and slow osc

*** Increased IE
EE = 5.0, IE*1.5, EI*0.7, II*0.5, long stim = 10.0, long inh= 0 
[[./gif/network268_traces.png]]
[[./gif/network268_raster.png]]
nice osc

** meeting
- srdjan: check somatic volt depol, very weak 
- bill: check input impedance
- bill: ING by exploring I-I, talk to salva and sam
- bill: 2x2 project,4 gropus ; plat/apstim; noplat/apstim; plat/noap; noplat/noap
- mh: use same time scale for figs

** exploring ING
*** changes in network 
- change E-E target input to basal_8, loc 0.3, ratiobdend
- only one stim to apical to drive the network
- turn off the long stim to PT5
- increased stim weight to apical of PT5 (cfg.glutAmp2 = 10.0) to induce a spike

*** stim to apical inducing 1 spike in PT5
cfg.EEgain = 1.0 
cfg.IEgain = 0.001
cfg.EIgain = 2.0 
cfg.IIgain = 0.00012
cfg.glutAmp2 = 10.0
[[./gif/network269_traces.png]]
[[./gif/network269_raster.png]]

*** increased E-I to induces activity on inh cells
cfg.EIgain = 2.0 * 5.0
[[./gif/network270_traces.png]]
[[./gif/network270_raster.png]]

*** increase sync
cfg.EEgain = 1.0 *30.0 
cfg.IEgain = 0.001 * 0.2 
cfg.EIgain = 2.0 * 1.0
cfg.IIgain = 0.00012 * 0.5
cfg.glutAmp2 = 15.0
change EE convergence from 3 to 5
added netstim to apical: 5 stim at 100Hz, staring at 100ms, amp =15.0 
[[./gif/network271_traces.png]]
[[./gif/network271_raster.png]]
larger EE induces a plateau but still not sync

* 05-16-18
goal: induce ING and PING

** exploring ING
*** changes in stim, II, EE,  and IE
cfg.EEgain = 1.0 *40.0 
cfg.IEgain = 0.001 * 0.5 
cfg.EIgain = 2.0 * 2.0
cfg.IIgain = 0.00012 * 2.0
cfg.glutAmp2 = 15.0
netstim: only 1 stim
[[./gif/network272_traces.png]]
[[./gif/network272_raster.png]]
 inh cells seems to sync better that exc cells

*** changes in II
cfg.EEgain = 1.0 *40.0 
cfg.IEgain = 0.001 * 0.5 
cfg.EIgain = 2.0 * 2.0
cfg.IIgain = 0.00012 * 0.5
cfg.glutAmp2 = 15.0
[[./gif/network273_traces.png]]
[[./gif/network273_raster.png]]
no changes on firing

** discussion on slack
billl [4:29 PM]
how are you trying to get oscillation?
we need to look at the inhib cells
we can leave out the plateaus for now
sergio [4:31 PM]
For now, I’m trying to start the activity with a single stim to PT5 cells, and then I’ve been modifying values for EE, EI, IE, II
billl [4:32 PM]
no stim
is there any osc now? -- how are you trying to detect?
sergio [4:32 PM]
no osc now, I’m just checking the raster plot
billl [4:33 PM]
show me raster
sergio [4:34 PM]
mentioned this image: network273_raster.png 
network273_raster.png
sergio [4:34 PM]
the stim on that sim is at 100 ms, but I’m going to remove it
should I change the RMP to a more positive value?
or change the noise amp?
billl [4:37 PM]
let's see the raster 1st
recall that we're talking about the inhib cells now not the excit cells
sergio [4:39 PM]
ok, the raster that I have to show is the one above. for the inh cells, should I drive them with a external stim? or just modify the I-I and spontaneously wait for ING?
billl [4:41 PM]
i thought the sim included inhib cells?
you say above IE EI ...
so let's start by taking a look to see if any osc
but year then can change Idrive and II
*yeah
sergio [4:43 PM]
the sim includes inh cells, there are the dark green on the raster plot
billl [4:45 PM]
ok so let's just look at those
sergio [4:45 PM]
for the inh cells in the raster, it looks like there is a initial osc but then it disappears
billl [4:45 PM]
right now they are not being driven
at all
before they were active but i guess must have turned down the Idrive?
i remember because srdjan complained about them; perhaps that's why you turned it down
?
i mean with no stim
sergio [4:47 PM]
they are not driven right now, only receiving input from Exc  and inh cells
let me modifiy and reduce the Idrive
billl [4:51 PM]
reduce?  you mean increase -- the gfluct
right now Idrive == 0 so ....
sergio [4:53 PM]
ohok, I thought were talking of the inputs weight I->I
billl [4:53 PM]
II won't drive since I input is hyperpolarizing or shunting
need to drive with something that is depolarizing
eg gfluct
sergio [4:54 PM]
and this is the gfluct in the exc cells
?
billl [4:55 PM]
nope
Idrive means to drive the I cells
sergio [4:55 PM]
ok let me add gfluct to inh cells
billl [4:55 PM]
we had this before but must have been removed at some point
billl [5:00 PM]
shared sergio’s image: noise amp scale factor = 0.2 
noise amp scale factor = 0.2
billl [5:00 PM]
here is one of your sims from feb showing activity in I cells
sergio [5:01 PM]
for that one, I'm driving the cells with netstims
for the inh cells
billl [5:01 PM]
we prefer to use gfluct since faster than netstims; also easier to manage amp
sergio [5:01 PM]
ok
billl [5:02 PM]
want depol to get activity but low variability amp so don't obscure intrinsic osc
sergio [5:03 PM]
ok, let me work on it
billl [5:03 PM]
great;thx

** plan
add gfluct to PV cells and drive thanm with noise

* 05-17-18

goal: add noise to PV5 and induce gamma

*** added Gfluct to soma of PT5
added Gfluct via dict to soma of PT5 and added cfg.noise_PV5 on cfg.py
added cfg.exc_noise_amp_icells and cfg.exc_noise_amp_icells variables on cfg.py

netParams.cellParams['PV5']['secs']['soma']['pointps']= {'noise': {'loc': 0.5,
'std_e': 0.012*cfg.exc_noise_amp_icells,
'g_e0' : 0.0121, 
'tau_i': 10.49*cfg.noise_tau, 
'tau_e': 2.728*cfg.noise_tau, 
'std_i': 0.0264*cfg.inh_noise_amp_icells, 
'g_i0' : 0.0573, 
'E_e'  : cfg.e_exc_noise, 
'E_i'  : cfg.e_inh_noise, 
'mod'  : 'Gfluctp'}}

on init.py
changed list of pops to include PV5:
L5 = ['PT5_1', 'PT5_2', 'PT5_3', 'PT5_4', 'PV5']
 
and changed function myinit2 to add ramdomizer on PV5

def myinit2(): #different seed per cell
    for i,v in enumerate(L5):
        for c in sim.net.cells:
                if c.tags['pop'] in v:                  
                    for isec,sec in c.secs.iteritems():
                        if isec == 'soma_2':
                            for ip, pointp in enumerate(sec.pointps.values()):
                                if pointp['mod'] == 'Gfluctp':
                                    pointp.hPointp.noiseFromRandom123(c.gid, len(c.conns), ip)
                        elif isec =='soma':
                            for ip, pointp in enumerate(sec.pointps.values()):
                                if pointp['mod'] == 'Gfluctp':
                                    pointp.hPointp.noiseFromRandom123(c.gid, len(c.conns), ip)

*** plots
removed stim to apical of PT5 cells
cfg.exc_noise_amp_icells = 4.0
cfg.inh_noise_amp_icells = 1.0
[[./gif/network275_traces_gid_1000.png]]
[[./gif/network275_raster.png]]
 
** discussion on slack
billl [12:07 PM]
sergio - any osc?  joe can you help sergio out?
joe [12:08 PM]
Can do.  He just got gluct into inhib, so I am playing around.
gfluct
sergio [12:08 PM]
yep
billl [12:08 PM]
great
i'm only being slightly pushy here but this is for @salvadord -- netpyne supposed to make this kind of thing extremely (ok, very) easy .... so why did it take more than 5-10 min to add gfluct to a diff population?
sergio [12:12 PM]
the difference was adding gfluctp as a point process
billl [12:13 PM]
how was that different from using glfuctp in the E cells?
sergio [12:14 PM]
I used the method to add gfluctp on inh cells
just need to modify init.py as well
and verify that it was working
billl [12:15 PM]
so took ~10min?
or perhaps was problem that had to modify 2 different files?  why can't all be consolidated in 1 file?
sergio [12:17 PM]
it took a bit longer to check that it was correctly inserted in the soma, and on init.py to change the seed and every cell
billl [12:19 PM]
might be something to look into @salvadord unless something peculiar about inserting this particular mech -- would have hoped would be soemthing that one could just swap in and out
salvadord [12:24 PM]
if I remember correctly, there was something peculiar about gfluct in terms of setting the seeds — not a mod file parameter, but some func that needed to be called?
sergio [12:25 PM]
yes, the func need to be called at init.py
sergio [12:27 PM]
uploaded this image: inh cells driven by Gfluctp 
inh cells driven by Gfluctp
sergio [12:27 PM]
now need to work on the osc part
joe [12:30 PM]
uploaded this image: network275_traces.png 
network275_traces.png
joe [12:32 PM]
The way the trace flatlines (saturates?) at -80 seems a little odd to me…
sergio [12:33 PM]
I was thinking about it, I’m not sure why
joe [12:33 PM]
I’ll look into that.  Do you know what sort of firing rates we should be looking for in PV neurons?
sergio [12:36 PM]
on sam’s paper, ING is at 93Hz
joe [12:38 PM]
So we should really work to increase our firing rate, huh?
samn [12:43 PM]
doesn't look like interneurons inhibiting each other either
joe [12:44 PM]
Thanks, Sam! We’ll have to look into that also.
Message Input

*** plan
increase firing rate
increase II
check why flat volt trace at -80 mV

** exploring II
*** II gain 5, does not affect firing
[[./gif/network276_traces.png]]
[[./gif/network276_raster.png]]
no changes with previous sim, maybe Gfluctp alter Rm of ing cells

*** II gain 10
[[./gif/network277_traces.png]]
[[./gif/network277_raster.png]]
decreased firing 

*** II gain 20
[[./gif/network278_traces.png]]
[[./gif/network278_raster.png]]
less firing but not dramatical change

*** changed orig value for II
orig value = 0.00012
new value = 0.002

** discussion on slack
billl [1:22 PM]
gfluct var is too much I think
does gfluct offer a baseline? if not may need to combine with a iclamp depolarization
sergio [1:26 PM]
on that sim the amplitude of the exc syn noise is highly increased to induce firing, but also produce big var
for the baseline, do you mean changing the RMP?
bringing the cell to -60, and then less amp for the noise?
billl [1:38 PM]
y
sergio [1:39 PM]
ok, let me change that

*** plan
bring the RMP of inh cell to a more positive value


** change RMP for PV5
*** v_init for PV5
for now, v_init for PV5 is -70mV
need to create independen mech to control PV5
 
added on netParams:

for cell_label, cell_params in netParams.cellParams.iteritems():
  if  cell_label == 'PV5':          
    for secName,sec in cell_params['secs'].iteritems():         
        sec['vinit'] = cfg.vinit_PV5 

vinit_PV5 set to -60 mV

added control for e of exc and noise in PV5 cells

cfg.e_inh_noise_icells = cfg.vinit_PV5 - 30.0 
cfg.e_exc_noise_icells = cfg.vinit_PV5 + 70.0 


*** noise in inh cells
cfg.e_inh_noise_icells = cfg.vinit_PV5 - 30.0 
cfg.e_exc_noise_icells = cfg.vinit_PV5 + 80.0 
cfg.exc_noise_amp_icells = 1.0
cfg.inh_noise_amp_icells = 1.0
[[./gif/network280_traces.png]]
[[./gif/network280_raster.png]]


*** vinit -60 ang change param for amp and e 
cfg.e_inh_noise_icells = cfg.vinit_PV5 - 30.0 
cfg.e_exc_noise_icells = cfg.vinit_PV5 + 80.0 
cfg.exc_noise_amp_icells = 1.0
cfg.inh_noise_amp_icells = 0.22
[[./gif/network281_traces.png]]
[[./gif/network281_raster.png]]
RMP between -60 to -70

*** modify vinit to -55
cfg.e_inh_noise_icells = cfg.vinit_PV5 - 10.0 
cfg.e_exc_noise_icells = cfg.vinit_PV5 + 90.0 
cfg.exc_noise_amp_icells = 1.0
cfg.inh_noise_amp_icells = 0.22
[[./gif/network282_traces.png]]
[[./gif/network282_raster.png]]
increased firing

*** vinit -50
cfg.e_inh_noise_icells = cfg.vinit_PV5 - 10.0 
cfg.e_exc_noise_icells = cfg.vinit_PV5 + 90.0 
cfg.exc_noise_amp_icells = 1.0
cfg.inh_noise_amp_icells = 0.22
[[./gif/network283_traces.png]]
[[./gif/network283_raster.png]]
increased firing with inital sync spike, need to return to -55

*** vinit -55
cfg.e_inh_noise_icells = cfg.vinit_PV5 - 5.0 
cfg.e_exc_noise_icells = cfg.vinit_PV5 + 100.0 
cfg.exc_noise_amp_icells = 1.0
cfg.inh_noise_amp_icells = 0.22
[[./gif/network284_traces.png]]
[[./gif/network284_raster.png]]
nice firing

** discussion on slack
billl [5:23 PM]
that's an I cell?
sergio [5:23 PM]
yes
billl [5:24 PM]
are the I cells connected?
sergio [5:24 PM]
yes, I need to modify the II inputs weights
billl [5:25 PM]
ok; i'm guessing most of that now is just the gfluct?  so need to increase II ?
sergio [5:26 PM]
now mostly gfluct, I'm going to increase II
billl [5:27 PM]
looks good
sergio [5:27 PM]
ok

*** plan 
explore II

** slack discussion
joe [5:32 PM]
I notice the sim still has long connections to the PV cells…  Do we want to keep that turned on, or will Gfluct be sufficient?
sergio [5:34 PM]
let me turn them off. I did change the long cons weight to 0.0
billl [5:35 PM]
you mean netstims to PV?  -- prob want those removed since very time consuming and gfluct supposed to do all that
yeah for now can turn off weights

*** check netparams
long con was still on, but weight was 0.
turned off completely
re-run sim and firing changed 
selected another cell for plotting
raster seems similar rate
[[./gif/network285_traces.png]]
[[./gif/network285_raster.png]]

** II exploring 
*** Decreased II factor to 1.0
[[./gif/network286_traces.png]]
[[./gif/network286_raster.png]]
increased firing but no osc

*** decreased II factor to 0.5
[[./gif/network287_traces.png]]
[[./gif/network287_raster.png]]
higher firing rate but no osc

*** decreased II factor to 0.1
[[./gif/network288_traces.png]]
[[./gif/network288_raster.png]]
higher firing rate but no osc

* 05-18-18
goal: gamma osc

** exploring II
*** II gain 0.01
[[./gif/network289_traces.png]]
[[./gif/network289_raster.png]]
increased firing rate (74Hz), but not osc are induced. Also Bill pointed out that no IPSPs are observed.

*** II gain 0.001
[[./gif/network290_traces.png]]
[[./gif/network290_raster.png]]
similar rate to previous sim, osc

** slack discussion
billl [10:44 AM]
how's going?
may i download -- curious to see where things stand?  what is main repo?
sergio [10:45 AM]
everything is on the repo from joe
sergio [10:47 AM]
uploaded this image: network288_raster.png 
network288_raster.png
sergio [10:48 AM]
I can get the inh cells to fire in high freq but no osc
if I increase the II, the firing rate is decreased but no osc are induced
billl [10:48 AM]
what are the frequencies for individual cell?  -- looks too fast
where is joe repo?
sergio [10:49 AM]
inh pop rate is 74 Hz
billl [10:50 AM]
slow down to 10-20
maybe can do just with inc II
are seeing the IPSPs now?
sergio [10:51 AM]
uploaded this image: network288_traces.png 
network288_traces.png
sergio [10:51 AM]
IPSP are not clear
billl [10:51 AM]
don't see ipsps
so too weak II
sergio [10:53 AM]
uploaded this image: network285_raster.png 
network285_raster.png
sergio [10:53 AM]
this is with a stronger II
billl [10:53 AM]
IPSPs?
sergio [10:53 AM]
uploaded this image: network285_traces.png 
network285_traces.png
billl [10:54 AM]
still not much so in II and reduce iclamp?
repo?
sergio [10:54 AM]
/u/graham/projects/eee
billl [10:54 AM]
thx
joe [11:02 AM]
We’re working in: `/eee/sim/batches_network/batch_20180424`
billl [11:03 AM]
is that a sep repo?
joe [11:03 AM]
To run a sim, we: `cd /eee/sim/batches_network/batch_20180424/ ; ./runsim`
billl [11:03 AM]
k
joe [11:03 AM]
No, same repo.  Sergio and I merged our repos so we can work together more effectively, and stay synced better.
billl [11:03 AM]
great
so repo root is /u/graham/projects/eee/.hg ?
joe [11:04 AM]
Yeah.

*** plan
target rate 10-20Hz

** set new rate 10-20Hz
II gain 5.0 produce 11.8HZ

*** II gain 2.0
[[./gif/network291_traces.png]]
[[./gif/network291_raster.png]]
PV5 pop rate 19.1 Hz, no visible IPSPs

** discussion slack
sergio [12:15 PM]
uploaded this image: network291_raster.png 
network291_raster.png
sergio [12:15 PM]
the pop rate here is 19 Hz
billl [12:15 PM]
any ipsps?
sergio [12:16 PM]
uploaded this image: network291_traces.png 
network291_traces.png
sergio [12:16 PM]
no
instead of driving the inh cells with noise, is it better to use a current injection? like in the ketamine paper
samn [12:20 PM]
either one should work
might want to check time constants for gabaa synapses and also increase # of connections between I and I cells
sergio [12:22 PM]
perfect, let me check the # of connections and time constants
billl [12:22 PM]
i thought we were driving with IClamp?  and then adding some noise on top of that -- that's what we discussed yeterday remember?
sergio [12:24 PM]
I modified the  e  for the exc and inh noise to change the RMP, but I did not inject current
billl [12:25 PM]
doesn't e for the exc determine the max exursion?
or is that a baseline?
billlbilll
does gfluct offer a baseline? if not may need to combine with a iclamp depolarization
Posted in #eee-theoryYesterday at 1:24 PM
billlbilll
still not much so in II and reduce iclamp?
Posted in #eee-theoryToday at 10:54 AM
bbl
sergio [12:29 PM]
e will determine the max excurison


*** plan 
change e noise and inject current
check gaba time constants and number of inputs

** current injection
*** tunr off noise and current injection
current params:
ampl = 0.4
durat = 1000
cfg.IClamp1 = {'pop': 'PV5', 'sec': 'soma', 'loc': 0.5, 'start': 0, 'dur': durat, 'amp': ampl}

plots:
[[./gif/network292_traces.png]]
[[./gif/network292_raster.png]]
sync firing, slow osc 15Hz

*** turn-on noise and current inj
[[./gif/network293_traces.png]]
[[./gif/network293_raster.png]]
no sync, but ramdon firing

** joe added changes on RMP for PV5 and PT5
joe [1:02 PM]
Hey Serg, there’s a problem with RMP.
You’re trying to set RMP by changing vinit, but all vinit does is set the initial voltage for starting the simulation.
e_pas is what controls RMP
sergio [1:06 PM]
I see
sergio [1:12 PM]
e_pas should be under this: `[sec]['mechs']['pas']['e']`?
joe [1:12 PM]
I’m fixing it now.  Gimme a sec and I’ll push.
joe [1:12 PM]
added this Python snippet: Untitled 

  for secName,sec in cell_params['secs'].iteritems():     

    sec['vinit'] = cfg.vinit_PV5

​

    if 'pas' in sec['mechs']:

​

      if sec['mechs']['pas']['e'] != cfg.vinit_PV5:

      

        print(cell_label)

        print(secName)

        print("e_pas orig:")

        print(sec['mechs']['pas']['e'])

        sec['mechs']['pas']['e'] = cfg.vinit_PV5

        print("e_pas new:")

        print(sec['mechs']['pas']['e'])

joe [1:13 PM]
sec[‘mechs’][‘pas’][‘e’]
sergio [1:14 PM]
great let me add this
joe [1:19 PM]
I just pushed to repo.  I also fixed PT5.
sergio [1:19 PM]
thanks Joe! I'll pull the changes
joe [1:20 PM]
Perfect.

** explore current injection amp
II gain = 2.0
*** no noise, i-clamp 0.2
[[./gif/network295_traces.png]]
[[./gif/network295_raster.png]]
decrease firing rate (3.33Hz)

*** no noise, iclamp 0.0
[[./gif/network296_traces.png]]
RMP around -65mV

*** no noise, iclamp 0.6 
[[./gif/network297_traces.png]]
[[./gif/network297_raster.png]]
increased freq  (26,66)

*** no noise, iclamp 0.8
[[./gif/network298_traces.png]]
[[./gif/network298_raster.png]]
increased freq (33.33)

*** no noise, iclamp 0.2, II =1.0
[[./gif/network299_traces.png]]
[[./gif/network299_raster.png]]
in compare to prev sim, increase freq from 3.33 to 5.0

*** no noise, iclamp 0.2, II =0.1
[[./gif/network300_traces.png]]
[[./gif/network300_raster.png]]
still freq of 5.0, but smaller IPSP, shorter ISI

*** no noise, iclamp 0.4, II =0.1
[[./gif/network301_traces.png]]
[[./gif/network301_raster.png]] 
freq 96 Hz

*** no noise, iclamp 0.3, II =0.1 
[[./gif/network302_traces.png]]
[[./gif/network302_raster.png]]
freq 66Hz
 
*** no noise, iclamp 0.3, II=0.0
[[./gif/network303_traces.png]]
[[./gif/network303_raster.png]]
freq 111 Hz, totally dependent of the intrinsic properties 

*** noise, iclamp 0.3, II =0.1
[[./gif/network304_traces.png]]
[[./gif/network304_raster.png]]
spikelets, and ramdon firing

*** noise amp 0.0, iclamp 0.3, II = 0.1
[[./gif/network305_traces.png]]
spikelets

*** noise amp 0.0, e exc noise -55, iclamp 0.3, II 0.1
[[./gif/network306_traces.png]]
previous value for e exc noise was -70
no spikelets, no noise

*** noise amp exc 0.0, inh 0.22, e exc noise -55, iclamp 0.3, II 0.1
[[./gif/network307_traces.png]]
[[./gif/network307_raster.png]]
noise low amplitude, no spikelets

* 05-21-18
goal: oscillations

** exploring noise amp exc 
*** noise amp exc 0.1, inh 0.22, e exc noise -55, iclamp 0.3, II 0.1
[[./gif/network308_raster.png]]
[[./gif/network308_traces.png]]
still some spikelets

*** noise amp exc 0.01, inh 0.22, e exc noise -55, iclamp 0.3, II 0.1
[[./gif/network309_traces.png]]
[[./gif/network309_raster.png]]
no spikelets 

** increasing current injection
*** increasing iclamp amp to 0.4 to induce higher inh bkg
noise amp exc 0.01, inh 0.22, e exc noise -55, iclamp 0.4, II 0.1
[[./gif/network310_traces.png]]
[[./gif/network310_raster.png]]
increasing freq but also spikelets

*** increasing iclamp amp to 0.5
noise amp exc 0.01, inh 0.22, e exc noise -55, iclamp 0.5, II 0.1
[[./gif/network311_traces.png]]
[[./gif/network311_raster.png]]
increased freq, but more spikelets

** modifying Ra and Rm in PV5
*** addition to netParams 
if hasattr(cfg, 'RmScale_PV5'):
            if type(sec['mechs']['pas']['g']) == list:
                sec['mechs']['pas']['g'] = list((1.0/cfg.RmScale_PV5) * np.array(sec['mechs']['pas']['g']))
            elif type(sec['mechs']['pas']['g']) == float:
                sec['mechs']['pas']['g'] = (1.0/cfg.RmScale_PV5) * sec['mechs']['pas']['g']
            else:
                raise Exception("Error occurred adjusting RmScale in " + cell_label + ", " + secName)
if hasattr(cfg, 'RaScale'):
            orig_ra = sec['geom']['Ra']
            sec['geom']['Ra'] = cfg.RaScale_PV5 * sec['geom']['Ra']

*** cfg.py new parameter control cfg.RmScale_PV5 and cfg.RaScale_PV5

*** RaScale = 0.7, RmScale=1.0
[[./gif/network312_traces.png]]
[[./gif/network312_raster.png ]]
no spikelets, Firing rate 18.5Hz

*** RaScale= 0.7, RmScale =10.0
[[./gif/network313_traces.png]]
[[./gif/network313_raster.png]]
no spikelets, firing rate 27.7 Hz

*** RaScale = 0.7, RmScale =20.0
[[./gif/network314_traces.png]]
[[./gif/network314_raster.png]]
no spikelets, firing rate 28.2 Hz

*** RaScale =0.7, RmScale = 5.0 
[[./gif/network315_traces.png]]
[[./gif/network315_raster.png]]
no spikelets, firing rate 26.6Hz
selecting Rm 5.0

*** RaScale = 0.1, RmScale =2.0
[[./gif/network316_traces.png]]
[[./gif/network316_raster.png]] 
no spikelets, firing rate 23.4Hz

** modyfing exc noise amp
RmScale = 5.0
*** exc noise = 0.1
previous value == 0.001
[[./gif/network317_traces.png]]
[[./gif/network317_raster.png]]
Higher firing rate, 29.8Hz

*** exc noise = 0.22
[[./gif/network318_traces.png]]
[[./gif/network318_raster.png]]
firing rate 38.4 Hz

*** exc noise = 0.44
[[./gif/network319_traces.png]]
[[./gif/network319_raster.png]]
firing rate 52.35Hz

*** exc noise = 0.66
[[./gif/network320_traces.png]]
[[./gif/network320_raster.png]]
firing rate 60.1

*** exc noise = 0.88
[[./gif/network321_traces.png]]
[[./gif/network321_raster.png]]
firing rate 66.5

*** exc noise = 1.0
[[./gif/network322_traces.png]]
[[./gif/network322_raster.png]]
firing rate 68.8 Hz

*** selected 0.88 for exc noise amp

** exploring II
orig value II = 0.1

*** II = 0.5, conv 12
[[./gif/network323_traces.png]]
[[./gif/network323_raster.png]]
decreased firing (36.7Hz in compare to 66.5Hz from network321) and no osc

*** II = 1.0, conv 12
[[./gif/network324_traces.png]]
[[./gif/network324_raster.png]]
decreased firing (24.7 Hz) and no osc

*** II = 0.5, conv 24
[[./gif/network325_traces.png]]
[[./gif/network325_raster.png]]
decreased firing rate (24.5Hz from 36.7Hz) but no osc. IPSP probably

*** II = 0.5, conv 36
[[./gif/network326_traces.png]]
[[./gif/network326_raster.png]]
decreased firing rate (18.5Hz) no osc, no IPSP

*** II =1.0, conv 24
[[./gif/network327_traces.png]]
[[./gif/network327_raster.png]]
decreased firing rate (15.5 in compare 24.7Hz)

*** II =1.0, conv 36
[[./gif/network328_traces.png]]
[[./gif/network328_raster.png]]
decreased firing (11.6 Hz) no osc, no IPSP

*** decreasing Ra get rids of spikelets
RaScale =0.5, II 1.0, II conv 24
[[./gif/network329_traces.png]]
[[./gif/network329_raster.png]]
no spikelets, no osc, firing rate 17.4

*** II 1.0, II conv 12, Ra 0.5
[[./gif/network330_traces.png]]
[[./gif/network330_raster.png]]
higher firing rate 26.4 Hz. no osc 

* 05-22-18

** 2x2 experiment from last meeting 
- plat/apstim; noplat/apstim; plat/noap; noplat/noap
*** plat/apstim
[[./gif/network331_traces.png]]
[[./gif/network331_raster.png]]

** meeting
- bill: start current injections at different times
- mh: II osc depend on the delay, and weight
- bill: try II 10.0 or 100.0
- bill: use a fix delay, explore II, no noise

** set a fix delay for II  
original delay:
defaultDelay+dist_3D/propVelocity

default delay = 2.0
propVelocity = 100.0

*** new delay (2.0) no noise 
new delay = 2.0
iclamp amp = 0.4 
[[./gif/network332_traces.png]]
[[./gif/network332_raster.png]]
osc at 18.33 Hz

*** old delay
[[./gif/network333_traces.png]]
[[./gif/network333_raster.png]]
slight slower than previous sim

*** delay 4.0
[[./gif/network334_traces.png]]
[[./gif/network334_raster.png]]
slight slower than delay at 2.0 ms

*** delay 5.0
[[./gif/network335_traces.png]]
[[./gif/network335_raster.png]]
slower freq than delay 2.0

* 05-23-18
goal: different times for current injection
** creating different times for current injections
*** selecting one cell per iclamp
on netParams added 'cellList' to stimTargetParams
netParams.stimTargetParams[key+'_'+params['pop']] =  {
          'source': key,
          'conds': {'pop': params['pop'], 'cellList': params['cellList']},
          'sec': params['sec'],
          'loc': params['loc']}

on cfg.py:
cfg.IClamp1 = {'pop': 'PV5','cellList': [0], 'sec': 'soma', 'loc': 0.5, 'start': 0, 'dur': durat, 'amp': ampl}

*** plot
[[./gif/network336_traces.png]]
[[./gif/network336_raster.png]]
one cell with iclamp

*** change different times
adding loop on netParams

if cfg.addIClamp:
    for key in [k for k in dir(cfg) if k.startswith('IClamp')]:
        params = getattr(cfg, key, None)
        
        for i in range(numcellsPV5):
          # add stim source
          netParams.stimSourceParams[str(key)+'_'+str(i)] = {
            'type': 'IClamp',
            'del': i,#params['start'],
            'dur': params['dur'],
            'amp': params['amp']}    

          # connect stim source to target
          netParams.stimTargetParams[str(key)+'_'+str(i)+'_'+params['pop']] =  {
            'source': str(key)+'_'+str(i),
            'conds': {'pop': params['pop'], 'cellList': [i]},#params['cellList']},
            'sec': params['sec'],
            'loc': params['loc']}

*** plots different times
1 netstim evry 1ms
[[./gif/network336_traces.png]]
[[./gif/network336_raster.png]]
iclamp starting at different times 

*** longer sim 2000 ms
[[./gif/network338_traces.png]]
[[./gif/network338_raster.png]]
no gamma osc, but interesting volt traces and raster

** exploring time between iclamp  starting times
II =1.0
*** 1 iclamp every 0.5 ms
[[./gif/network339_traces.png]]
[[./gif/network339_raster.png]]
no gamma osc

*** 1 iclamp every 0.25 ms
[[./gif/network340_traces.png]]
[[./gif/network340_raster.png]]
no gamma osc

*** 1 iclamp every 1/8 ms
[[./gif/network341_traces.png]]
[[./gif/network341_raster.png]]
no gamma osc

*** 1 iclamp every 1/16 ms
[[./gif/network342_traces.png]]
[[./gif/network342_raster.png]]
no gamma osc 

*** 1 iclamp every 1/32 ms 
[[./gif/network343_traces.png]]
[[./gif/network343_raster.png]]
no gamma osc

*** 1 iclamp every 1/64 ms
[[./gif/network344_traces.png]]
[[./gif/network344_raster.png]]
early sync

*** 1 iclamp every 1/128 ms gamma osc
[[./gif/network345_traces.png]]
[[./gif/network345_raster.png]]
gamma  osc

** exploring II
*** II 0.1, iclamp 1/64
[[./gif/network346_traces.png]]
[[./gif/network346_raster.png]]
early sync but later random firing

*** II 0.05, iclamp 1/64
[[./gif/network347_traces.png]]
[[./gif/network347_raster.png]]

*** II 0.1, iclamp 1/32 
[[./gif/network348_traces.png]]
[[./gif/network348_raster.png]]

* 05-24-18
goal: ING

** exploring II
*** II 0.05
[[./gif/network349_traces.png]]
[[./gif/network349_raster.png]]
no sync

** explore amp current injection
iclamp prev value 0.4
*** iclamp 0.3, II 1.0
[[./gif/network350_traces.png]]
[[./gif/network350_raster.png]]
not sync

*** iclamp 0.3, II 0.1
[[./gif/network351_traces.png]]
[[./gif/network351_raster.png]]
initial random, then sync

*** iclamp 0.3, II 0.5
[[./gif/network352_traces.png]]
[[./gif/network352_raster.png]]
no osc

*** explore II delay
II delay previous value: 5.0 ms
iclamp 0.3
II weight: 0.1

*** II delay 1.0
[[./gif/network353_traces.png]]
[[./gif/network353_raster.png]]
nice osc, minimal changes with network351(delay 5.0)

*** II delay 3.0
[[./gif/network354_traces.png]]
[[./gif/network354_raster.png]]
faster sync than delay 1.0, and delay 5.0

** check different times for iclamp start
previous values 
iclamp 1/32
II delay 3.0

*** iclamp 1/16
[[./gif/network355_traces.png]]
[[./gif/network355_raster.png]]
gamma osc 

*** iclamp 1/8
[[./gif/network356_traces.png]]
[[./gif/network356_raster.png]]
gamma osc

*** iclamp 1/4
[[./gif/network357_traces.png]]
[[./gif/network357_raster.png]]
gamma osc

*** iclamp 1/2
[[./gif/network358_traces.png]]
[[./gif/network358_raster.png]]
sync


*** iclamp every 1 ms 
[[./gif/network359_traces.png]]
[[./gif/network359_raster.png]]


** explore II 
previous value II 0.1
*** II 1.0
[[./gif/network360_traces.png]]
[[./gif/network360_raster.png]]
no sync

*** II 0.0
[[./gif/network361_traces.png]]
[[./gif/network361_raster.png]]
no sync

** discussion on slack
sergio [4:01 PM]
using the II 0.1 induces the sync in the PV5 cells
billl [4:03 PM]
yup
when we say different times they should only be apart by a 10-20 ms not 100s but dm
want them distributed across ~1/2 cycle
now can add some gfluct and see
start with low ampliktude
can show mh and see if he has any suggestions
are all the delays II delays the same now?
sergio [4:05 PM]
delays are the same
3.0 ms
I tried 3 values, but the differences are not drastic
ok, let me try with low amplitude noise
billl [4:07 PM]
k
@michaelhinescheshire -- ING (II) osc results

*** plan
reduce the time between iclamps
insert noise low amplitide

** adding noise to PV5
change difference time iclamps to 1/32 ms
change RmScale to 5.0
change RaScale to 0.5

*** plots
[[./gif/network362_traces.png]]
[[./gif/network362_raster.png]]
no sync, no clear IPSP 

** II exploring
*** II 1.0
[[./gif/network363_traces.png]]
[[./gif/network363_raster.png]]
decrease firing rate, no osc, no clear IPSP

*** II 10.0
[[./gif/network364_traces.png]]
[[./gif/network364_raster.png]]
decrease firing rate, no osc, maybe IPSP

*** II 100.0
[[./gif/network365_traces.png]]
[[./gif/network365_raster.png]]
decrease firing rate, no osc, clear IPSP

*** II 50.0
[[./gif/network366_traces.png]]
[[./gif/network366_raster.png]]
low firing rate, no osc, IPSP

*** II 30.0
[[./gif/network367_traces.png]]
[[./gif/network367_raster.png]]
low firing rate, no osc, no clear IPSP

 
* 05-25-18
goal: get gamma with noise

** explore low amp noise
previous params:
cfg.exc_noise_amp_icells = 0.22*4.0 
cfg.inh_noise_amp_icells = 0.22
cfg.e_inh_noise_icells = cfg.vinit_PV5 - 10.0 
cfg.e_exc_noise_icells = cfg.vinit_PV5 + 55.0

II =1.0
*** exc noise amp = 0.22
[[./gif/network368_traces.png]]
[[./gif/network368_raster.png]]
low low firing rate

*** exc noise amp = 0.22*2
[[./gif/network369_traces.png]]
[[./gif/network369_raster.png]]
better firing rate, no osc, some IPSP

*** exc noise amp = 0.22*3
[[./gif/network370_traces.png]]
[[./gif/network370_raster.png]]
increased freq, no osc

*** exc noise = 0.22, inh noise = 0.22 *2
[[./gif/network371_traces.png]]
[[./gif/network371_raster.png]]
low freq, no osc, no clear IPSP

** error message
Traceback (most recent call last):
  File "netParams.py", line 3, in <module>
    import numpy as np
  File "/tmp/pip-build-ogON96/numpy/numpy/__init__.py", line 142, in <module>
    
  File "/usr/site/python/numpy/add_newdocs.py", line 13, in <module>
    from numpy.lib import add_newdoc
ImportError: No module named lib

*** asked on slack
mohamed.sherif [12:01 PM]
yeah - just got that as well
sergio [12:01 PM]
ok
mohamed.sherif [12:02 PM]
I think something related to the upgrade - checking that now
sergio [12:02 PM]
ok, thanks

** noise exploring

*** exc noise = 0.22, inh noise = 0.22 *3
[[./gif/network372_traces.png]]
[[./gif/network372_raster.png]]
increased freq, no osc, no clear IPSP

*** exc noise = 0.22, inh noise = 0.22 *4
[[./gif/network373_traces.png]]
[[./gif/network373_raster.png]]
higher frequency, no osc

* 05-28-18
goal: noise and osclation

** explore inh noise amp
*** inh noise amp 0.22 *4
[[./gif/network374_traces.png]]
[[./gif/network374_raster.png]]
higher freq, no osc

*** inh noise amp 0.22 *8
[[./gif/network375_traces.png]]
[[./gif/network375_raster.png]]
higher freq, no osc

*** inh noise amp 0.22*12
[[./gif/network376_traces.png]]
[[./gif/network376_raster.png]]
higher freq, no osc

** decrease noise amp
iclamp 0.8
RmScale 30.0 
*** exc and inh noise 0.22*0.1
[[./gif/network377_traces.png]]
[[./gif/network377_raster.png]]
no osc, no IPSP

*** exc and inh noise 0.22*0.01
[[./gif/network378_traces.png]]
[[./gif/network378_raster.png]]
no osc, no IPSP 

*** RmScale 50.0
[[./gif/network379_traces.png]]
[[./gif/network379_raster.png]]
no osc, no IPSP

*** RmScale 100.0
[[./gif/network380_traces.png]]
[[./gif/network380_raster.png]]
no osc, no IPSP

*** RmScale 100.0, II conv 24
[[./gif/network381_traces.png]]
[[./gif/network381_raster.png]]
no osc, no IPSP

* 05-29-18
goal: meeting and ING with noise 

** gamma with noise
orig values
II conv 12
II 0.1
iclamp 0.8
cfg.exc_noise_amp_icells = 0.22*0.01 
cfg.inh_noise_amp_icells = 0.22*0.01
cfg.RmScale_PV5= 100.0
cfg.RaScale_PV5= 0.5
iclamp start 1/32
*** II 0.1 --ING
[[./gif/network382_traces.png]]
[[./gif/network382_raster.png]]
ING 97.6 Hz

*** II 0.1, iclamp 0.6
[[./gif/network383_traces.png]]
[[./gif/network383_raster.png]]
no ING

*** II 0.1, iclamp 0.7
[[./gif/network384_traces.png]]
[[./gif/network384_raster.png]]
ING 60.6Hz

*** II 0.1, iclamp 0.7, Rm 50.0
[[./gif/network385_traces.png]]
[[./gif/network385_raster.png]]
ING 60.7 Hz

*** II 0.1, iclamp 0.7, Rm 5.0
[[./gif/network386_traces.png]]
[[./gif/network386_raster.png]]
ING 57.3 Hz

***  II 0.1, iclamp 0.7, Rm 1.0
[[./gif/network387_traces.png]]
[[./gif/network387_raster.png]]
no osc 

*** II 0.1, iclamp 0.7, Rm 5.0, exc-inh noise 0.22*0.1
[[./gif/network388_traces.png]]
[[./gif/network388_raster.png]]
no osc

*** II 0.1, iclamp 0.7, Rm 5.0, exc-inh noise 0.22*0.05
[[./gif/network389_traces.png]]
[[./gif/network389_raster.png]]
ING 56.6Hz

*** II 0.1, iclamp 0.7, Rm 5.0, exc-inh noise 0.22*0.075
[[./gif/network390_traces.png]]
[[./gif/network390_raster.png]]
ING 56 Hz, better noise

*** II 0.1, iclamp 0.7, Rm 5.0, exc-inh noise 0.22*0.075, iclamp start 1/64
[[./gif/network391_traces.png]]
[[./gif/network391_raster.png]]
ING 56.5 Hz, shorter time diff start for iclamp (total time 7.8 ms), better sync

*** iclamp starting time diff
bill suggested 10-20 ms for the iclamp starting total difference 
use iclamp time difference 1/32ms that makes 15.6 ms for the 500 PV cells

***  II 0.0, iclamp 0.7, Rm 5.0, exc-inh noise 0.22*0.075, iclamp start 1/32
[[./gif/network392_traces.png]]
[[./gif/network392_raster.png]]
no osc firing rate 108 Hz

*** II 1.0, iclamp 0.7, Rm 5.0, exc-inh noise 0.22*0.075, iclamp start 1/32
[[./gif/network393_traces.png]]
[[./gif/network393_raster.png]]
no osc firing rate 14.2 Hz


** no noise 
*** iclamp 1/32, II 0.1
[[./gif/network394_traces.png]]
[[./gif/network394_raster.png]]
ING 59 Hz

*** iclamp 1/32, II 0.0
[[./gif/network395_traces.png]]
[[./gif/network395_raster.png]]
no osc 108.9 Hz

*** iclamp 1/32, II 1.0
[[./gif/network396_traces.png]]
[[./gif/network396_raster.png]]
no osc 14.9 Hz

** meeting
https://docs.google.com/presentation/d/1IQ9087qbh3FfTbwJDgBR91nKo5cUjxgv2_Q86WxpYJw/edit?usp=sharing

*** bill: switch to work with plateaus 
** discussion on slack
billl [12:19 PM]
i'm just putting stuff in eee/  prob not the right place?
i'm still not understanding the repo organazation??
joe [12:20 PM]
Yeah, we were trying to work in the same dir to keep from diverging, but it’s a bit awkward.
billl [12:21 PM]
yes hard to manage -- so guess need a central one but only push back stuff that want to share??
or else keep 3 subdirs -- 1 for each of us
and then copy to the .. stuff for sharing?
that might be less confusing?
joe [12:21 PM]
I think the subdirs is a good idea.
billl [12:22 PM]
ok so add those
sergio joe billl subha
and i'll move stuff into mine
joe [12:22 PM]
Sergio, why don’t you keep working in `eee/sim/batches_network/batch_20180424` and I’ll make myself a dir `eee/sim/batches_network/batch_joe`
sergio [12:22 PM]
perfect
joe [12:23 PM]
I’ll make Bill and Subha a subdir also.
sergio [12:24 PM]
let me know so I can pull the changes
billl [12:25 PM]
let's not put all of us superdeep in the dir struct - i'll never find myself 1 mon from now!
just eee/billl eee/sergio ... ?? - or keep sergio where he is i guess
joe [12:34 PM]
Okay, I pushed with the added subdirs.  I changed Sergio’s from `batch_20180424` to `batch_sergio` for consistency
Bill, you’ve now got a subdir with everything needed to run network sims: `/u/graham/projects/eee/sim/batches_network/batch_bill`
billl [12:37 PM]
thx
sergio [12:38 PM]
do we need to compile again?
ok, I compiled and it is working in the new subdir
joe [12:41 PM]
Great.  Running `/u/graham/projects/eee/setup.py` will compile and symlink to x86_64

*** plan
switch to work on eee/sim/batches_network/batch_sergio/

** back to plateaus
*** gamma with osc 
[[./gif/network397_traces.png]]
[[./gif/network397_raster.png]]

*** gamma with fast sync
iclamp diff 1/64
[[./gif/network398_traces.png]]
[[./gif/network398_raster.png]]
faster sync

*** stim to basal
IE = 0.0001
[[./gif/network399_traces.png]]
[[./gif/network399_raster.png]]
plateau disrupt gamma
 
*** IE 0.1
[[./gif/network400_traces.png]]
[[./gif/network400_raster.png]]
less disruption of gamma

*** IE 1.0
[[./gif/network401_traces.png]]
[[./gif/network401_raster.png]]
plateau but no spikes 

* 05-30-18
goal: work on plateaus, try new gfluct

** discussion on slack about gfluctp

billl [9:04 PM]
salva -- ready to be added to netpyne

salvadord [9:11 PM]
Ok cool, point me to simple example please

billl [10:45 PM]
/u/billl/nrniv/eee/billl/gfluctp.py using /usr/site/nrniv/local/mod/Gfluctp.mod

salvadord [10:46 PM]
thx


salvadord [11:05 PM]
instead of hard-coding in netpyne made it so `'gid'` is converted to the actual cell gid when used as value of point process params
so now can do e.g.: `['pointps']= {'noise': {'mod'  : 'Gfluctp', 'loc': 0.5, 'seed1': 'gid', 'seed2': sim.id32('gfluctp'), 'seed3': cfg.seeds['stim']}}`
note: sim.id32() is hash func to convert string to int
pushed to netpyne dev branch
please let me know if it works and produces same result

billl [8:55 AM]
sergio -- you want to give this a try?

sergio [10:38 AM]
sure

*** plan 
try new method to add noise 

** discussion on slack about message errors
sergio [10:38 AM]
sure

sergio [11:02 AM]
added this Objective-C snippet: error message gfluctp netpyne 
Traceback (most recent call last):
 File "netParams.py", line 98, in <module>
  netParams.cellParams['PT5_1']['secs'][sec]['pointps']= {'noise': {'mod' : 'Gfluctp', 'loc': 0.5, 'seed1': 'gid', 'seed2': sim.id32('gfluctp'), 'seed3': cfg.seeds['stim']}}
NameError: name 'sim' is not defined

billl [11:02 AM]
sim is part of netpyne

sergio [11:02 AM]
ok

billl [11:03 AM]
from netpyne import sim
does that line belong in params or in init?
joe you want to try this also?

sergio [11:04 AM]
ok I just added the `from netpyne import sim` in netParams.py and I don’t have the error. let me run the sim

sergio [11:08 AM]
added this Perl snippet: error while running sim 
Creating network of 6 cell populations on 1 hosts...
Traceback (most recent call last):
 File "init.py", line 84, in <module>
  sim.net.createCells()            # instantiate network cells based on defined populations
 File "/usr/site/nrniv/local/python/netpyne/netpyne/network.py", line 76, in createCells
  newCells = ipop.createCells() # create cells for this pop using Pop method
 File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 58, in createCells
  cells = self.createCellsFixedNum()
 File "/usr/site/nrniv/local/python/netpyne/netpyne/pop.py", line 138, in createCellsFixedNum
  cells.append(self.cellModelClass(gid, cellTags)) # instantiate Cell object
 File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 229, in __init__
  if create: self.create() # create cell 
 File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 271, in create
  self.createNEURONObj(prop) # add sections, mechanisms, synaptic mechanisms, geometry and topolgy specified by this property set
 File "/usr/site/nrniv/local/python/netpyne/netpyne/cell.py", line 491, in createNEURONObj
  setattr(sec['pointps'][pointpName]['hPointp'], pointpParamName, pointpParamValue)
TypeError: a float is required
Collapse 

billl [11:09 AM]
did you install lastest netpyne?
looks like old one

sergio [11:10 AM]
this is `ag`
let me check the version

billl [11:10 AM]
did you install latest netpyne?
guessing not so please install

sergio [11:11 AM]
added this Plain Text snippet: netpyne on ag 
In [1]: import netpyne
In [2]: netpyne.__version__
Out[2]: '0.7.7'

billl [11:11 AM]
salva did you install latest netpyne?;  i'm guess he did not so please install sergio

sergio [11:18 AM]
I don’t have the permissions to update netpyne on neurosim
`cd /usr/site/nrniv/local/python/netpyne; git pull`

billl [11:19 AM]
who has permissions?
which branch is that btw? - is that the dev branch?

sergio [11:21 AM]
this is the dev branch

billl [11:22 AM]
who has permssions?

salvadord [11:26 AM]
oh sorry, let me update
dine
done

billl [11:28 AM]
maybe give group permissions so other people can pull?

salvadord [11:28 AM]
done

drwxrwxr-x  6 salvadord    lab      4.0K May 30 11:27 netpyne/

sergio [11:33 AM]
I’m still having the same error. New netpyne version 0.7.8

billl [11:40 AM]
salva?
you sure is dev branch sergio?
don't think the versioning number means much -- need the gitid

salvadord [11:41 AM]
oh wait, might need to convert int to float
give me pointer to your code sergio, and I’ll try

sergio [11:44 AM]
`/u/sergioangulo/projects/eee_repo/eee/sim/batches_network/batch_sergio/netParams.py`

joe [11:48 AM]
uploaded and commented on this image: network401_raster.png 

It runs for me…

billl [11:49 AM]
on neurosim?

joe [11:49 AM]
Sergio, have you recompiled?  Bill got Gfluctp working last night.
On my own machine.  Let me try on nsim

billl [11:50 AM]
are you using salvas new param settings for seeds?

sergio [11:51 AM]
I just pushed the changes that show the error, can you try again Joe?

joe [11:51 AM]
Oh, thanks Sergio.  Yeah, I just realized it wasn’t running the new stuff.
Gimme a sec.
Okay, I get the same error.  Looking into it.

billl [11:55 AM]
didn't salva indicate that needs to do float conversion?  - waiting for him to push i think

salvadord [12:01 PM]
y working on it
fixed and updated no
(sorry, silly bug, had ‘==’ instead of ‘=’ )

sergio [12:03 PM]
no problem, thanks Salva!

joe [12:08 PM]
Thanks Salva! It works for me now.

*** new method to have seeds on  gfluct
[[./gif/network402_traces.png]]
[[./gif/network402_raster.png]]
new gfluct have different amp

checking and the amp is not the problem

need to still call function from init.py

*** calling noiseFromRando123 in init.py
[[./gif/network403_traces.png]]
[[./gif/network403_raster.png]]
noise is working

*** joe fixed the problem, need to make a new copy of the repo

*** plots with gfluct
[[./gif/network404_traces.png]]
[[./gif/network404_raster.png]]
plateau and spikes in some cells

** discussion on slack 
billl [12:09 PM]
are we all set to move back into plateau sims?

joe [12:10 PM]
Yeah, should be good to go now.

billl [12:11 PM]
did you guys want to try a little variation in Iin in addition to the small amount of gfluct to mix things up a little?  since this set of cells is simply meant to provide an input not sure that this is really useful -- in fact we could just use a much small set of cells -- maybe 50 instead of 500?

joe [12:14 PM]
Do you mean the current clamp into inhib cells?
To get more variability in the inhib pop?

billl [12:19 PM]
yeah on one hand that suggestion was made by mh but on other hand i feel like we're wasting too much time on this set of inputs which aren't really a part of our story
all we wanted was some osc bg and could have just set that up by hand
via netstims

sergio [12:24 PM]
the idea would be to generate netstims at gamma or theta and have inputs to the exc cells?

billl [12:24 PM]
coiuld do that way too
here we've mostly been working on gamma -- what is freq ?
since have done all this work can try this way to start

sergio [12:27 PM]
the inh cells are firing around 60 Hz

billl [12:27 PM]
k

sergio [12:31 PM]
but the idea is to get the plateaus dependent of the properties of the network rather than the external inputs

billl [12:45 PM]
that was what joe was going to work on now;  you were goig to continue with the extenral inputs and try to write this up

sergio [12:46 PM]
ok

*** plan 
work with external inputs,  gamma and theta

* 05-31-18
goal: external stim to network on gamma 

** second stim to apical dend 
plateu stim to basal dend
stim freq 60 Hz

*** apical stim amp 1.0
[[./gif/network405_traces.png]]
[[./gif/network405_raster.png]]
low amplitude to apical dend,it  does not induce EPSP

*** apical stim amp 2.0
[[./gif/network406_traces.png]]
[[./gif/network406_raster.png]]
increased sync only in plateu cells, and disruption of gamma in inh, small EPSP

*** apical stim amp 3.0
[[./gif/network407_traces.png]]
[[./gif/network407_raster.png]]

increased sync during plateau, disruption of gamma, slightly better EPSP

*** apical stim amp 1.0 at 80 Hz
[[./gif/network408_traces.png]]
[[./gif/network408_raster.png]]
similar spiking profile in exc cells in compare to 60 Hz, but more disruption of gamma.

*** apical stim amp 2.0 at 80 Hz
[[./gif/network409_traces.png]]
[[./gif/network409_raster.png]]
similar spiking profile in exc cells in compare to 60 Hz, but more disruption of gamma.
no clear sync

*** apical stim amp 3.0 at 80 Hz
[[./gif/network410_traces.png]]
[[./gif/network410_raster.png]]
similar spiking profile in exc cells in compare to 60 Hz, but more disruption of gamma.
clear sync

*** apical stim amp 1.0 at 100 Hz
[[./gif/network411_traces.png]]
[[./gif/network411_raster.png]]
higher freq than 60Hz. 

*** apical stim amp 2.0 at 100 hz
[[./gif/network412_traces.png]]
[[./gif/network412_raster.png]]
higher freq, no sync

*** apical stim amp 3.0 at 100 Hz
[[./gif/network413_traces.png]]
[[./gif/network413_raster.png]]
nice firing, and sync that can be seen at inh cells also.

*** apical stim amp 1.0 at 40 Hz
[[./gif/network414_traces.png]]
[[./gif/network414_raster.png]]
no sync

*** apical stim amp 2.0 at 40 Hz
[[./gif/network415_traces.png]]
[[./gif/network415_raster.png]]
sync, clear EPSP, sync to inh cells also

*** apical stim amp 3.0 at 40 Hz
[[./gif/network416_traces.png]]
[[./gif/network416_raster.png]]
sync on plateau cells and into inh cells.

** explore EE
oirginal EE value 1.0
stim amp 3.0 at 40Hz
*** EE 7.5
[[./gif/network417_traces.png]]
[[./gif/network417_raster.png]]
sync accross exc cells

non plateau cells
[[./gif/network417_traces_gid_126.png]]
[[./gif/network417_traces_gid_125.png]]
plateau induced by the network activity

* 06-04-18
goal: gamma stim and plateau

** explore EE
*** 40 Hz, stim amp 1.0, EE 7.5
[[./gif/network418_traces_gid_0.png]]
[[./gif/network418_traces_gid_126.png]]
[[./gif/network418_raster.png]]
no sync across plateau/non-plateau cells, no plateau on non-plateau cells.

***  40 Hz, stim amp 2.0, EE 7.5
[[./gif/network419_traces_gid_126.png]]
[[./gif/network419_traces_gid_0.png]]
[[./gif/network419_raster.png]]
no sync across plateau/non-plateau cells, no plateau on non-plateau cells.

*** 60 Hz, stim amp 1.0, EE 7.5
[[./gif/network420_traces_gid_126.png]]
[[./gif/network420_traces_gid_0.png]]
[[./gif/network420_raster.png]]
higher freq on plateau cells than in 40 Hz, no sync across plateau/non-plateau cells, no plateau on non-plateau cells.

*** 60 Hz, stim amp 2.0, EE 7.5
[[./gif/network421_traces_gid_0.png]]
[[./gif/network421_traces_gid_126.png]]
[[./gif/network421_raster.png]]
small sync across on plateau cells, no sync on plateau/non-plateau cells, no plateau on non-plateau cells.

*** 60 Hz, stim amp 3.0, EE 7.5
[[./gif/network422_traces_gid_126.png]]
[[./gif/network422_traces_gid_0.png]]
[[./gif/network422_raster.png]]
long plateau, sync across plateau and non-plateau, plateau on non-platau cells

*** 80 Hz,  stim amp 1.0, EE 7.5
[[./gif/network423_traces_gid_0.png]]
[[./gif/network423_traces_gid_126.png]]
[[./gif/network423_raster.png]]
high freq on plateau cells, no sync on plateau cells, no plateau on non-plateau cells

*** 80 Hz,  stim amp 2.0, EE 7.5
[[./gif/network424_traces_gid_0.png]]
[[./gif/network424_traces_gid_126.png]]
[[./gif/network424_raster.png]]
high freq on plateau cells, no sync on plateau cells, activity on non plateau cells, +/- plateau on non-plateau cells

*** 80 Hz,  stim amp 3.0, EE 7.5
[[./gif/network425_traces_gid_0.png]]
[[./gif/network425_traces_gid_126.png]]
[[./gif/network425_raster.png]]
full sync across exc cells, and long plateau


*** 100Hz,  stim amp 1.0, EE 7.5
[[./gif/network426_traces_gid_126.png]]
[[./gif/network426_traces_gid_0.png]]
[[./gif/network426_raster.png]]
no sync

*** 100 Hz, stim amp 2.0, EE 7.5
[[./gif/network427_traces_gid_126.png]]
[[./gif/network427_traces_gid_0.png]]
[[./gif/network427_raster.png]]
small sync and spread activation to non-plateau cells, with plateau induced by the network

*** 100 Hz, stim amp 3.0, EE 7.5
[[./gif/network428_traces_gid_126.png]]
[[./gif/network428_traces_gid_0.png]]
[[./gif/network428_raster.png]]
sync across all cells, and plateau induced in non-plateua cells 

*** only stim to apical, 100HZ, amp 3.0, EE 7.5
[[./gif/network429_traces_gid_126.png]]
[[./gif/network429_traces_gid_0.png]]
[[./gif/network429_raster.png]]


** explore 2 stims to apical, one at 100 Hz, one at 4 Hz
EE 7.5
*** 100 Hz and amp 2.5; 4 Hz and amp 6.5 
[[./gif/network430_traces_gid_0.png]]
[[./gif/network430_traces_gid_126.png]]
[[./gif/network430_raster.png]]
initial spike in some cells after 4Hz stim, but no plateua, then at second stim of 4Hz the exc cells have substained firing

*** 100 Hz and amp 2.5; 4 Hz and amp 7.0
[[./gif/network431_traces_gid_0.png]]
[[./gif/network431_traces_gid_126.png]]
[[./gif/network431_raster.png]]
substained firing since starting of first cycle of 4 Hz.

***  only 100 Hz and amp 2.5
[[./gif/network432_traces_gid_126.png]]
[[./gif/network432_traces_gid_0.png]]
[[./gif/network432_raster.png]]
no firing, small EPSP

*** only  4 Hz and amp 6.5 
[[./gif/network433_traces_gid_0.png]]
[[./gif/network433_traces_gid_126.png]]
[[./gif/network433_raster.png]]
no firing, bigger EPSP

* 06-05-18
goal: meeting

** meeting 
*** presentation
https://docs.google.com/presentation/d/1rknujaExbNTYDLeiGzpWrXt8mv2jRB5vZ0fRcQ3ImG0/edit?usp=sharing

*** meeting notes
- bill: are they NMDA plateaus?
- record from basal dend
- try different frequencies 5-10-20 Hz
- check sync

** explore volt in different loc
recording apical and basal dend
*** stim to basal, and stim to apical at 80 Hz
[[./gif/network436_traces_gid_126.png]]
[[./gif/network436_traces_gid_0.png]]
[[./gif/network436_raster.png]]

*** stim to basal, and stim to apical at 80 Hz for 0.7 second
[[./gif/network437_traces_gid_126.png]]
[[./gif/network437_traces_gid_0.png]]
[[./gif/network437_raster.png]]
apical stim up to 700 ms, and then firing stops

*** stim to basal, and stim to apical at 80 Hz for 1 second
[[./gif/network438_traces_gid_126.png]]
[[./gif/network438_traces_gid_0.png]]
[[./gif/network438_raster.png]]
persistent firing for 1 sec

** discussion on slack
billl [5:38 PM]
how about vbasal in a cell that doesn't have plateau trigger?
sergio [5:39 PM]
uploaded this image: exc cell with only apical stim 
exc cell with only apical stim
billl [5:39 PM]
so getting a plat in all of them
since all get EE stim into bdend NMDA
sergio [5:40 PM]
yes, the EE induce the plateau
billl [5:40 PM]
ok so that's an NMDA latchup situation -- perhaps comparable to what XJ Wang described -- his was NMDA dependent
ok so maybe switch over to the slower stims
if 'normal' plateau lasts 300 ms
then could do 10 hz and get 2 or 3 in there
sergio [5:41 PM]
2-3 spikes, correct?
during the plateau
billl [5:44 PM]
y
or could do 20 hz too -- 4-6 spikes
sergio [5:44 PM]
ok

*** plan
try slower frequencies for stim to apical


* 06-06-18

goal: slower freq


** discussion on slack Salva and bill

salvadord [9:05 PM]
so getting NMDA plateau due to EE is a good thing right? less artificial… or am I missing something?
billl [9:20 PM]
maybe good -- a contrast anyway -- the idea was that the plateau would be due self limiting and would be due to intrinsic process of the cell which would then set up that particular cell as a member of an ensemble;  in the case that sergio shows it seems that all the cells are latched up -- partly due to NMDA -- and that therefore the ensemble is the entire set and the plateau is due to the network rather than a particular (programmed) set of cell-by-cell activations
salvadord [10:02 PM]
hmm ic kind of… so (excuse my ignorance) where would these intrinsic processes /programmed activations come from if not from EE?
billl [10:18 PM]
No ignorance— we made up the theory so can remake it. Thought was that the standby (prepared, plateau) ensemble could be topdown Bayesian prepared set and embedded ensemble would be bottomup info.  But could also do a plateau locally as a hop net
salvadord [10:39 PM]
ah ok yeah that sounds familiar — so currently topdown is modeled as netstim (“plateau_stim”)
billl [10:41 PM]
y, both are via netsrims
salvadord [10:41 PM]
uploaded and commented on this image: image.png 
image.png
your review paper shows this though…
salvadord [10:46 PM]
uploaded and commented on this image: Pasted image at 2018-06-05, 10:46 PM 
Pasted image at 2018-06-05, 10:46 PM
here main distinction seems to be clustered (plateau) vs dsitributed inputs
billl [10:48 PM]
to get the plat need a massive input to 1 bdend so clustered
E0 to E5 here can all be from areas external to where this neuron is
salvadord [10:50 PM]
right ic
so the “local input” label in prev fig makes sense?
billl [10:58 PM]
not sure, was thinking we meant local or focal on the individual neuron but does seem srdjan has diff  viewpoint so maybe not,  he’s always asking for plats emerging from our network so asking for hop net mutual reinforcement?  hmm but to get that the cells need to be spiking so won’t work to st off plats
if local to network has to be ensemble all firing together due to the.
EE which then sets off another group of plats
following a slower osc window of delta or theta
interesting
salvadord [11:04 PM]
sounds complicated :slightly_smiling_face:
for netpyne grant revision was asked to provide proof of concept of evol algos feasibility to tune networks
so plan to add to netpyne, and maybe useful for this kind of problems
billl [11:06 PM]
want to tune this one?
salvadord [11:06 PM]
maybe something interesting for subha too since evol algs will require hpcs
maybe could use this one as case study
billl [11:07 PM]
sure
salvadord [9:13 AM]
So the features that characterize the EEE “Prepared state” plateau vs the “latch-up” plateau are: 1) distributed inputs to single basal branch, 2) plateau in that basal branch, 3) NMDA synapses, 4) glut spillover, 5) inputs from other regions (mostly top-down) — is this correct? missing something?
billl [9:13 AM]
transience
i think latch up will involve 3, 4, maybe 5
selectivity
transience -- plateau for a particular cell should go away;  selectivity -- that cell is selected/prepared and not all the cell
salvadord [9:19 AM]
what do u mean “not all cell”?
billl [9:46 AM]
not all of the cells -- with latchup everybody is going while with selection of prepared cells just a few cells form an ensemble
salvadord [10:13 AM]
ic thx
so guess transience+selectivity mostly consequence of source of inputs to cell — eg. transient because inputs stop
billl [10:24 AM]
confluent input is punctate in time -- other inputs might keep coming in to same basilar dend -- one idea was that at some plats bdend1 makes the plat and bdend2 has the temporal inputs (which now we have going in to apical dend) while at some other time bdend2 might get the confluent input->plat and  bdend1 gets the timed which gives the EE


** exploring lower freq
stim amp 3.0
*** apical stim 10 Hz
[[./gif/network439_traces_gid_126.png]]
[[./gif/network439_traces_gid_0.png]]
[[./gif/network439_raster.png]]
1 spike during plateau

*** apical stim 20 Hz
[[./gif/network440_traces_gid_0.png]]
[[./gif/network440_traces_gid_126.png]]
[[./gif/network440_raster.png]]
3 spikes during plateau, poor sync to non-plateau cells

*** apical stim at 5 Hz
[[./gif/network441_traces_gid_0.png]]
[[./gif/network441_traces_gid_126.png]]
[[./gif/network441_raster.png]]
no sync spikes 

*** only stim to apical at 4 Hz, stim amp 15.0
[[./gif/network442_traces_gid_126.png]]
[[./gif/network442_traces_gid_0.png]]
[[./gif/network442_raster.png]]
initial spike sync in all cells, plateau by EE

** discussion on slack 
sergio [3:38 PM]
this is with a stim of 20 Hz to the apical dendrites. It induces 2-3 spikes in the cells with plateau, and sync on this cells
billl [3:39 PM]
ok so seeing pretty good sync here
how about if shift phase a little
might want to try with slower bg osc too so can control phase better
sergio [3:42 PM]
do you mean stim to the apical dends at slighly diff times?
billl [3:43 PM]
we have an optimal phase based on the bg IPSPs so could shift a little and see if any tighter response
guess can't really see any effect of IPSPs -- might have to be stronger to get effect -- i can see the EPSPs but not the IPSPs
sergio [3:45 PM]
I can get stronger IPSPs, and see the modulation by the inh bkg activity
billl [3:46 PM]
then could shift the apical inputs very slightly to get on diff phaese of the IPSP
sergio [3:47 PM]
ok
*** plan 
stronger IPSP and phase shift apical inputs

** exploring IE
orig value IE= 0.1
*** IE 1.0
[[./gif/network443_traces_gid_0.png]]
[[./gif/network443_traces_gid_126.png]]
[[./gif/network443_raster.png]]
strong inh, clear IPSP, very few spikes, plateau present

*** IE 0.5
[[./gif/network444_traces_gid_126.png]]
[[./gif/network444_traces_gid_0.png]]
[[./gif/network444_raster.png]]
2 spikes, no clear IPSP, small plateau 

*** IE 0.2
[[./gif/network445_traces_gid_0.png]]
[[./gif//network445_traces_gid_126.png]]
[[./gif/network445_raster.png]]
2-3 spikes, no clear IPSP, small plateau


*** IE 0.0
[[./gif/network446_traces_gid_0.png]]
[[./gif/network446_traces_gid_126.png]]
[[./gif/network446_raster.png]]
3-4 spikes, no IPSP, clear plateau 

*** IE 0.3
[[./gif/network447_traces_gid_0.png]]
[[./gif/network447_traces_gid_126.png]]
[[./gif/network447_raster.png]]


*** IE 0.2, shift apical stim 5 ms
[[./gif/network448_traces_gid_0.png]]
[[./gif/network448_traces_gid_126.png]]
[[./gif/network448_raster.png]]
slightly less firing

* 06-07-18
goal: apical input shift
 
** exploring apical shift 
*** IE 0.2, shift apical stim 20 ms
[[./gif/network449_traces_gid_126.png]]
[[./gif/network449_traces_gid_0.png]]
[[./gif/network449_raster.png]]
more firing on exc cells

*** IE 0.2, shift apical stim 10 ms
[[./gif/network450_traces_gid_0.png]]
[[./gif/network450_traces_gid_126.png]]
[[./gif/network450_raster.png]]
decreased firing

*** IE 0.2, shift apical stim 15 ms
[[./gif/network451_traces_gid_0.png]]
[[./gif/network451_traces_gid_126.png]]
[[./gif/network451_raster.png]]
decreased firing 

*** IE 0.2, shift apical stim 25 ms
[[./gif/network452_traces_gid_126.png]]
[[./gif/network452_traces_gid_0.png]]
[[./gif/network452_raster.png]]
better firing 

*** IE 0.2, shift apical stim 30 ms
[[./gif/network453_traces_gid_126.png]]
[[./gif/network453_traces_gid_0.png]]
[[./gif/network453_raster.png]]
better firing 

*** IE 0.2, shift apical stim 35 ms
[[./gif/network454_traces_gid_126.png]]
[[./gif/network454_traces_gid_0.png]]
[[./gif/network454_raster.png]]

* 06-08-18
goal: present the result to group

** discussion on slack
sergio [12:38 PM]
there is not a clear IPSP on the exc cells, but there are changes in the firing of exc cells
time shift the apical stim changes the firing pattern of the exc cells
billl [12:47 PM]
maybe increase till have IPSP? -- this looks about same as before i think?
ie not very tight firing
sergio [12:50 PM]
ok, let me get a clear IPSP

*** plan 
get clear IPSP

** higher IPSP
*** IE 2.0
[[./gif/network455_traces_gid_126.png]]
[[./gif/network455_traces_gid_0.png]]
[[./gif/network455_raster.png]]
no spikes, no clear IPSP

*** IE 3.0
[[./gif/network456_traces_gid_0.png]]
[[./gif/network456_traces_gid_126.png]]
[[./gif/network456_raster.png]]
no spikes, no clear IPSP, but slightly more hyperpolarized    

*** IE 4.0
[[./gif/network457_traces_gid_126.png]]
[[./gif/network457_traces_gid_0.png]]
[[./gif/network457_raster.png]]
no spikes, no clear IPSP, but slightly more hyperpolarized    

*** IE 10.0
[[./gif/network458_traces_gid_126.png]]
[[./gif/network458_traces_gid_0.png]]
[[./gif/network458_raster.png]]
no soikes, no clear IPSP, more hyperpolarized 

* 06-11-18
goal: start paper

** discussion on slack
billl [10:14 AM]
see IPSPs?
sergio [10:26 AM]
no clear IPSP, let me show you a fig
sergio [10:30 AM]
uploaded this image: High IE 10.0 
High IE 10.0
sergio [10:30 AM]
uploaded this image: high IE 10.0 
high IE 10.0
sergio [10:30 AM]
the exc cell gets more hyperpolarized
billl [10:40 AM]
ic -- ok let's start to put together the paper;  what are your most interesting findings?
make a gdoc and start adding in the figs
sergio [10:42 AM]
we can make different points: the generation of plateaus in the reduced cell model, the synchronisation across cells, and the spreading to non-plateau cells
ok, I’ll start the gdoc
billl [11:16 AM]
joe you around to help sergio get this organized?
and penny?
sergio [11:18 AM]
I have this outline that I did a while ago
sergio [11:18 AM]
shared this file 
eee network paper outline

Document from Google Drive
billl [11:18 AM]
how many figs? -- let's aim for 6
sergio [11:18 AM]
ok
billl [11:19 AM]
can be 5 or 7 or 8 too of course but put together your narrative as a set of figs with captoins
sergio [11:21 AM]
ok let me start working with the narrative and captions
billl [11:21 AM]
i liked some of your recent stuff so that's what i was focused on but of course this intro stuff also important
penny [11:51 AM]
Sounds good~ reading the google doc now
joe [3:07 PM]
Sorry guys, some family stuff came up. I won't be at my computer for another couple hours.
sergio [3:12 PM]
no problem

*** plan
Start outline of paper


** paper outline
https://docs.google.com/document/d/1L_mP4L005WBHXO61tkIGC_ftfgQV3vusRyxrhmQ8X34/edit?usp=sharing

* 06-12-18
goal: meeting and paper

** paper
*** Figure 1
plotConn and plot2Dnet don't work, ask salva 

** meeting
- bill: need to work on climax and then make the story
- higher point of the paper: synchrony with stim at different frequencies and change of firing by shifting the stim
- include raster on initial rasters
- salva: include plots with LFP (new feature in netpyne)

** recording LFP 
added:
cfg.recordLFP = [ [150, 400, 200] ]

*** error
Traceback (most recent call last):
  File "init.py", line 105, in <module>
    sim.saveData()                              # save params, cell info and sim output to file (pickle,mat,txt,etc)#
  File "/usr/site/nrniv/local/python/netpyne/netpyne/simFuncs.py", line 1629, in saveData
    json.dump(dataSave, fileObj)
  File "/usr/lib/python2.7/json/__init__.py", line 189, in dump
    for chunk in iterable:
  File "/usr/lib/python2.7/json/encoder.py", line 434, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File "/usr/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib/python2.7/json/encoder.py", line 442, in _iterencode
    o = _default(o)
  File "/usr/lib/python2.7/json/encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: array([[ 6.72939370e+01,  2.90901878e-02, -6.10909202e-01,
         2.90901878e-02,  2.90901878e-02, -5.54829108e+01,
        -7.08329093e+01, -7.08329093e+01, -5.54829108e+01,
        -4.94029090e+01, -4.94029090e+01, -2.35809104e+01,
         2.90901878e-02,  4.88239358e+01,  5.14139321e+01,
        -2.35809104e+01, -6.05288333e+01, -9.32530136e+01],
       [ 1.46095865e+02, -5.33636369e-01, -5.71363644e+00,
        -5.33636369e-01, -5.33636369e-01,  1.66436358e+00,
        -2.86563639e+00, -2.86563639e+00,  1.66436358e+00,
         1.66436358e+00,  1.66436358e+00, -3.57063636e+00,
        -5.33636369e-01,  1.45135859e+02,  1.45135859e+02,
        -3.57063636e+00, -3.73266355e+01, -7.22963363e+01],
       [ 5.95999908e+00,  0.00000000e+00,  0.00000000e+00,
         0.00000000e+00,  0.00000000e+00, -3.39600372e+00,
        -1.14560013e+01, -1.14560013e+01, -3.39600372e+00,
        -1.91600037e+00, -1.91600037e+00,  9.74399567e+00,
         0.00000000e+00,  5.95999908e+00,  5.95999908e+00,
         9.74399567e+00, -3.51289261e+00, -1.96518768e+01]]) is not JSON serializable

*** ask salva

** figure 2
recorded all cells
recorded voltage from basal and soma 
[[./gif/network460_traces_gid_5.png]]
[[./gif/network460_traces_gid_126.png]]
[[./gif/network460_raster.png]]

* 06-13-18
goal: paper 
** record GABA and AMPA NMDA
*** check synMechs
sim.net.cells[0].secs.soma_2.synMechs

*** record GABAA Fast
cfg.recordTraces['GABAAfast'] = {'sec':'soma_2', 'loc':0.5, 'synMech': 'GABAAfast', 'var': 'i'}
cfg.recordTraces['GABAAslow'] = {'sec':'soma_2', 'loc':0.5, 'synMech': 'GABAAslow', 'var': 'i'}

***  plots GABAA fast
[[./gif/network461_traces_gid_5.png]]
[[./gif/network461_traces_gid_126.png]]

*** plots GABAA slow
[[./gif/network462_traces_gid_126.png]]
[[./gif/network462_traces_gid_5.png]]

** discussion on slack
billl [3:28 PM]
what page? what fig working on?
@sergio

sergio [3:28 PM]
page 5

billl [3:29 PM]
how do i goto p5?
maybe can outline by fig#s?
2A?

sergio [3:30 PM]
ok, let outline by fig3
fig#
2C

billl [3:30 PM]
uploaded this image: 17j.png 


billl [3:30 PM]
this one?
show me here -- too hard to find

sergio [3:32 PM]
uploaded this image: page5 


sergio [3:32 PM]
it is the next page after the raster

billl [3:32 PM]
don't we need to start this fig with a raster?  -- what is context?

sergio [3:33 PM]
the idea is to show the generation of plateaus in the network

billl [3:34 PM]
so don't we need to start with network activity?
but ok so let's start with this
have a figlegend -- lms

sergio [3:34 PM]
fig legend on page 5

billl [3:35 PM]
ok so this does start with A  2. A) Raster plot of simulation where plateau was induced by simulation of the basal dendrites in half of the subset of PT5 cells. Stimulation
what to do about the I cells?
hid i think
need a methods figure that shows bg?
not sure

sergio [3:36 PM]
maybe we can do that, or just show the inh activity only in 1 fig

billl [3:37 PM]
so that would be this fig i guess
ok let's try that

sergio [3:37 PM]
ok

billl [3:37 PM]
so let's clean up this fig
bigger symbols so can see them
get rid of axes maybe?
start showing at 150 ms ? -- no need to show init for I cells

sergio [3:38 PM]
definitely bigger symbols

billl [3:39 PM]
scalebar for time insteadof axes

sergio [3:39 PM]
ok, I can start at 150 ms
ok, I’ll use a scale bar for time

billl [3:40 PM]
i'm just giving you these ideas as examples -- generally no axes -- scalebars are better ; fatter lines, bigger symbols, stuff should be visible
put together the pieces as panels
maybe you feel premature for this?
can't start anything at 0
always takes some time to get a ss
what is that ramp up for lwer R of 2D?

sergio [3:42 PM]
I was thinking to put everything on the document, and then start working in the graph art later

billl [3:42 PM]
in 2B can we overlay dend and soma with diff colors?

sergio [3:42 PM]
lower R of 2D is a GABAA current

billl [3:43 PM]
why show that?

sergio [3:43 PM]
yep, I was thinking of diff colors for dend and soma

billl [3:43 PM]
oh 2D isn't there at all
ok thinking is nice :)
but how about doing?

sergio [3:44 PM]
it doesn’t look nice the ramp, I can remove it

billl [3:44 PM]
so 2D is going to be NMDA currents?
why show synaptic currents?
what is point you are making?

sergio [3:44 PM]
2D is going to be NMDA
to show the syn currents during plateau

billl [3:45 PM]
do they do anything unexpected?
NMDA current will be high -- so that's important to show that NMDA underlies the plateua, right?
GABA currents will also inc due to increased driving force
but why is that interesting?

sergio [3:46 PM]
I was thinking that I need to use them as central part of the generation of plateaus

billl [3:50 PM]
use GABAA? -- that doesn't generate plats

sergio [3:50 PM]
for the NMDA

billl [3:51 PM]
yeah ok -- i asked about the GABAA
anyway -- go thru my comments above and make the changes and let's look at the redone fig in ~1-2h?
as we were saying yesterday , we have to move this forwrad
@subha have you had a chance to look at any of htis?

sergio [3:52 PM]
ok let me work on it

*** plan 
get rid of GABAA
start raster 150 ms
produce figure 

** recording NMDA

*** plots
[[./gif/network463_traces_gid_5.png]]
[[./gif/network463_traces_gid_0.png]]
[[./gif/network463_traces_gid_126.png]]
